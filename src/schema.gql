# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type UserCountAggregate {
  id: Int!
  email: Int!
  passwordHash: Int!
  roleId: Int!
  tier: Int!
  referralCode: Int!
  referredBy: Int!
  createdAt: Int!
  updatedAt: Int!
  isEmailVerified: Int!
  emailVerificationToken: Int!
  emailVerificationTokenExpiry: Int!
  _all: Int!
}

type UserMinAggregate {
  id: String
  email: String
  passwordHash: String
  roleId: String
  tier: UserTier
  referralCode: String
  referredBy: String
  createdAt: DateTime
  updatedAt: DateTime
  isEmailVerified: Boolean
  emailVerificationToken: String
  emailVerificationTokenExpiry: DateTime
}

enum UserTier {
  ZERO
  BRONZE
  SILVER
  GOLD
  PLATINUM
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type UserMaxAggregate {
  id: String
  email: String
  passwordHash: String
  roleId: String
  tier: UserTier
  referralCode: String
  referredBy: String
  createdAt: DateTime
  updatedAt: DateTime
  isEmailVerified: Boolean
  emailVerificationToken: String
  emailVerificationTokenExpiry: DateTime
}

type AggregateUser {
  _count: UserCountAggregate
  _min: UserMinAggregate
  _max: UserMaxAggregate
}

type UserCount {
  resellerPaymentsMade: Int!
  resellerPaymentsReceived: Int!
  adminLogs: Int!
  supportMessages: Int!
  ConsumerSale: Int!
  ConsumerSaleAdjustedBys: Int!
  StockReceiptBatchReceivedBys: Int!
  StockReceiptBatchConfirmedBys: Int!
  StockTransferRequests: Int!
  StockTransferApprovals: Int!
  Store: Int!
  ConsumerReceipt: Int!
  ResellerSales: Int!
  BillerResellerSale: Int!
  ResellerSale: Int!
  SalesReturnReceivers: Int!
  SalesReturnRequesters: Int!
  SalesReturn: Int!
  PurchaseReturnInitiators: Int!
  PurchaseReturnApprovers: Int!
  Payment: Int!
  ResellerTierHistory: Int!
  ResellerTierHistoryChangedBys: Int!
  ResellerProfile: Int!
  RequestedResellers: Int!
  Notification: Int!
  Fulfillment: Int!
  BillerQuotation: Int!
  ResellerQuotation: Int!
  PurchaseRequisition: Int!
  Supplier: Int!
}

type UserGroupBy {
  id: String!
  email: String!
  passwordHash: String!
  roleId: String!
  tier: UserTier
  referralCode: String
  referredBy: String
  createdAt: DateTime!
  updatedAt: DateTime!
  isEmailVerified: Boolean!
  emailVerificationToken: String
  emailVerificationTokenExpiry: DateTime
  _count: UserCountAggregate
  _min: UserMinAggregate
  _max: UserMaxAggregate
}

type PermissionCount {
  roles: Int!
}

type Permission {
  id: ID!
  name: String!
  module: String!
  action: String!
  roles: [Role!]
  _count: PermissionCount!
}

type RoleCount {
  permissions: Int!
  users: Int!
}

type Role {
  id: ID!
  name: String!
  description: String
  createdBy: String
  createdAt: DateTime!
  permissions: [Permission!]
  users: [User!]
  _count: RoleCount!
}

type ResellerProfile {
  userId: ID!
  billerId: String
  requestedBillerId: String
  tier: UserTier!
  creditLimit: Float!
  outstandingBalance: Float!
  isActive: Boolean!
  profileStatus: ProfileStatus!
  requestedAt: DateTime!
  activatedAt: DateTime
  rejectedAt: DateTime
  rejectionReason: String
  user: User!
  biller: User
  requestedBiller: User
}

enum ProfileStatus {
  PENDING
  ACTIVE
  REJECTED
}

type VariantFacetValue {
  id: ID!
  productVariantId: String!
  facetId: String!
  value: String!
  variant: ProductVariant!
  facet: Facet!
}

type FacetCount {
  products: Int!
  variants: Int!
}

type Facet {
  id: ID!
  name: String!
  code: String!
  isPrivate: Boolean!
  values: [String!]
  createdAt: DateTime!
  updatedAt: DateTime!
  products: [ProductFacetValue!]
  variants: [VariantFacetValue!]
  _count: FacetCount!
}

type ProductFacetValue {
  id: ID!
  productId: String!
  facetId: String!
  value: String!
  product: Product!
  facet: Facet!
}

type ProductCount {
  variants: Int!
  facets: Int!
}

type Product {
  id: ID!
  name: String!
  description: String
  barcode: String
  createdAt: DateTime!
  updatedAt: DateTime!
  variants: [ProductVariant!]
  facets: [ProductFacetValue!]
  _count: ProductCount!
}

type PurchaseOrderItem {
  id: ID!
  purchaseOrderId: String!
  productVariantId: String!
  quantity: Int!
  unitCost: Float!
  purchaseOrder: PurchaseOrder!
  productVariant: ProductVariant!
}

type SupplierPayment {
  id: ID!
  supplierId: String!
  purchaseOrderId: String
  amount: Float!
  paymentDate: DateTime!
  method: String!
  notes: String
  supplier: Supplier!
  purchaseOrder: PurchaseOrder
}

type PurchaseOrderCount {
  items: Int!
  receipts: Int!
  payments: Int!
}

type PurchaseOrder {
  id: ID!
  supplierId: String!
  storeId: String
  invoiceNumber: String!
  status: PurchaseOrderStatus!
  phase: PurchasePhase!
  dueDate: DateTime!
  totalAmount: Float!
  createdAt: DateTime!
  updatedAt: DateTime!
  supplier: Supplier!
  store: Store
  items: [PurchaseOrderItem!]
  receipts: [StockReceiptBatch!]
  payments: [SupplierPayment!]
  _count: PurchaseOrderCount!
}

enum PurchaseOrderStatus {
  PENDING
  RECEIVED
  PARTIALLY_PAID
  PAID
  CANCELLED
}

enum PurchasePhase {
  REQUISITION
  RFQ
  NEGOTIATION
  APPROVAL
  ORDERED
  RECEIVING
  INVOICING
  COMPLETED
}

type SupplierCatalog {
  id: ID!
  supplierId: String!
  productVariantId: String!
  defaultCost: Float!
  leadTimeDays: Int
  isPreferred: Boolean!
  supplier: Supplier!
  productVariant: ProductVariant!
}

type PurchaseRequisitionItem {
  id: ID!
  requisitionId: String!
  productVariantId: String!
  requestedQty: Int!
  notes: String
  requisition: PurchaseRequisition!
  productVariant: ProductVariant!
}

type PurchaseRequisitionCount {
  items: Int!
  quotes: Int!
}

type PurchaseRequisition {
  id: ID!
  storeId: String!
  requestedById: String!
  status: PurchaseRequisitionStatus!
  createdAt: DateTime!
  updatedAt: DateTime!
  store: Store!
  requestedBy: User!
  items: [PurchaseRequisitionItem!]
  quotes: [SupplierQuote!]
  _count: PurchaseRequisitionCount!
}

enum PurchaseRequisitionStatus {
  DRAFT
  SENT
  APPROVED
  REJECTED
}

type SupplierQuoteItem {
  id: ID!
  quoteId: String!
  productVariantId: String!
  unitCost: Float!
  minQty: Int
  leadTimeDays: Int
  quote: SupplierQuote!
  productVariant: ProductVariant!
}

type SupplierQuoteCount {
  items: Int!
}

type SupplierQuote {
  id: ID!
  requisitionId: String!
  supplierId: String!
  status: SupplierQuoteStatus!
  validUntil: DateTime
  notes: String
  createdAt: DateTime!
  updatedAt: DateTime!
  requisition: PurchaseRequisition!
  supplier: Supplier!
  items: [SupplierQuoteItem!]
  _count: SupplierQuoteCount!
}

enum SupplierQuoteStatus {
  DRAFT
  SUBMITTED
  SELECTED
  REJECTED
}

type SupplierCount {
  purchaseOrders: Int!
  payments: Int!
  returns: Int!
  catalogs: Int!
  quotes: Int!
}

type Supplier {
  id: ID!
  name: String!
  contactInfo: JSON
  isFrequent: Boolean!
  creditLimit: Float!
  currentBalance: Float!
  paymentTerms: String
  notes: String
  createdAt: DateTime!
  updatedAt: DateTime!
  userId: String
  purchaseOrders: [PurchaseOrder!]
  payments: [SupplierPayment!]
  returns: [PurchaseReturn!]
  catalogs: [SupplierCatalog!]
  quotes: [SupplierQuote!]
  user: User
  _count: SupplierCount!
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON

type PurchaseReturnCount {
  items: Int!
}

type PurchaseReturn {
  id: ID!
  supplierId: String!
  initiatedById: String!
  approvedById: String!
  status: ReturnStatus!
  reason: String
  createdAt: DateTime!
  updatedAt: DateTime!
  supplier: Supplier!
  initiatedBy: User!
  approvedBy: User!
  items: [PurchaseReturnItem!]
  _count: PurchaseReturnCount!
}

enum ReturnStatus {
  PENDING
  ACCEPTED
  REJECTED
  FULFILLED
}

type PurchaseReturnItem {
  id: ID!
  purchaseReturnId: String!
  productVariantId: String!
  batchId: String!
  quantity: Int!
  return: PurchaseReturn!
  productVariant: ProductVariant!
  batch: StockReceiptBatch!
}

type StockReceiptBatchCount {
  items: Int!
  purchaseReturns: Int!
  PurchaseOrder: Int!
}

type StockReceiptBatch {
  id: ID!
  purchaseOrderId: String!
  storeId: String!
  receivedById: String!
  confirmedById: String!
  waybillUrl: String
  receivedAt: DateTime!
  store: Store!
  receivedBy: User!
  confirmedBy: User!
  items: [StockReceiptBatchItem!]
  purchaseReturns: [PurchaseReturnItem!]
  PurchaseOrder: [PurchaseOrder!]
  _count: StockReceiptBatchCount!
}

type StockReceiptBatchItem {
  id: ID!
  stockReceiptBatchId: String!
  productVariantId: String!
  quantity: Int!
  batch: StockReceiptBatch!
  productVariant: ProductVariant!
}

type ConsumerSaleItem {
  id: ID!
  consumerSaleId: String!
  productVariantId: String!
  quantity: Int!
  unitPrice: Float!
  sale: ConsumerSale!
  productVariant: ProductVariant!
}

type ResellerSaleItem {
  id: ID!
  resellerSaleId: String!
  productVariantId: String!
  quantity: Int!
  unitPrice: Float!
  sale: ResellerSale!
  productVariant: ProductVariant!
}

type ResellerPayment {
  id: ID!
  saleOrderId: String!
  resellerId: String!
  resellerSaleId: String
  amount: Float!
  method: PaymentMethod!
  reference: String
  status: PaymentStatus!
  receivedAt: DateTime!
  receivedById: String!
  saleOrder: SaleOrder!
  reseller: User!
  sale: ResellerSale
  receivedBy: User!
}

enum PaymentMethod {
  CASH
  TRANSFER
  CARD
  WALLET
  BANK
  MIXED
}

enum PaymentStatus {
  PENDING
  CONFIRMED
  FAILED
}

type SalesReturnItem {
  id: ID!
  salesReturnId: String!
  productVariantId: String!
  quantity: Int!
  condition: String!
  return: SalesReturn!
  productVariant: ProductVariant!
}

type SalesReturnCount {
  items: Int!
}

type SalesReturn {
  id: ID!
  type: SaleType!
  consumerSaleId: String
  resellerSaleId: String
  returnedById: String!
  receivedById: String!
  storeId: String!
  status: ReturnStatus!
  returnLocation: ReturnLocation!
  isApprovedLate: Boolean!
  approvedById: String
  createdAt: DateTime!
  updatedAt: DateTime!
  consumerSale: ConsumerSale
  resellerSale: ResellerSale
  returnedBy: User!
  receivedBy: User!
  approvedBy: User
  store: Store!
  items: [SalesReturnItem!]
  _count: SalesReturnCount!
}

enum SaleType {
  CONSUMER
  RESELLER
}

enum ReturnLocation {
  LAGOS
  OUTSIDE_LAGOS
}

type ResellerSaleCount {
  items: Int!
  payments: Int!
  SalesReturn: Int!
}

type ResellerSale {
  id: ID!
  resellerId: String!
  billerId: String!
  storeId: String!
  quotationId: String
  status: SaleStatus!
  totalAmount: Float!
  approvedById: String
  approvedAt: DateTime
  createdAt: DateTime!
  updatedAt: DateTime!
  SaleOrderid: String!
  reseller: User!
  biller: User!
  approvedBy: User
  quotation: Quotation
  store: Store!
  items: [ResellerSaleItem!]
  payments: [ResellerPayment!]
  SalesReturn: [SalesReturn!]
  SaleOrder: SaleOrder!
  _count: ResellerSaleCount!
}

enum SaleStatus {
  PENDING
  APPROVED
  FULFILLED
  CANCELLED
  PAID
}

type Fulfillment {
  id: ID!
  saleOrderId: String!
  type: FulfillmentType!
  deliveryPersonnelId: String
  deliveryAddress: String
  status: FulfillmentStatus!
  cost: Float
  confirmationPin: String
  createdAt: DateTime!
  updatedAt: DateTime!
  saleOrder: SaleOrder!
  deliveryPersonnel: User
}

enum FulfillmentType {
  PICKUP
  DELIVERY
}

enum FulfillmentStatus {
  PENDING
  ASSIGNED
  IN_TRANSIT
  DELIVERED
  CANCELLED
}

type SaleOrderCount {
  ConsumerPayment: Int!
  ResellerPayment: Int!
}

type SaleOrder {
  id: ID!
  storeId: String!
  billerId: String!
  type: SaleType!
  status: SaleStatus!
  phase: OrderPhase!
  totalAmount: Float!
  createdAt: DateTime!
  updatedAt: DateTime!
  resellerSaleid: String
  consumerSale: ConsumerSale
  resellerSale: ResellerSale
  fulfillment: Fulfillment
  quotation: Quotation
  ConsumerPayment: [ConsumerPayment!]
  ResellerPayment: [ResellerPayment!]
  _count: SaleOrderCount!
}

enum OrderPhase {
  QUOTATION
  SALE
  FULFILLMENT
}

type ConsumerPayment {
  id: ID!
  consumerSaleId: String!
  saleOrderId: String!
  amount: Float!
  method: PaymentMethod!
  status: PaymentStatus!
  receivedAt: DateTime!
  reference: String
  saleOrder: SaleOrder!
  sale: ConsumerSale!
}

type ConsumerReceipt {
  id: ID!
  consumerSaleId: String!
  issuedById: String!
  issuedAt: DateTime!
  receiptUrl: String
  sale: ConsumerSale!
  issuedBy: User!
}

type ConsumerSaleCount {
  items: Int!
  payments: Int!
  SalesReturn: Int!
  CustomerProfile: Int!
}

type ConsumerSale {
  id: ID!
  customerId: String
  storeId: String!
  billerId: String!
  channel: SaleChannel!
  saleOrderId: String!
  quotationId: String
  status: SaleStatus!
  totalAmount: Float!
  adjustmentType: AdjustmentType
  adjustedById: String
  createdAt: DateTime!
  updatedAt: DateTime!
  customer: Customer
  store: Store!
  biller: User!
  adjustedBy: User
  quotation: Quotation
  items: [ConsumerSaleItem!]
  payments: [ConsumerPayment!]
  receipt: ConsumerReceipt
  SalesReturn: [SalesReturn!]
  CustomerProfile: [CustomerProfile!]
  SaleOrder: SaleOrder!
  _count: ConsumerSaleCount!
}

enum SaleChannel {
  WEB
  APP
  IN_STORE
}

enum AdjustmentType {
  NONE
  INCREASE
  DISCOUNT
}

type CustomerPreferenceProfileCount {
  CustomerProfile: Int!
}

type CustomerPreferenceProfile {
  id: ID!
  customerId: String!
  frequentlyBoughtVariants: JSON!
  lastPurchaseDate: DateTime
  eligibleForDiscounts: Boolean!
  customer: Customer!
  CustomerProfile: [CustomerProfile!]
  _count: CustomerPreferenceProfileCount!
}

type CustomerCount {
  sales: Int!
  CustomerPreferenceProfile: Int!
  Quotation: Int!
}

type Customer {
  id: ID!
  fullName: String!
  phone: String
  email: String
  preferredStoreId: String
  preferredStore: Store
  sales: [ConsumerSale!]
  CustomerPreferenceProfile: [CustomerPreferenceProfile!]
  Quotation: [Quotation!]
  _count: CustomerCount!
}

type QuotationCount {
  items: Int!
  ConsumerSale: Int!
}

type Quotation {
  id: ID!
  type: SaleType!
  channel: SaleChannel!
  storeId: String!
  consumerId: String
  resellerId: String
  billerId: String
  status: QuotationStatus!
  totalAmount: Float!
  saleOrderId: String
  createdAt: DateTime!
  updatedAt: DateTime!
  store: Store!
  biller: User
  consumer: Customer
  reseller: User
  items: [QuotationItem!]
  sale: ResellerSale
  SaleOrder: SaleOrder
  ConsumerSale: [ConsumerSale!]
  _count: QuotationCount!
}

enum QuotationStatus {
  DRAFT
  SENT
  CONFIRMED
  APPROVED
  REJECTED
}

type QuotationItem {
  id: ID!
  quotationId: String!
  productVariantId: String!
  quantity: Int!
  unitPrice: Float!
  quotation: Quotation!
  productVariant: ProductVariant!
}

type StockTransferCount {
  items: Int!
}

type StockTransfer {
  id: ID!
  fromStoreId: String!
  toStoreId: String!
  requestedById: String!
  approvedById: String!
  status: TransferStatus!
  createdAt: DateTime!
  fromStore: Store!
  toStore: Store!
  requestedBy: User!
  approvedBy: User!
  items: [StockTransferItem!]
  _count: StockTransferCount!
}

enum TransferStatus {
  PENDING
  APPROVED
  COMPLETED
  REJECTED
}

type StockTransferItem {
  id: ID!
  stockTransferId: String!
  productVariantId: String!
  quantity: Int!
  transfer: StockTransfer!
  productVariant: ProductVariant!
}

type ProductSalesStats {
  id: ID!
  productVariantId: String!
  totalSold: Int!
  totalReturned: Int!
  lastSoldAt: DateTime
  monthlySales: JSON!
  productVariant: ProductVariant!
}

type StockMovementCount {
  items: Int!
}

"""Unified stock movements"""
type StockMovement {
  id: ID!
  storeId: String!
  direction: MovementDirection!
  movementType: MovementType!
  referenceEntity: String!
  referenceId: String!
  createdAt: DateTime!
  store: Store!
  items: [StockMovementItem!]
  _count: StockMovementCount!
}

enum MovementDirection {
  IN
  OUT
}

enum MovementType {
  PURCHASE
  TRANSFER
  RETURN_SALE
  RETURN_PURCHASE
  SALE
}

type StockMovementItem {
  id: ID!
  stockMovementId: String!
  productVariantId: String!
  quantity: Int!
  movement: StockMovement!
  productVariant: ProductVariant!
}

type ProductVariantTierPrice {
  id: ID!
  productVariantId: String!
  tier: UserTier!
  price: Float!
  variant: ProductVariant!
}

type ProductVariantCount {
  stockItems: Int!
  receiptItems: Int!
  quotationItems: Int!
  resellerItems: Int!
  consumerItems: Int!
  returnItems: Int!
  purchaseReturnItems: Int!
  transferItems: Int!
  PurchaseOrderItem: Int!
  StockMovementItem: Int!
  PurchaseRequisitionItem: Int!
  SupplierCatalog: Int!
  SupplierQuoteItem: Int!
  ProductVariantTierPrice: Int!
  facets: Int!
}

type ProductVariant {
  id: ID!
  productId: String
  name: String
  size: String!
  concentration: String!
  packaging: String!
  barcode: String
  price: Float!
  resellerPrice: Float!
  createdAt: DateTime!
  updatedAt: DateTime!
  product: Product
  stockItems: [Stock!]
  receiptItems: [StockReceiptBatchItem!]
  quotationItems: [QuotationItem!]
  resellerItems: [ResellerSaleItem!]
  consumerItems: [ConsumerSaleItem!]
  returnItems: [SalesReturnItem!]
  purchaseReturnItems: [PurchaseReturnItem!]
  transferItems: [StockTransferItem!]
  stats: ProductSalesStats
  PurchaseOrderItem: [PurchaseOrderItem!]
  StockMovementItem: [StockMovementItem!]
  PurchaseRequisitionItem: [PurchaseRequisitionItem!]
  SupplierCatalog: [SupplierCatalog!]
  SupplierQuoteItem: [SupplierQuoteItem!]
  ProductVariantTierPrice: [ProductVariantTierPrice!]
  facets: [VariantFacetValue!]
  _count: ProductVariantCount!
}

type Stock {
  id: ID!
  storeId: String!
  productVariantId: String!
  quantity: Int!
  reserved: Int!
  reorderPoint: Int
  reorderQty: Int
  createdAt: DateTime!
  updatedAt: DateTime!
  store: Store!
  productVariant: ProductVariant!
}

type InvoiceImport {
  id: ID!
  url: String!
  supplierName: String
  storeId: String
  status: InvoiceImportStatus!
  parsed: JSON
  message: String
  createdAt: DateTime!
  updatedAt: DateTime!
  store: Store
}

enum InvoiceImportStatus {
  PENDING
  PROCESSING
  READY
  NEEDS_REVIEW
  FAILED
  COMPLETED
}

type StoreCount {
  stocks: Int!
  receipts: Int!
  transfersOut: Int!
  transfersIn: Int!
  customerSales: Int!
  salesReturns: Int!
  resellerSales: Int!
  movements: Int!
  Customer: Int!
  CustomerProfile: Int!
  Quotation: Int!
  PurchaseRequisition: Int!
  purchaseOrders: Int!
  InvoiceImport: Int!
}

type Store {
  id: ID!
  name: String!
  location: String
  isMain: Boolean!
  managerId: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  manager: User!
  stocks: [Stock!]
  receipts: [StockReceiptBatch!]
  transfersOut: [StockTransfer!]
  transfersIn: [StockTransfer!]
  customerSales: [ConsumerSale!]
  salesReturns: [SalesReturn!]
  resellerSales: [ResellerSale!]
  movements: [StockMovement!]
  Customer: [Customer!]
  CustomerProfile: [CustomerProfile!]
  Quotation: [Quotation!]
  PurchaseRequisition: [PurchaseRequisition!]
  purchaseOrders: [PurchaseOrder!]
  InvoiceImport: [InvoiceImport!]
  _count: StoreCount!
}

type CustomerProfileCount {
  referrals: Int!
  sales: Int!
}

type CustomerProfile {
  userId: ID!
  fullName: String!
  phone: String
  email: String
  gender: String
  birthday: DateTime
  referredById: String
  preferredStoreId: String
  preferencesid: String
  profileStatus: ProfileStatus!
  requestedAt: DateTime!
  activatedAt: DateTime
  isPhoneVerified: Boolean!
  phoneVerificationCode: String
  phoneVerificationCodeExpiry: DateTime
  user: User!
  preferredStore: Store
  referredBy: CustomerProfile
  referrals: [CustomerProfile!]
  sales: [ConsumerSale!]
  preferences: CustomerPreferenceProfile
  _count: CustomerProfileCount!
}

type AdminActionLog {
  id: ID!
  adminId: String!
  action: String!
  entityType: String!
  entityId: String!
  beforeChange: JSON
  afterChange: JSON
  timestamp: DateTime!
  admin: User!
}

type SupportMessage {
  id: ID!
  userId: String!
  isAdmin: Boolean!
  message: String!
  createdAt: DateTime!
  user: User!
}

type Payment {
  id: ID!
  type: PaymentType!
  sourceId: String!
  referenceEntity: String!
  referenceId: String!
  amount: Float!
  method: PaymentMethod!
  receivedAt: DateTime!
  receivedById: String!
  receivedBy: User!
}

enum PaymentType {
  CONSUMER
  RESELLER
  SUPPLIER
}

type ResellerTierHistory {
  id: ID!
  userId: String!
  fromTier: UserTier!
  toTier: UserTier!
  changedBy: String!
  changedAt: DateTime!
  user: User!
  admin: User!
}

type Notification {
  id: ID!
  userId: String!
  type: String!
  message: String!
  isRead: Boolean!
  createdAt: DateTime!
  user: User!
}

type User {
  id: ID!
  email: String!
  passwordHash: String!
  roleId: String!
  tier: UserTier
  referralCode: String
  referredBy: String
  createdAt: DateTime!
  updatedAt: DateTime!
  isEmailVerified: Boolean!
  emailVerificationToken: String
  emailVerificationTokenExpiry: DateTime
  role: Role!
  resellerProfile: ResellerProfile
  customerProfile: CustomerProfile
  resellerPaymentsMade: [ResellerPayment!]
  resellerPaymentsReceived: [ResellerPayment!]
  adminLogs: [AdminActionLog!]
  supportMessages: [SupportMessage!]
  ConsumerSale: [ConsumerSale!]
  ConsumerSaleAdjustedBys: [ConsumerSale!]
  StockReceiptBatchReceivedBys: [StockReceiptBatch!]
  StockReceiptBatchConfirmedBys: [StockReceiptBatch!]
  StockTransferRequests: [StockTransfer!]
  StockTransferApprovals: [StockTransfer!]
  Store: [Store!]
  ConsumerReceipt: [ConsumerReceipt!]
  ResellerSales: [ResellerSale!]
  BillerResellerSale: [ResellerSale!]
  ResellerSale: [ResellerSale!]
  SalesReturnReceivers: [SalesReturn!]
  SalesReturnRequesters: [SalesReturn!]
  SalesReturn: [SalesReturn!]
  PurchaseReturnInitiators: [PurchaseReturn!]
  PurchaseReturnApprovers: [PurchaseReturn!]
  Payment: [Payment!]
  ResellerTierHistory: [ResellerTierHistory!]
  ResellerTierHistoryChangedBys: [ResellerTierHistory!]
  ResellerProfile: [ResellerProfile!]
  RequestedResellers: [ResellerProfile!]
  Notification: [Notification!]
  Fulfillment: [Fulfillment!]
  BillerQuotation: [Quotation!]
  ResellerQuotation: [Quotation!]
  PurchaseRequisition: [PurchaseRequisition!]
  Supplier: [Supplier!]
  _count: UserCount!
}

type AffectedRows {
  count: Int!
}

type AuthResponse {
  accessToken: String!
  user: User!
}

type OutboxStatusCounts {
  pending: Int!
  failed: Int!
  published: Int!
}

type OutboxTypeCount {
  type: String!
  pending: Int!
  failed: Int!
  published: Int!
}

type OutboxDayStatus {
  date: String!
  pending: Int!
  failed: Int!
  published: Int!
}

type OutboxEvent {
  id: ID!
  type: String!
  aggregateType: String
  aggregateId: String
  payload: JSON!
  status: OutboxStatus!
  retryCount: Int!
  deliverAfter: DateTime
  lastError: String
  createdAt: DateTime!
  updatedAt: DateTime!
}

enum OutboxStatus {
  PENDING
  PROCESSING
  PUBLISHED
  FAILED
}

type ProductCountAggregate {
  id: Int!
  name: Int!
  description: Int!
  barcode: Int!
  createdAt: Int!
  updatedAt: Int!
  _all: Int!
}

type ProductMinAggregate {
  id: String
  name: String
  description: String
  barcode: String
  createdAt: DateTime
  updatedAt: DateTime
}

type ProductMaxAggregate {
  id: String
  name: String
  description: String
  barcode: String
  createdAt: DateTime
  updatedAt: DateTime
}

type AggregateProduct {
  _count: ProductCountAggregate
  _min: ProductMinAggregate
  _max: ProductMaxAggregate
}

type ProductGroupBy {
  id: String!
  name: String!
  description: String
  barcode: String
  createdAt: DateTime!
  updatedAt: DateTime!
  _count: ProductCountAggregate
  _min: ProductMinAggregate
  _max: ProductMaxAggregate
}

type OrphanVariantDiagnostic {
  id: String!
  productId: String
  productExists: Boolean!
  barcode: String
  size: String!
  concentration: String!
  packaging: String!
}

type ProductVariantCountAggregate {
  id: Int!
  productId: Int!
  name: Int!
  size: Int!
  concentration: Int!
  packaging: Int!
  barcode: Int!
  price: Int!
  resellerPrice: Int!
  createdAt: Int!
  updatedAt: Int!
  _all: Int!
}

type ProductVariantAvgAggregate {
  price: Float
  resellerPrice: Float
}

type ProductVariantSumAggregate {
  price: Float
  resellerPrice: Float
}

type ProductVariantMinAggregate {
  id: String
  productId: String
  name: String
  size: String
  concentration: String
  packaging: String
  barcode: String
  price: Float
  resellerPrice: Float
  createdAt: DateTime
  updatedAt: DateTime
}

type ProductVariantMaxAggregate {
  id: String
  productId: String
  name: String
  size: String
  concentration: String
  packaging: String
  barcode: String
  price: Float
  resellerPrice: Float
  createdAt: DateTime
  updatedAt: DateTime
}

type AggregateProductVariant {
  _count: ProductVariantCountAggregate
  _avg: ProductVariantAvgAggregate
  _sum: ProductVariantSumAggregate
  _min: ProductVariantMinAggregate
  _max: ProductVariantMaxAggregate
}

type ProductVariantGroupBy {
  id: String!
  productId: String
  name: String
  size: String!
  concentration: String!
  packaging: String!
  barcode: String
  price: Float!
  resellerPrice: Float!
  createdAt: DateTime!
  updatedAt: DateTime!
  _count: ProductVariantCountAggregate
  _avg: ProductVariantAvgAggregate
  _sum: ProductVariantSumAggregate
  _min: ProductVariantMinAggregate
  _max: ProductVariantMaxAggregate
}

type SupplierCatalogEntry {
  supplierId: String!
  productVariantId: String!
  defaultCost: Float!
  leadTimeDays: Int
  isPreferred: Boolean
}

type VariantTierPrice {
  productVariantId: String!
  tier: UserTier!
  price: Float!
}

type FacetGQL {
  id: ID!
  name: String!
  code: String!
  isPrivate: Boolean!
  values: [String!]!
}

type FacetAssignment {
  facet: FacetGQL!
  value: String!
}

type StoreCountAggregate {
  id: Int!
  name: Int!
  location: Int!
  isMain: Int!
  managerId: Int!
  createdAt: Int!
  updatedAt: Int!
  _all: Int!
}

type StoreMinAggregate {
  id: String
  name: String
  location: String
  isMain: Boolean
  managerId: String
  createdAt: DateTime
  updatedAt: DateTime
}

type StoreMaxAggregate {
  id: String
  name: String
  location: String
  isMain: Boolean
  managerId: String
  createdAt: DateTime
  updatedAt: DateTime
}

type AggregateStore {
  _count: StoreCountAggregate
  _min: StoreMinAggregate
  _max: StoreMaxAggregate
}

type StoreGroupBy {
  id: String!
  name: String!
  location: String
  isMain: Boolean!
  managerId: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  _count: StoreCountAggregate
  _min: StoreMinAggregate
  _max: StoreMaxAggregate
}

type StoreManagerDiagnostic {
  id: String!
  name: String!
  managerId: String!
  validManager: Boolean!
  managerEmail: String
}

type SupplierCountAggregate {
  id: Int!
  name: Int!
  contactInfo: Int!
  isFrequent: Int!
  creditLimit: Int!
  currentBalance: Int!
  paymentTerms: Int!
  notes: Int!
  createdAt: Int!
  updatedAt: Int!
  userId: Int!
  _all: Int!
}

type SupplierAvgAggregate {
  creditLimit: Float
  currentBalance: Float
}

type SupplierSumAggregate {
  creditLimit: Float
  currentBalance: Float
}

type SupplierMinAggregate {
  id: String
  name: String
  isFrequent: Boolean
  creditLimit: Float
  currentBalance: Float
  paymentTerms: String
  notes: String
  createdAt: DateTime
  updatedAt: DateTime
  userId: String
}

type SupplierMaxAggregate {
  id: String
  name: String
  isFrequent: Boolean
  creditLimit: Float
  currentBalance: Float
  paymentTerms: String
  notes: String
  createdAt: DateTime
  updatedAt: DateTime
  userId: String
}

type PurchaseOrderCountAggregate {
  id: Int!
  supplierId: Int!
  storeId: Int!
  invoiceNumber: Int!
  status: Int!
  phase: Int!
  dueDate: Int!
  totalAmount: Int!
  createdAt: Int!
  updatedAt: Int!
  _all: Int!
}

type PurchaseOrderAvgAggregate {
  totalAmount: Float
}

type PurchaseOrderSumAggregate {
  totalAmount: Float
}

type PurchaseOrderMinAggregate {
  id: String
  supplierId: String
  storeId: String
  invoiceNumber: String
  status: PurchaseOrderStatus
  phase: PurchasePhase
  dueDate: DateTime
  totalAmount: Float
  createdAt: DateTime
  updatedAt: DateTime
}

type PurchaseOrderMaxAggregate {
  id: String
  supplierId: String
  storeId: String
  invoiceNumber: String
  status: PurchaseOrderStatus
  phase: PurchasePhase
  dueDate: DateTime
  totalAmount: Float
  createdAt: DateTime
  updatedAt: DateTime
}

type SupplierPaymentCountAggregate {
  id: Int!
  supplierId: Int!
  purchaseOrderId: Int!
  amount: Int!
  paymentDate: Int!
  method: Int!
  notes: Int!
  _all: Int!
}

type SupplierPaymentAvgAggregate {
  amount: Float
}

type SupplierPaymentSumAggregate {
  amount: Float
}

type SupplierPaymentMinAggregate {
  id: String
  supplierId: String
  purchaseOrderId: String
  amount: Float
  paymentDate: DateTime
  method: String
  notes: String
}

type SupplierPaymentMaxAggregate {
  id: String
  supplierId: String
  purchaseOrderId: String
  amount: Float
  paymentDate: DateTime
  method: String
  notes: String
}

type RequisitionSummary {
  id: ID!
  storeId: String!
  requestedById: String!
  status: String!
  createdAt: DateTime!
}

type SupplierQuoteSummary {
  id: ID!
  requisitionId: String!
  supplierId: String!
  status: String!
  validUntil: DateTime
  createdAt: DateTime!
}

type RfqStatusCounts {
  requisitionId: ID
  draft: Float!
  submitted: Float!
  selected: Float!
  rejected: Float!
  total: Float!
}

type RfqDashboard {
  requisitionId: ID
  draft: Float!
  submitted: Float!
  selected: Float!
  rejected: Float!
  total: Float!
  pendingQuotes: [SupplierQuoteSummary!]!
}

type SupplierCreditStatus {
  supplierId: String!
  name: String!
  creditLimit: Float!
  currentBalance: Float!
}

type AdminProcurementDashboard {
  overduePOs: [PurchaseOrder!]!
  noSubmissionRequisitions: [RequisitionSummary!]!
  partialSubmissionRequisitions: [RequisitionSummary!]!
  creditBlockedSuppliers: [SupplierCreditStatus!]!
}

type LowStockCandidate {
  storeId: String!
  productVariantId: String!
  quantity: Int
  reorderPoint: Int
  reorderQty: Int
  storeName: String
  productId: String
  productName: String
  size: String
  concentration: String
  packaging: String
  barcode: String
  supplierId: String
  supplierName: String
  supplierDefaultCost: Float
  supplierLeadTimeDays: Int
  supplierIsPreferred: Boolean
  supplierCount: Int
}

type PurchaseOrderReceiptProgress {
  productVariantId: String!
  orderedQty: Int!
  receivedQty: Int!
}

type PaymentOrderSummary {
  saleOrderId: String!
  orderTotal: Float!
  consumerPaid: Float!
  resellerPaid: Float!
  totalPaid: Float!
  outstanding: Float!
  fullyPaid: Boolean!
}

type StorePaymentsSummary {
  storeId: String!
  month: String!
  consumerPaid: Float!
  resellerPaid: Float!
  totalPaid: Float!
}

type SupplierPaymentsSummary {
  supplierId: String!
  month: String
  totalPaid: Float!
  count: Float!
  lastPaymentDate: DateTime
}

type BillerPaymentsSummary {
  billerId: String!
  storeId: String
  month: String
  consumerPaid: Float!
  resellerPaid: Float!
  totalPaid: Float!
  consumerCount: Int!
  resellerCount: Int!
}

type PaymentDaySeries {
  date: String!
  consumerPaid: Float!
  resellerPaid: Float!
  totalPaid: Float!
}

type PaymentMethodBreakdownEntry {
  method: PaymentMethod!
  consumerPaid: Float!
  resellerPaid: Float!
  totalPaid: Float!
  consumerCount: Int!
  resellerCount: Int!
}

type SupplierPaymentMethodBreakdownEntry {
  method: String!
  totalPaid: Float!
  count: Int!
}

type IngestLineResult {
  description: String!
  qty: Float!
  unitPrice: Float!
  discountPct: Float
  discountedUnitPrice: Float
  lineTotal: Float!
  variantId: String
}

type ProcessInvoiceResult {
  status: String!
  supplierId: String
  supplierName: String
  invoiceNumber: String
  purchaseOrderId: String
  totalAmount: Float
  lines: [IngestLineResult!]!
  message: String
}

type InvoiceImportCountAggregate {
  id: Int!
  url: Int!
  supplierName: Int!
  storeId: Int!
  status: Int!
  parsed: Int!
  message: Int!
  createdAt: Int!
  updatedAt: Int!
  _all: Int!
}

type InvoiceImportMinAggregate {
  id: String
  url: String
  supplierName: String
  storeId: String
  status: InvoiceImportStatus
  message: String
  createdAt: DateTime
  updatedAt: DateTime
}

type InvoiceImportMaxAggregate {
  id: String
  url: String
  supplierName: String
  storeId: String
  status: InvoiceImportStatus
  message: String
  createdAt: DateTime
  updatedAt: DateTime
}

type ApproveInvoiceResult {
  invoiceImport: InvoiceImport!
  purchaseOrderId: String
}

type StockCountAggregate {
  id: Int!
  storeId: Int!
  productVariantId: Int!
  quantity: Int!
  reserved: Int!
  reorderPoint: Int!
  reorderQty: Int!
  createdAt: Int!
  updatedAt: Int!
  _all: Int!
}

type StockAvgAggregate {
  quantity: Float
  reserved: Float
  reorderPoint: Float
  reorderQty: Float
}

type StockSumAggregate {
  quantity: Int
  reserved: Int
  reorderPoint: Int
  reorderQty: Int
}

type StockMinAggregate {
  id: String
  storeId: String
  productVariantId: String
  quantity: Int
  reserved: Int
  reorderPoint: Int
  reorderQty: Int
  createdAt: DateTime
  updatedAt: DateTime
}

type StockMaxAggregate {
  id: String
  storeId: String
  productVariantId: String
  quantity: Int
  reserved: Int
  reorderPoint: Int
  reorderQty: Int
  createdAt: DateTime
  updatedAt: DateTime
}

type StockMovementCountAggregate {
  id: Int!
  storeId: Int!
  direction: Int!
  movementType: Int!
  referenceEntity: Int!
  referenceId: Int!
  createdAt: Int!
  _all: Int!
}

type StockMovementMinAggregate {
  id: String
  storeId: String
  direction: MovementDirection
  movementType: MovementType
  referenceEntity: String
  referenceId: String
  createdAt: DateTime
}

type StockMovementMaxAggregate {
  id: String
  storeId: String
  direction: MovementDirection
  movementType: MovementType
  referenceEntity: String
  referenceId: String
  createdAt: DateTime
}

type StockReceiptBatchCountAggregate {
  id: Int!
  purchaseOrderId: Int!
  storeId: Int!
  receivedById: Int!
  confirmedById: Int!
  waybillUrl: Int!
  receivedAt: Int!
  _all: Int!
}

type StockReceiptBatchMinAggregate {
  id: String
  purchaseOrderId: String
  storeId: String
  receivedById: String
  confirmedById: String
  waybillUrl: String
  receivedAt: DateTime
}

type StockReceiptBatchMaxAggregate {
  id: String
  purchaseOrderId: String
  storeId: String
  receivedById: String
  confirmedById: String
  waybillUrl: String
  receivedAt: DateTime
}

type StockTransferCountAggregate {
  id: Int!
  fromStoreId: Int!
  toStoreId: Int!
  requestedById: Int!
  approvedById: Int!
  status: Int!
  createdAt: Int!
  _all: Int!
}

type StockTransferMinAggregate {
  id: String
  fromStoreId: String
  toStoreId: String
  requestedById: String
  approvedById: String
  status: TransferStatus
  createdAt: DateTime
}

type StockTransferMaxAggregate {
  id: String
  fromStoreId: String
  toStoreId: String
  requestedById: String
  approvedById: String
  status: TransferStatus
  createdAt: DateTime
}

type VariantStockTotal {
  variantId: String!
  onHand: Float!
  reserved: Float!
  available: Float!
}

type ConsumerSaleCountAggregate {
  id: Int!
  customerId: Int!
  storeId: Int!
  billerId: Int!
  channel: Int!
  saleOrderId: Int!
  quotationId: Int!
  status: Int!
  totalAmount: Int!
  adjustmentType: Int!
  adjustedById: Int!
  createdAt: Int!
  updatedAt: Int!
  _all: Int!
}

type ConsumerSaleAvgAggregate {
  totalAmount: Float
}

type ConsumerSaleSumAggregate {
  totalAmount: Float
}

type ConsumerSaleMinAggregate {
  id: String
  customerId: String
  storeId: String
  billerId: String
  channel: SaleChannel
  saleOrderId: String
  quotationId: String
  status: SaleStatus
  totalAmount: Float
  adjustmentType: AdjustmentType
  adjustedById: String
  createdAt: DateTime
  updatedAt: DateTime
}

type ConsumerSaleMaxAggregate {
  id: String
  customerId: String
  storeId: String
  billerId: String
  channel: SaleChannel
  saleOrderId: String
  quotationId: String
  status: SaleStatus
  totalAmount: Float
  adjustmentType: AdjustmentType
  adjustedById: String
  createdAt: DateTime
  updatedAt: DateTime
}

type ConsumerPaymentCountAggregate {
  id: Int!
  consumerSaleId: Int!
  saleOrderId: Int!
  amount: Int!
  method: Int!
  status: Int!
  receivedAt: Int!
  reference: Int!
  _all: Int!
}

type ConsumerPaymentAvgAggregate {
  amount: Float
}

type ConsumerPaymentSumAggregate {
  amount: Float
}

type ConsumerPaymentMinAggregate {
  id: String
  consumerSaleId: String
  saleOrderId: String
  amount: Float
  method: PaymentMethod
  status: PaymentStatus
  receivedAt: DateTime
  reference: String
}

type ConsumerPaymentMaxAggregate {
  id: String
  consumerSaleId: String
  saleOrderId: String
  amount: Float
  method: PaymentMethod
  status: PaymentStatus
  receivedAt: DateTime
  reference: String
}

type ConsumerReceiptCountAggregate {
  id: Int!
  consumerSaleId: Int!
  issuedById: Int!
  issuedAt: Int!
  receiptUrl: Int!
  _all: Int!
}

type ConsumerReceiptMinAggregate {
  id: String
  consumerSaleId: String
  issuedById: String
  issuedAt: DateTime
  receiptUrl: String
}

type ConsumerReceiptMaxAggregate {
  id: String
  consumerSaleId: String
  issuedById: String
  issuedAt: DateTime
  receiptUrl: String
}

type ResellerSaleCountAggregate {
  id: Int!
  resellerId: Int!
  billerId: Int!
  storeId: Int!
  quotationId: Int!
  status: Int!
  totalAmount: Int!
  approvedById: Int!
  approvedAt: Int!
  createdAt: Int!
  updatedAt: Int!
  SaleOrderid: Int!
  _all: Int!
}

type ResellerSaleAvgAggregate {
  totalAmount: Float
}

type ResellerSaleSumAggregate {
  totalAmount: Float
}

type ResellerSaleMinAggregate {
  id: String
  resellerId: String
  billerId: String
  storeId: String
  quotationId: String
  status: SaleStatus
  totalAmount: Float
  approvedById: String
  approvedAt: DateTime
  createdAt: DateTime
  updatedAt: DateTime
  SaleOrderid: String
}

type ResellerSaleMaxAggregate {
  id: String
  resellerId: String
  billerId: String
  storeId: String
  quotationId: String
  status: SaleStatus
  totalAmount: Float
  approvedById: String
  approvedAt: DateTime
  createdAt: DateTime
  updatedAt: DateTime
  SaleOrderid: String
}

type ResellerPaymentCountAggregate {
  id: Int!
  saleOrderId: Int!
  resellerId: Int!
  resellerSaleId: Int!
  amount: Int!
  method: Int!
  reference: Int!
  status: Int!
  receivedAt: Int!
  receivedById: Int!
  _all: Int!
}

type ResellerPaymentAvgAggregate {
  amount: Float
}

type ResellerPaymentSumAggregate {
  amount: Float
}

type ResellerPaymentMinAggregate {
  id: String
  saleOrderId: String
  resellerId: String
  resellerSaleId: String
  amount: Float
  method: PaymentMethod
  reference: String
  status: PaymentStatus
  receivedAt: DateTime
  receivedById: String
}

type ResellerPaymentMaxAggregate {
  id: String
  saleOrderId: String
  resellerId: String
  resellerSaleId: String
  amount: Float
  method: PaymentMethod
  reference: String
  status: PaymentStatus
  receivedAt: DateTime
  receivedById: String
}

type FulfillmentCountAggregate {
  id: Int!
  saleOrderId: Int!
  type: Int!
  deliveryPersonnelId: Int!
  deliveryAddress: Int!
  status: Int!
  cost: Int!
  confirmationPin: Int!
  createdAt: Int!
  updatedAt: Int!
  _all: Int!
}

type FulfillmentAvgAggregate {
  cost: Float
}

type FulfillmentSumAggregate {
  cost: Float
}

type FulfillmentMinAggregate {
  id: String
  saleOrderId: String
  type: FulfillmentType
  deliveryPersonnelId: String
  deliveryAddress: String
  status: FulfillmentStatus
  cost: Float
  confirmationPin: String
  createdAt: DateTime
  updatedAt: DateTime
}

type FulfillmentMaxAggregate {
  id: String
  saleOrderId: String
  type: FulfillmentType
  deliveryPersonnelId: String
  deliveryAddress: String
  status: FulfillmentStatus
  cost: Float
  confirmationPin: String
  createdAt: DateTime
  updatedAt: DateTime
}

type VariantMonthlySales {
  productVariantId: String!
  quantity: Int!
}

type CustomerAffinityEntry {
  productVariantId: String!
  count: Int!
}

type MonthlySalesSummary {
  month: String!
  totalSold: Int!
  totalReturned: Int!
}

type VariantSalesWithDetails {
  productVariantId: String!
  quantity: Int!
  productId: String
  productName: String
  size: String
  concentration: String
  packaging: String
  barcode: String
}

type DevCounts {
  invoiceImports: Int!
  purchaseOrders: Int!
  orphanVariants: Int!
}

type Query {
  me: User!
  findFirstProduct(where: ProductWhereInput, orderBy: [ProductOrderByWithRelationInput!], cursor: ProductWhereUniqueInput, take: Int, skip: Int, distinct: [ProductScalarFieldEnum!]): Product!
  findUniqueProduct(where: ProductWhereUniqueInput!): Product!
  listProducts(where: ProductWhereInput, orderBy: [ProductOrderByWithRelationInput!], cursor: ProductWhereUniqueInput, take: Int, skip: Int, distinct: [ProductScalarFieldEnum!]): [Product!]!
  groupByProduct(where: ProductWhereInput, orderBy: [ProductOrderByWithAggregationInput!], by: [ProductScalarFieldEnum!]!, having: ProductScalarWhereWithAggregatesInput, take: Int, skip: Int, _count: ProductCountAggregateInput, _min: ProductMinAggregateInput, _max: ProductMaxAggregateInput): [ProductGroupBy!]!
  aggregateProduct(where: ProductWhereInput, orderBy: [ProductOrderByWithRelationInput!], cursor: ProductWhereUniqueInput, take: Int, skip: Int, _count: ProductCountAggregateInput, _min: ProductMinAggregateInput, _max: ProductMaxAggregateInput): AggregateProduct!
  findFirstProductVariant(where: ProductVariantWhereInput, orderBy: [ProductVariantOrderByWithRelationInput!], cursor: ProductVariantWhereUniqueInput, take: Int, skip: Int, distinct: [ProductVariantScalarFieldEnum!]): ProductVariant!
  findUniqueProductVariant(where: ProductVariantWhereUniqueInput!): ProductVariant!
  listProductVariants(where: ProductVariantWhereInput, orderBy: [ProductVariantOrderByWithRelationInput!], cursor: ProductVariantWhereUniqueInput, take: Int, skip: Int, distinct: [ProductVariantScalarFieldEnum!]): [ProductVariant!]!
  groupByProductVariant(where: ProductVariantWhereInput, orderBy: [ProductVariantOrderByWithAggregationInput!], by: [ProductVariantScalarFieldEnum!]!, having: ProductVariantScalarWhereWithAggregatesInput, take: Int, skip: Int, _count: ProductVariantCountAggregateInput, _avg: ProductVariantAvgAggregateInput, _sum: ProductVariantSumAggregateInput, _min: ProductVariantMinAggregateInput, _max: ProductVariantMaxAggregateInput): [ProductVariantGroupBy!]!
  aggregateProductVariant(where: ProductVariantWhereInput, orderBy: [ProductVariantOrderByWithRelationInput!], cursor: ProductVariantWhereUniqueInput, take: Int, skip: Int, _count: ProductVariantCountAggregateInput, _avg: ProductVariantAvgAggregateInput, _sum: ProductVariantSumAggregateInput, _min: ProductVariantMinAggregateInput, _max: ProductVariantMaxAggregateInput): AggregateProductVariant!
  variantsByStore(storeId: String!, search: String): [ProductVariant!]!
  lowStockByStore(storeId: String!): [ProductVariant!]!
  productVariantsCount(where: ProductVariantWhereInput): Int!
  suppliersForVariant(productVariantId: String!): [SupplierCatalogEntry!]!
  tierPricesForVariant(productVariantId: String!): [VariantTierPrice!]!

  """List product variants whose product linkage is invalid or missing"""
  variantsWithInvalidProducts: [OrphanVariantDiagnostic!]!
  listFacets: [FacetGQL!]!
  productFacets(productId: String!): [FacetAssignment!]!
  variantFacets(productVariantId: String!): [FacetAssignment!]!
  notifications: [Notification!]!
  outboxStatus: OutboxStatusCounts!
  outboxStatusByType(types: [String!]): [OutboxTypeCount!]!
  outboxStatusSeries(start: DateTime!, end: DateTime!, type: String): [OutboxDayStatus!]!
  lastFailedOutboxEvents(limit: Int, type: String): [OutboxEvent!]!
  pendingResellerApplications(take: Int, skip: Int, q: String): [ResellerProfile!]!
  listBillers: [User!]!
  resellers(status: String, take: Int, skip: Int, q: String): [ResellerProfile!]!
  resellerProfile(userId: String!): ResellerProfile
  suppliers: [Supplier!]!
  supplier(id: String!): Supplier!
  purchaseOrders(take: Int, skip: Int): [PurchaseOrder!]!
  purchaseOrder(id: String!): PurchaseOrder!
  supplierPayments: [SupplierPayment!]!
  supplierPaymentsBySupplier(supplierId: String!): [SupplierPayment!]!
  purchaseOrdersByStatus(status: String!, take: Int, skip: Int): [PurchaseOrder!]!
  purchaseOrdersByStatusEnum(status: PurchaseOrderStatus!): [PurchaseOrder!]!
  purchaseOrdersByPhase(phase: String!, take: Int, skip: Int): [PurchaseOrder!]!
  purchaseOrdersBySupplier(supplierId: String!, take: Int, skip: Int): [PurchaseOrder!]!
  purchaseOrdersCount(status: String, phase: String): Int!
  purchaseOrdersByPhaseEnum(phase: PurchasePhase!): [PurchaseOrder!]!
  purchaseOrdersOverdue: [PurchaseOrder!]!
  requisitionsByStatus(status: String!, storeId: String, take: Int, skip: Int): [RequisitionSummary!]!
  requisitionsCountByStatus(status: String!, storeId: String): Int!
  supplierQuotesByRequisition(requisitionId: String!): [SupplierQuoteSummary!]!
  purchaseRequisitionSummary(id: String!): RequisitionSummary
  supplierCatalogBySupplier(supplierId: String!): [SupplierCatalogEntry!]!
  supplierCatalogByVariant(productVariantId: String!): [SupplierCatalogEntry!]!
  requisitionsWithNoSubmittedQuotes: [RequisitionSummary!]!
  rfqPendingSuppliers(requisitionId: String!): [SupplierQuoteSummary!]!
  requisitionsWithPartialSubmissions: [RequisitionSummary!]!
  rfqStatusCounts(requisitionId: String!): RfqStatusCounts!
  rfqCountsAll: RfqStatusCounts!
  rfqDashboard(requisitionId: String!): RfqDashboard!
  rfqDashboardAll: RfqDashboard!
  lowStockCandidates(storeId: String, limit: Int): [LowStockCandidate!]!
  lastAutoRequisitionIdByStore(storeId: String!): String
  adminProcurementDashboard: AdminProcurementDashboard!
  purchaseOrdersOverdueByStore(storeId: String!): [PurchaseOrder!]!
  purchaseOrderReceiptProgress(purchaseOrderId: String!): [PurchaseOrderReceiptProgress!]!
  purchaseOrdersSearch(q: String!, take: Int, skip: Int): [PurchaseOrder!]!
  purchaseOrdersSearchCount(q: String!): Int!
  requisitionsWithNoSubmittedQuotesByStore(storeId: String!): [RequisitionSummary!]!
  requisitionsWithPartialSubmissionsByStore(storeId: String!): [RequisitionSummary!]!
  rfqStatusCountsByStore(storeId: String!): RfqStatusCounts!
  rfqDashboardByStore(storeId: String!): RfqDashboard!
  adminProcurementDashboardByStore(storeId: String!): AdminProcurementDashboard!
  invoiceImports: [InvoiceImport!]!
  invoiceImport(id: String!): InvoiceImport
  consumerPaymentsByOrder(saleOrderId: String!): [ConsumerPayment!]!
  resellerPaymentsByOrder(saleOrderId: String!): [ResellerPayment!]!
  supplierPaymentsByPO(purchaseOrderId: String!): [SupplierPayment!]!
  orderPaymentSummary(saleOrderId: String!): PaymentOrderSummary!
  storePaymentsSummary(storeId: String!, month: String): StorePaymentsSummary!
  supplierPaymentsSummary(supplierId: String!, month: String): SupplierPaymentsSummary!
  billerPaymentsSummary(billerId: String!, storeId: String, month: String): BillerPaymentsSummary!
  dailyPaymentsSeries(month: String, storeId: String, billerId: String): [PaymentDaySeries!]!
  billerPaymentsSummaryByStore(storeId: String!, month: String): [BillerPaymentsSummary!]!
  paymentMethodBreakdown(month: String, storeId: String, billerId: String): [PaymentMethodBreakdownEntry!]!
  supplierPaymentMethodBreakdown(month: String, supplierId: String): [SupplierPaymentMethodBreakdownEntry!]!
  storePaymentsSummaryRange(storeId: String!, start: DateTime!, end: DateTime!): StorePaymentsSummary!
  billerPaymentsSummaryRange(billerId: String!, start: DateTime!, end: DateTime!, storeId: String): BillerPaymentsSummary!
  paymentMethodBreakdownRange(start: DateTime!, end: DateTime!, storeId: String, billerId: String): [PaymentMethodBreakdownEntry!]!
  dailyPaymentsSeriesRange(start: DateTime!, end: DateTime!, storeId: String, billerId: String): [PaymentDaySeries!]!
  stock(input: QueryStockInput): [Stock!]!
  stockMovements(storeId: String!): [StockMovement!]!
  stockTotalsByProduct(productId: String!): [VariantStockTotal!]!
  stockTotalsByProductStore(productId: String!, storeId: String!): [VariantStockTotal!]!
  consumerSalesByCustomer(customerId: String!, take: Int, skip: Int, order: String, cursorId: String): [ConsumerSale!]!
  consumerReceiptsByCustomer(customerId: String!, take: Int, skip: Int, order: String, cursorId: String): [ConsumerReceipt!]!
  topSellingVariants(month: String, limit: Int): [VariantMonthlySales!]!
  customerAffinity(customerId: String!, limit: Int): [CustomerAffinityEntry!]!
  monthlySalesSummary(month: String): MonthlySalesSummary!
  topSellingVariantsDetailed(month: String, limit: Int): [VariantSalesWithDetails!]!
  topSellingVariantsByStore(storeId: String!, month: String, limit: Int): [VariantSalesWithDetails!]!
  monthlySalesSummaryByStore(storeId: String!, month: String): MonthlySalesSummary!
  ordersQuery: [SaleOrder!]!
  order(id: String!): SaleOrder!
  salesReturnsByStore(storeId: String!): [SalesReturn!]!
  salesReturnsByConsumerSale(consumerSaleId: String!): [SalesReturn!]!
  salesReturnsByResellerSale(resellerSaleId: String!): [SalesReturn!]!
  purchaseReturnsBySupplier(supplierId: String!): [PurchaseReturn!]!
  mySupportMessages: [SupportMessage!]!
  supportConversation(userId: String!): [SupportMessage!]!
  recentSupportThreads(limit: Int): [SupportMessage!]!
  findFirstStore(where: StoreWhereInput, orderBy: [StoreOrderByWithRelationInput!], cursor: StoreWhereUniqueInput, take: Int, skip: Int, distinct: [StoreScalarFieldEnum!]): Store!
  findUniqueStore(where: StoreWhereUniqueInput!): Store!
  listStores(where: StoreWhereInput, orderBy: [StoreOrderByWithRelationInput!], cursor: StoreWhereUniqueInput, take: Int, skip: Int, distinct: [StoreScalarFieldEnum!]): [Store!]!
  groupByStore(where: StoreWhereInput, orderBy: [StoreOrderByWithAggregationInput!], by: [StoreScalarFieldEnum!]!, having: StoreScalarWhereWithAggregatesInput, take: Int, skip: Int, _count: StoreCountAggregateInput, _min: StoreMinAggregateInput, _max: StoreMaxAggregateInput): [StoreGroupBy!]!
  aggregateStore(where: StoreWhereInput, orderBy: [StoreOrderByWithRelationInput!], cursor: StoreWhereUniqueInput, take: Int, skip: Int, _count: StoreCountAggregateInput, _min: StoreMinAggregateInput, _max: StoreMaxAggregateInput): AggregateStore!

  """List stores whose managerId does not resolve to a User"""
  storesWithInvalidManagers: [StoreManagerDiagnostic!]!
  findFirstUser(where: UserWhereInput, orderBy: [UserOrderByWithRelationInput!], cursor: UserWhereUniqueInput, take: Int, skip: Int, distinct: [UserScalarFieldEnum!]): User!
  findUniqueUser(where: UserWhereUniqueInput!): User!
  listUsers(where: UserWhereInput, orderBy: [UserOrderByWithRelationInput!], cursor: UserWhereUniqueInput, take: Int, skip: Int, distinct: [UserScalarFieldEnum!]): [User!]!
  groupByUser(where: UserWhereInput, orderBy: [UserOrderByWithAggregationInput!], by: [UserScalarFieldEnum!]!, having: UserScalarWhereWithAggregatesInput, take: Int, skip: Int, _count: UserCountAggregateInput, _min: UserMinAggregateInput, _max: UserMaxAggregateInput): [UserGroupBy!]!
  aggregateUser(where: UserWhereInput, orderBy: [UserOrderByWithRelationInput!], cursor: UserWhereUniqueInput, take: Int, skip: Int, _count: UserCountAggregateInput, _min: UserMinAggregateInput, _max: UserMaxAggregateInput): AggregateUser!
  listManagers: [User!]!
  devCounts: DevCounts!
  devExportSnapshot(tables: [String!]!, filter: DevPurgeFilter): String!
}

input ProductWhereInput {
  AND: [ProductWhereInput!]
  OR: [ProductWhereInput!]
  NOT: [ProductWhereInput!]
  id: StringFilter
  name: StringFilter
  description: StringNullableFilter
  barcode: StringNullableFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
  variants: ProductVariantListRelationFilter
  facets: ProductFacetValueListRelationFilter
}

input StringFilter {
  equals: String
  in: [String!]
  notIn: [String!]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  mode: QueryMode
  not: NestedStringFilter
}

enum QueryMode {
  default
  insensitive
}

input NestedStringFilter {
  equals: String
  in: [String!]
  notIn: [String!]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  not: NestedStringFilter
}

input StringNullableFilter {
  equals: String
  in: [String!]
  notIn: [String!]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  mode: QueryMode
  not: NestedStringNullableFilter
}

input NestedStringNullableFilter {
  equals: String
  in: [String!]
  notIn: [String!]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  not: NestedStringNullableFilter
}

input DateTimeFilter {
  equals: DateTime
  in: [DateTime!]
  notIn: [DateTime!]
  lt: DateTime
  lte: DateTime
  gt: DateTime
  gte: DateTime
  not: NestedDateTimeFilter
}

input NestedDateTimeFilter {
  equals: DateTime
  in: [DateTime!]
  notIn: [DateTime!]
  lt: DateTime
  lte: DateTime
  gt: DateTime
  gte: DateTime
  not: NestedDateTimeFilter
}

input ProductVariantListRelationFilter {
  every: ProductVariantWhereInput
  some: ProductVariantWhereInput
  none: ProductVariantWhereInput
}

input ProductVariantWhereInput {
  AND: [ProductVariantWhereInput!]
  OR: [ProductVariantWhereInput!]
  NOT: [ProductVariantWhereInput!]
  id: StringFilter
  productId: StringNullableFilter
  name: StringNullableFilter
  size: StringFilter
  concentration: StringFilter
  packaging: StringFilter
  barcode: StringNullableFilter
  price: FloatFilter
  resellerPrice: FloatFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
  product: ProductNullableScalarRelationFilter
  stockItems: StockListRelationFilter
  receiptItems: StockReceiptBatchItemListRelationFilter
  quotationItems: QuotationItemListRelationFilter
  resellerItems: ResellerSaleItemListRelationFilter
  consumerItems: ConsumerSaleItemListRelationFilter
  returnItems: SalesReturnItemListRelationFilter
  purchaseReturnItems: PurchaseReturnItemListRelationFilter
  transferItems: StockTransferItemListRelationFilter
  stats: ProductSalesStatsNullableScalarRelationFilter
  PurchaseOrderItem: PurchaseOrderItemListRelationFilter
  StockMovementItem: StockMovementItemListRelationFilter
  PurchaseRequisitionItem: PurchaseRequisitionItemListRelationFilter
  SupplierCatalog: SupplierCatalogListRelationFilter
  SupplierQuoteItem: SupplierQuoteItemListRelationFilter
  ProductVariantTierPrice: ProductVariantTierPriceListRelationFilter
  facets: VariantFacetValueListRelationFilter
}

input FloatFilter {
  equals: Float
  in: [Float!]
  notIn: [Float!]
  lt: Float
  lte: Float
  gt: Float
  gte: Float
  not: NestedFloatFilter
}

input NestedFloatFilter {
  equals: Float
  in: [Float!]
  notIn: [Float!]
  lt: Float
  lte: Float
  gt: Float
  gte: Float
  not: NestedFloatFilter
}

input ProductNullableScalarRelationFilter {
  is: ProductWhereInput
  isNot: ProductWhereInput
}

input StockListRelationFilter {
  every: StockWhereInput
  some: StockWhereInput
  none: StockWhereInput
}

input StockWhereInput {
  AND: [StockWhereInput!]
  OR: [StockWhereInput!]
  NOT: [StockWhereInput!]
  id: StringFilter
  storeId: StringFilter
  productVariantId: StringFilter
  quantity: IntFilter
  reserved: IntFilter
  reorderPoint: IntNullableFilter
  reorderQty: IntNullableFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
  store: StoreScalarRelationFilter
  productVariant: ProductVariantScalarRelationFilter
}

input IntFilter {
  equals: Int
  in: [Int!]
  notIn: [Int!]
  lt: Int
  lte: Int
  gt: Int
  gte: Int
  not: NestedIntFilter
}

input NestedIntFilter {
  equals: Int
  in: [Int!]
  notIn: [Int!]
  lt: Int
  lte: Int
  gt: Int
  gte: Int
  not: NestedIntFilter
}

input IntNullableFilter {
  equals: Int
  in: [Int!]
  notIn: [Int!]
  lt: Int
  lte: Int
  gt: Int
  gte: Int
  not: NestedIntNullableFilter
}

input NestedIntNullableFilter {
  equals: Int
  in: [Int!]
  notIn: [Int!]
  lt: Int
  lte: Int
  gt: Int
  gte: Int
  not: NestedIntNullableFilter
}

input StoreScalarRelationFilter {
  is: StoreWhereInput
  isNot: StoreWhereInput
}

input StoreWhereInput {
  AND: [StoreWhereInput!]
  OR: [StoreWhereInput!]
  NOT: [StoreWhereInput!]
  id: StringFilter
  name: StringFilter
  location: StringNullableFilter
  isMain: BoolFilter
  managerId: StringFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
  manager: UserScalarRelationFilter
  stocks: StockListRelationFilter
  receipts: StockReceiptBatchListRelationFilter
  transfersOut: StockTransferListRelationFilter
  transfersIn: StockTransferListRelationFilter
  customerSales: ConsumerSaleListRelationFilter
  salesReturns: SalesReturnListRelationFilter
  resellerSales: ResellerSaleListRelationFilter
  movements: StockMovementListRelationFilter
  Customer: CustomerListRelationFilter
  CustomerProfile: CustomerProfileListRelationFilter
  Quotation: QuotationListRelationFilter
  PurchaseRequisition: PurchaseRequisitionListRelationFilter
  purchaseOrders: PurchaseOrderListRelationFilter
  InvoiceImport: InvoiceImportListRelationFilter
}

input BoolFilter {
  equals: Boolean
  not: NestedBoolFilter
}

input NestedBoolFilter {
  equals: Boolean
  not: NestedBoolFilter
}

input UserScalarRelationFilter {
  is: UserWhereInput
  isNot: UserWhereInput
}

input UserWhereInput {
  AND: [UserWhereInput!]
  OR: [UserWhereInput!]
  NOT: [UserWhereInput!]
  id: StringFilter
  email: StringFilter
  passwordHash: StringFilter
  roleId: StringFilter
  tier: EnumUserTierNullableFilter
  referralCode: StringNullableFilter
  referredBy: StringNullableFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
  isEmailVerified: BoolFilter
  emailVerificationToken: StringNullableFilter
  emailVerificationTokenExpiry: DateTimeNullableFilter
  role: RoleScalarRelationFilter
  resellerProfile: ResellerProfileNullableScalarRelationFilter
  customerProfile: CustomerProfileNullableScalarRelationFilter
  resellerPaymentsMade: ResellerPaymentListRelationFilter
  resellerPaymentsReceived: ResellerPaymentListRelationFilter
  adminLogs: AdminActionLogListRelationFilter
  supportMessages: SupportMessageListRelationFilter
  ConsumerSale: ConsumerSaleListRelationFilter
  ConsumerSaleAdjustedBys: ConsumerSaleListRelationFilter
  StockReceiptBatchReceivedBys: StockReceiptBatchListRelationFilter
  StockReceiptBatchConfirmedBys: StockReceiptBatchListRelationFilter
  StockTransferRequests: StockTransferListRelationFilter
  StockTransferApprovals: StockTransferListRelationFilter
  Store: StoreListRelationFilter
  ConsumerReceipt: ConsumerReceiptListRelationFilter
  ResellerSales: ResellerSaleListRelationFilter
  BillerResellerSale: ResellerSaleListRelationFilter
  ResellerSale: ResellerSaleListRelationFilter
  SalesReturnReceivers: SalesReturnListRelationFilter
  SalesReturnRequesters: SalesReturnListRelationFilter
  SalesReturn: SalesReturnListRelationFilter
  PurchaseReturnInitiators: PurchaseReturnListRelationFilter
  PurchaseReturnApprovers: PurchaseReturnListRelationFilter
  Payment: PaymentListRelationFilter
  ResellerTierHistory: ResellerTierHistoryListRelationFilter
  ResellerTierHistoryChangedBys: ResellerTierHistoryListRelationFilter
  ResellerProfile: ResellerProfileListRelationFilter
  RequestedResellers: ResellerProfileListRelationFilter
  Notification: NotificationListRelationFilter
  Fulfillment: FulfillmentListRelationFilter
  BillerQuotation: QuotationListRelationFilter
  ResellerQuotation: QuotationListRelationFilter
  PurchaseRequisition: PurchaseRequisitionListRelationFilter
  Supplier: SupplierListRelationFilter
}

input EnumUserTierNullableFilter {
  equals: UserTier
  in: [UserTier!]
  notIn: [UserTier!]
  not: NestedEnumUserTierNullableFilter
}

input NestedEnumUserTierNullableFilter {
  equals: UserTier
  in: [UserTier!]
  notIn: [UserTier!]
  not: NestedEnumUserTierNullableFilter
}

input DateTimeNullableFilter {
  equals: DateTime
  in: [DateTime!]
  notIn: [DateTime!]
  lt: DateTime
  lte: DateTime
  gt: DateTime
  gte: DateTime
  not: NestedDateTimeNullableFilter
}

input NestedDateTimeNullableFilter {
  equals: DateTime
  in: [DateTime!]
  notIn: [DateTime!]
  lt: DateTime
  lte: DateTime
  gt: DateTime
  gte: DateTime
  not: NestedDateTimeNullableFilter
}

input RoleScalarRelationFilter {
  is: RoleWhereInput
  isNot: RoleWhereInput
}

input RoleWhereInput {
  AND: [RoleWhereInput!]
  OR: [RoleWhereInput!]
  NOT: [RoleWhereInput!]
  id: StringFilter
  name: StringFilter
  description: StringNullableFilter
  createdBy: StringNullableFilter
  createdAt: DateTimeFilter
  permissions: PermissionListRelationFilter
  users: UserListRelationFilter
}

input PermissionListRelationFilter {
  every: PermissionWhereInput
  some: PermissionWhereInput
  none: PermissionWhereInput
}

input PermissionWhereInput {
  AND: [PermissionWhereInput!]
  OR: [PermissionWhereInput!]
  NOT: [PermissionWhereInput!]
  id: StringFilter
  name: StringFilter
  module: StringFilter
  action: StringFilter
  roles: RoleListRelationFilter
}

input RoleListRelationFilter {
  every: RoleWhereInput
  some: RoleWhereInput
  none: RoleWhereInput
}

input UserListRelationFilter {
  every: UserWhereInput
  some: UserWhereInput
  none: UserWhereInput
}

input ResellerProfileNullableScalarRelationFilter {
  is: ResellerProfileWhereInput
  isNot: ResellerProfileWhereInput
}

input ResellerProfileWhereInput {
  AND: [ResellerProfileWhereInput!]
  OR: [ResellerProfileWhereInput!]
  NOT: [ResellerProfileWhereInput!]
  userId: StringFilter
  billerId: StringNullableFilter
  requestedBillerId: StringNullableFilter
  tier: EnumUserTierFilter
  creditLimit: FloatFilter
  outstandingBalance: FloatFilter
  isActive: BoolFilter
  profileStatus: EnumProfileStatusFilter
  requestedAt: DateTimeFilter
  activatedAt: DateTimeNullableFilter
  rejectedAt: DateTimeNullableFilter
  rejectionReason: StringNullableFilter
  user: UserScalarRelationFilter
  biller: UserNullableScalarRelationFilter
  requestedBiller: UserNullableScalarRelationFilter
}

input EnumUserTierFilter {
  equals: UserTier
  in: [UserTier!]
  notIn: [UserTier!]
  not: NestedEnumUserTierFilter
}

input NestedEnumUserTierFilter {
  equals: UserTier
  in: [UserTier!]
  notIn: [UserTier!]
  not: NestedEnumUserTierFilter
}

input EnumProfileStatusFilter {
  equals: ProfileStatus
  in: [ProfileStatus!]
  notIn: [ProfileStatus!]
  not: NestedEnumProfileStatusFilter
}

input NestedEnumProfileStatusFilter {
  equals: ProfileStatus
  in: [ProfileStatus!]
  notIn: [ProfileStatus!]
  not: NestedEnumProfileStatusFilter
}

input UserNullableScalarRelationFilter {
  is: UserWhereInput
  isNot: UserWhereInput
}

input CustomerProfileNullableScalarRelationFilter {
  is: CustomerProfileWhereInput
  isNot: CustomerProfileWhereInput
}

input CustomerProfileWhereInput {
  AND: [CustomerProfileWhereInput!]
  OR: [CustomerProfileWhereInput!]
  NOT: [CustomerProfileWhereInput!]
  userId: StringFilter
  fullName: StringFilter
  phone: StringNullableFilter
  email: StringNullableFilter
  gender: StringNullableFilter
  birthday: DateTimeNullableFilter
  referredById: StringNullableFilter
  preferredStoreId: StringNullableFilter
  preferencesid: StringNullableFilter
  profileStatus: EnumProfileStatusFilter
  requestedAt: DateTimeFilter
  activatedAt: DateTimeNullableFilter
  isPhoneVerified: BoolFilter
  phoneVerificationCode: StringNullableFilter
  phoneVerificationCodeExpiry: DateTimeNullableFilter
  user: UserScalarRelationFilter
  preferredStore: StoreNullableScalarRelationFilter
  referredBy: CustomerProfileNullableScalarRelationFilter
  referrals: CustomerProfileListRelationFilter
  sales: ConsumerSaleListRelationFilter
  preferences: CustomerPreferenceProfileNullableScalarRelationFilter
}

input StoreNullableScalarRelationFilter {
  is: StoreWhereInput
  isNot: StoreWhereInput
}

input CustomerProfileListRelationFilter {
  every: CustomerProfileWhereInput
  some: CustomerProfileWhereInput
  none: CustomerProfileWhereInput
}

input ConsumerSaleListRelationFilter {
  every: ConsumerSaleWhereInput
  some: ConsumerSaleWhereInput
  none: ConsumerSaleWhereInput
}

input ConsumerSaleWhereInput {
  AND: [ConsumerSaleWhereInput!]
  OR: [ConsumerSaleWhereInput!]
  NOT: [ConsumerSaleWhereInput!]
  id: StringFilter
  customerId: StringNullableFilter
  storeId: StringFilter
  billerId: StringFilter
  channel: EnumSaleChannelFilter
  saleOrderId: StringFilter
  quotationId: StringNullableFilter
  status: EnumSaleStatusFilter
  totalAmount: FloatFilter
  adjustmentType: EnumAdjustmentTypeNullableFilter
  adjustedById: StringNullableFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
  customer: CustomerNullableScalarRelationFilter
  store: StoreScalarRelationFilter
  biller: UserScalarRelationFilter
  adjustedBy: UserNullableScalarRelationFilter
  quotation: QuotationNullableScalarRelationFilter
  items: ConsumerSaleItemListRelationFilter
  payments: ConsumerPaymentListRelationFilter
  receipt: ConsumerReceiptNullableScalarRelationFilter
  SalesReturn: SalesReturnListRelationFilter
  CustomerProfile: CustomerProfileListRelationFilter
  SaleOrder: SaleOrderScalarRelationFilter
}

input EnumSaleChannelFilter {
  equals: SaleChannel
  in: [SaleChannel!]
  notIn: [SaleChannel!]
  not: NestedEnumSaleChannelFilter
}

input NestedEnumSaleChannelFilter {
  equals: SaleChannel
  in: [SaleChannel!]
  notIn: [SaleChannel!]
  not: NestedEnumSaleChannelFilter
}

input EnumSaleStatusFilter {
  equals: SaleStatus
  in: [SaleStatus!]
  notIn: [SaleStatus!]
  not: NestedEnumSaleStatusFilter
}

input NestedEnumSaleStatusFilter {
  equals: SaleStatus
  in: [SaleStatus!]
  notIn: [SaleStatus!]
  not: NestedEnumSaleStatusFilter
}

input EnumAdjustmentTypeNullableFilter {
  equals: AdjustmentType
  in: [AdjustmentType!]
  notIn: [AdjustmentType!]
  not: NestedEnumAdjustmentTypeNullableFilter
}

input NestedEnumAdjustmentTypeNullableFilter {
  equals: AdjustmentType
  in: [AdjustmentType!]
  notIn: [AdjustmentType!]
  not: NestedEnumAdjustmentTypeNullableFilter
}

input CustomerNullableScalarRelationFilter {
  is: CustomerWhereInput
  isNot: CustomerWhereInput
}

input CustomerWhereInput {
  AND: [CustomerWhereInput!]
  OR: [CustomerWhereInput!]
  NOT: [CustomerWhereInput!]
  id: StringFilter
  fullName: StringFilter
  phone: StringNullableFilter
  email: StringNullableFilter
  preferredStoreId: StringNullableFilter
  preferredStore: StoreNullableScalarRelationFilter
  sales: ConsumerSaleListRelationFilter
  CustomerPreferenceProfile: CustomerPreferenceProfileListRelationFilter
  Quotation: QuotationListRelationFilter
}

input CustomerPreferenceProfileListRelationFilter {
  every: CustomerPreferenceProfileWhereInput
  some: CustomerPreferenceProfileWhereInput
  none: CustomerPreferenceProfileWhereInput
}

input CustomerPreferenceProfileWhereInput {
  AND: [CustomerPreferenceProfileWhereInput!]
  OR: [CustomerPreferenceProfileWhereInput!]
  NOT: [CustomerPreferenceProfileWhereInput!]
  id: StringFilter
  customerId: StringFilter
  frequentlyBoughtVariants: JsonFilter
  lastPurchaseDate: DateTimeNullableFilter
  eligibleForDiscounts: BoolFilter
  customer: CustomerScalarRelationFilter
  CustomerProfile: CustomerProfileListRelationFilter
}

input JsonFilter {
  equals: JSON
  path: [String!]
  mode: QueryMode
  string_contains: String
  string_starts_with: String
  string_ends_with: String
  array_starts_with: JSON
  array_ends_with: JSON
  array_contains: JSON
  lt: JSON
  lte: JSON
  gt: JSON
  gte: JSON
  not: JSON
}

input CustomerScalarRelationFilter {
  is: CustomerWhereInput
  isNot: CustomerWhereInput
}

input QuotationListRelationFilter {
  every: QuotationWhereInput
  some: QuotationWhereInput
  none: QuotationWhereInput
}

input QuotationWhereInput {
  AND: [QuotationWhereInput!]
  OR: [QuotationWhereInput!]
  NOT: [QuotationWhereInput!]
  id: StringFilter
  type: EnumSaleTypeFilter
  channel: EnumSaleChannelFilter
  storeId: StringFilter
  consumerId: StringNullableFilter
  resellerId: StringNullableFilter
  billerId: StringNullableFilter
  status: EnumQuotationStatusFilter
  totalAmount: FloatFilter
  saleOrderId: StringNullableFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
  store: StoreScalarRelationFilter
  biller: UserNullableScalarRelationFilter
  consumer: CustomerNullableScalarRelationFilter
  reseller: UserNullableScalarRelationFilter
  items: QuotationItemListRelationFilter
  sale: ResellerSaleNullableScalarRelationFilter
  SaleOrder: SaleOrderNullableScalarRelationFilter
  ConsumerSale: ConsumerSaleListRelationFilter
}

input EnumSaleTypeFilter {
  equals: SaleType
  in: [SaleType!]
  notIn: [SaleType!]
  not: NestedEnumSaleTypeFilter
}

input NestedEnumSaleTypeFilter {
  equals: SaleType
  in: [SaleType!]
  notIn: [SaleType!]
  not: NestedEnumSaleTypeFilter
}

input EnumQuotationStatusFilter {
  equals: QuotationStatus
  in: [QuotationStatus!]
  notIn: [QuotationStatus!]
  not: NestedEnumQuotationStatusFilter
}

input NestedEnumQuotationStatusFilter {
  equals: QuotationStatus
  in: [QuotationStatus!]
  notIn: [QuotationStatus!]
  not: NestedEnumQuotationStatusFilter
}

input QuotationItemListRelationFilter {
  every: QuotationItemWhereInput
  some: QuotationItemWhereInput
  none: QuotationItemWhereInput
}

input QuotationItemWhereInput {
  AND: [QuotationItemWhereInput!]
  OR: [QuotationItemWhereInput!]
  NOT: [QuotationItemWhereInput!]
  id: StringFilter
  quotationId: StringFilter
  productVariantId: StringFilter
  quantity: IntFilter
  unitPrice: FloatFilter
  quotation: QuotationScalarRelationFilter
  productVariant: ProductVariantScalarRelationFilter
}

input QuotationScalarRelationFilter {
  is: QuotationWhereInput
  isNot: QuotationWhereInput
}

input ProductVariantScalarRelationFilter {
  is: ProductVariantWhereInput
  isNot: ProductVariantWhereInput
}

input ResellerSaleNullableScalarRelationFilter {
  is: ResellerSaleWhereInput
  isNot: ResellerSaleWhereInput
}

input ResellerSaleWhereInput {
  AND: [ResellerSaleWhereInput!]
  OR: [ResellerSaleWhereInput!]
  NOT: [ResellerSaleWhereInput!]
  id: StringFilter
  resellerId: StringFilter
  billerId: StringFilter
  storeId: StringFilter
  quotationId: StringNullableFilter
  status: EnumSaleStatusFilter
  totalAmount: FloatFilter
  approvedById: StringNullableFilter
  approvedAt: DateTimeNullableFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
  SaleOrderid: StringFilter
  reseller: UserScalarRelationFilter
  biller: UserScalarRelationFilter
  approvedBy: UserNullableScalarRelationFilter
  quotation: QuotationNullableScalarRelationFilter
  store: StoreScalarRelationFilter
  items: ResellerSaleItemListRelationFilter
  payments: ResellerPaymentListRelationFilter
  SalesReturn: SalesReturnListRelationFilter
  SaleOrder: SaleOrderScalarRelationFilter
}

input QuotationNullableScalarRelationFilter {
  is: QuotationWhereInput
  isNot: QuotationWhereInput
}

input ResellerSaleItemListRelationFilter {
  every: ResellerSaleItemWhereInput
  some: ResellerSaleItemWhereInput
  none: ResellerSaleItemWhereInput
}

input ResellerSaleItemWhereInput {
  AND: [ResellerSaleItemWhereInput!]
  OR: [ResellerSaleItemWhereInput!]
  NOT: [ResellerSaleItemWhereInput!]
  id: StringFilter
  resellerSaleId: StringFilter
  productVariantId: StringFilter
  quantity: IntFilter
  unitPrice: FloatFilter
  sale: ResellerSaleScalarRelationFilter
  productVariant: ProductVariantScalarRelationFilter
}

input ResellerSaleScalarRelationFilter {
  is: ResellerSaleWhereInput
  isNot: ResellerSaleWhereInput
}

input ResellerPaymentListRelationFilter {
  every: ResellerPaymentWhereInput
  some: ResellerPaymentWhereInput
  none: ResellerPaymentWhereInput
}

input ResellerPaymentWhereInput {
  AND: [ResellerPaymentWhereInput!]
  OR: [ResellerPaymentWhereInput!]
  NOT: [ResellerPaymentWhereInput!]
  id: StringFilter
  saleOrderId: StringFilter
  resellerId: StringFilter
  resellerSaleId: StringNullableFilter
  amount: FloatFilter
  method: EnumPaymentMethodFilter
  reference: StringNullableFilter
  status: EnumPaymentStatusFilter
  receivedAt: DateTimeFilter
  receivedById: StringFilter
  saleOrder: SaleOrderScalarRelationFilter
  reseller: UserScalarRelationFilter
  sale: ResellerSaleNullableScalarRelationFilter
  receivedBy: UserScalarRelationFilter
}

input EnumPaymentMethodFilter {
  equals: PaymentMethod
  in: [PaymentMethod!]
  notIn: [PaymentMethod!]
  not: NestedEnumPaymentMethodFilter
}

input NestedEnumPaymentMethodFilter {
  equals: PaymentMethod
  in: [PaymentMethod!]
  notIn: [PaymentMethod!]
  not: NestedEnumPaymentMethodFilter
}

input EnumPaymentStatusFilter {
  equals: PaymentStatus
  in: [PaymentStatus!]
  notIn: [PaymentStatus!]
  not: NestedEnumPaymentStatusFilter
}

input NestedEnumPaymentStatusFilter {
  equals: PaymentStatus
  in: [PaymentStatus!]
  notIn: [PaymentStatus!]
  not: NestedEnumPaymentStatusFilter
}

input SaleOrderScalarRelationFilter {
  is: SaleOrderWhereInput
  isNot: SaleOrderWhereInput
}

input SaleOrderWhereInput {
  AND: [SaleOrderWhereInput!]
  OR: [SaleOrderWhereInput!]
  NOT: [SaleOrderWhereInput!]
  id: StringFilter
  storeId: StringFilter
  billerId: StringFilter
  type: EnumSaleTypeFilter
  status: EnumSaleStatusFilter
  phase: EnumOrderPhaseFilter
  totalAmount: FloatFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
  resellerSaleid: StringNullableFilter
  consumerSale: ConsumerSaleNullableScalarRelationFilter
  resellerSale: ResellerSaleNullableScalarRelationFilter
  fulfillment: FulfillmentNullableScalarRelationFilter
  quotation: QuotationNullableScalarRelationFilter
  ConsumerPayment: ConsumerPaymentListRelationFilter
  ResellerPayment: ResellerPaymentListRelationFilter
}

input EnumOrderPhaseFilter {
  equals: OrderPhase
  in: [OrderPhase!]
  notIn: [OrderPhase!]
  not: NestedEnumOrderPhaseFilter
}

input NestedEnumOrderPhaseFilter {
  equals: OrderPhase
  in: [OrderPhase!]
  notIn: [OrderPhase!]
  not: NestedEnumOrderPhaseFilter
}

input ConsumerSaleNullableScalarRelationFilter {
  is: ConsumerSaleWhereInput
  isNot: ConsumerSaleWhereInput
}

input FulfillmentNullableScalarRelationFilter {
  is: FulfillmentWhereInput
  isNot: FulfillmentWhereInput
}

input FulfillmentWhereInput {
  AND: [FulfillmentWhereInput!]
  OR: [FulfillmentWhereInput!]
  NOT: [FulfillmentWhereInput!]
  id: StringFilter
  saleOrderId: StringFilter
  type: EnumFulfillmentTypeFilter
  deliveryPersonnelId: StringNullableFilter
  deliveryAddress: StringNullableFilter
  status: EnumFulfillmentStatusFilter
  cost: FloatNullableFilter
  confirmationPin: StringNullableFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
  saleOrder: SaleOrderScalarRelationFilter
  deliveryPersonnel: UserNullableScalarRelationFilter
}

input EnumFulfillmentTypeFilter {
  equals: FulfillmentType
  in: [FulfillmentType!]
  notIn: [FulfillmentType!]
  not: NestedEnumFulfillmentTypeFilter
}

input NestedEnumFulfillmentTypeFilter {
  equals: FulfillmentType
  in: [FulfillmentType!]
  notIn: [FulfillmentType!]
  not: NestedEnumFulfillmentTypeFilter
}

input EnumFulfillmentStatusFilter {
  equals: FulfillmentStatus
  in: [FulfillmentStatus!]
  notIn: [FulfillmentStatus!]
  not: NestedEnumFulfillmentStatusFilter
}

input NestedEnumFulfillmentStatusFilter {
  equals: FulfillmentStatus
  in: [FulfillmentStatus!]
  notIn: [FulfillmentStatus!]
  not: NestedEnumFulfillmentStatusFilter
}

input FloatNullableFilter {
  equals: Float
  in: [Float!]
  notIn: [Float!]
  lt: Float
  lte: Float
  gt: Float
  gte: Float
  not: NestedFloatNullableFilter
}

input NestedFloatNullableFilter {
  equals: Float
  in: [Float!]
  notIn: [Float!]
  lt: Float
  lte: Float
  gt: Float
  gte: Float
  not: NestedFloatNullableFilter
}

input ConsumerPaymentListRelationFilter {
  every: ConsumerPaymentWhereInput
  some: ConsumerPaymentWhereInput
  none: ConsumerPaymentWhereInput
}

input ConsumerPaymentWhereInput {
  AND: [ConsumerPaymentWhereInput!]
  OR: [ConsumerPaymentWhereInput!]
  NOT: [ConsumerPaymentWhereInput!]
  id: StringFilter
  consumerSaleId: StringFilter
  saleOrderId: StringFilter
  amount: FloatFilter
  method: EnumPaymentMethodFilter
  status: EnumPaymentStatusFilter
  receivedAt: DateTimeFilter
  reference: StringNullableFilter
  saleOrder: SaleOrderScalarRelationFilter
  sale: ConsumerSaleScalarRelationFilter
}

input ConsumerSaleScalarRelationFilter {
  is: ConsumerSaleWhereInput
  isNot: ConsumerSaleWhereInput
}

input SalesReturnListRelationFilter {
  every: SalesReturnWhereInput
  some: SalesReturnWhereInput
  none: SalesReturnWhereInput
}

input SalesReturnWhereInput {
  AND: [SalesReturnWhereInput!]
  OR: [SalesReturnWhereInput!]
  NOT: [SalesReturnWhereInput!]
  id: StringFilter
  type: EnumSaleTypeFilter
  consumerSaleId: StringNullableFilter
  resellerSaleId: StringNullableFilter
  returnedById: StringFilter
  receivedById: StringFilter
  storeId: StringFilter
  status: EnumReturnStatusFilter
  returnLocation: EnumReturnLocationFilter
  isApprovedLate: BoolFilter
  approvedById: StringNullableFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
  consumerSale: ConsumerSaleNullableScalarRelationFilter
  resellerSale: ResellerSaleNullableScalarRelationFilter
  returnedBy: UserScalarRelationFilter
  receivedBy: UserScalarRelationFilter
  approvedBy: UserNullableScalarRelationFilter
  store: StoreScalarRelationFilter
  items: SalesReturnItemListRelationFilter
}

input EnumReturnStatusFilter {
  equals: ReturnStatus
  in: [ReturnStatus!]
  notIn: [ReturnStatus!]
  not: NestedEnumReturnStatusFilter
}

input NestedEnumReturnStatusFilter {
  equals: ReturnStatus
  in: [ReturnStatus!]
  notIn: [ReturnStatus!]
  not: NestedEnumReturnStatusFilter
}

input EnumReturnLocationFilter {
  equals: ReturnLocation
  in: [ReturnLocation!]
  notIn: [ReturnLocation!]
  not: NestedEnumReturnLocationFilter
}

input NestedEnumReturnLocationFilter {
  equals: ReturnLocation
  in: [ReturnLocation!]
  notIn: [ReturnLocation!]
  not: NestedEnumReturnLocationFilter
}

input SalesReturnItemListRelationFilter {
  every: SalesReturnItemWhereInput
  some: SalesReturnItemWhereInput
  none: SalesReturnItemWhereInput
}

input SalesReturnItemWhereInput {
  AND: [SalesReturnItemWhereInput!]
  OR: [SalesReturnItemWhereInput!]
  NOT: [SalesReturnItemWhereInput!]
  id: StringFilter
  salesReturnId: StringFilter
  productVariantId: StringFilter
  quantity: IntFilter
  condition: StringFilter
  return: SalesReturnScalarRelationFilter
  productVariant: ProductVariantScalarRelationFilter
}

input SalesReturnScalarRelationFilter {
  is: SalesReturnWhereInput
  isNot: SalesReturnWhereInput
}

input SaleOrderNullableScalarRelationFilter {
  is: SaleOrderWhereInput
  isNot: SaleOrderWhereInput
}

input ConsumerSaleItemListRelationFilter {
  every: ConsumerSaleItemWhereInput
  some: ConsumerSaleItemWhereInput
  none: ConsumerSaleItemWhereInput
}

input ConsumerSaleItemWhereInput {
  AND: [ConsumerSaleItemWhereInput!]
  OR: [ConsumerSaleItemWhereInput!]
  NOT: [ConsumerSaleItemWhereInput!]
  id: StringFilter
  consumerSaleId: StringFilter
  productVariantId: StringFilter
  quantity: IntFilter
  unitPrice: FloatFilter
  sale: ConsumerSaleScalarRelationFilter
  productVariant: ProductVariantScalarRelationFilter
}

input ConsumerReceiptNullableScalarRelationFilter {
  is: ConsumerReceiptWhereInput
  isNot: ConsumerReceiptWhereInput
}

input ConsumerReceiptWhereInput {
  AND: [ConsumerReceiptWhereInput!]
  OR: [ConsumerReceiptWhereInput!]
  NOT: [ConsumerReceiptWhereInput!]
  id: StringFilter
  consumerSaleId: StringFilter
  issuedById: StringFilter
  issuedAt: DateTimeFilter
  receiptUrl: StringNullableFilter
  sale: ConsumerSaleScalarRelationFilter
  issuedBy: UserScalarRelationFilter
}

input CustomerPreferenceProfileNullableScalarRelationFilter {
  is: CustomerPreferenceProfileWhereInput
  isNot: CustomerPreferenceProfileWhereInput
}

input AdminActionLogListRelationFilter {
  every: AdminActionLogWhereInput
  some: AdminActionLogWhereInput
  none: AdminActionLogWhereInput
}

input AdminActionLogWhereInput {
  AND: [AdminActionLogWhereInput!]
  OR: [AdminActionLogWhereInput!]
  NOT: [AdminActionLogWhereInput!]
  id: StringFilter
  adminId: StringFilter
  action: StringFilter
  entityType: StringFilter
  entityId: StringFilter
  beforeChange: JsonNullableFilter
  afterChange: JsonNullableFilter
  timestamp: DateTimeFilter
  admin: UserScalarRelationFilter
}

input JsonNullableFilter {
  equals: JSON
  path: [String!]
  mode: QueryMode
  string_contains: String
  string_starts_with: String
  string_ends_with: String
  array_starts_with: JSON
  array_ends_with: JSON
  array_contains: JSON
  lt: JSON
  lte: JSON
  gt: JSON
  gte: JSON
  not: JSON
}

input SupportMessageListRelationFilter {
  every: SupportMessageWhereInput
  some: SupportMessageWhereInput
  none: SupportMessageWhereInput
}

input SupportMessageWhereInput {
  AND: [SupportMessageWhereInput!]
  OR: [SupportMessageWhereInput!]
  NOT: [SupportMessageWhereInput!]
  id: StringFilter
  userId: StringFilter
  isAdmin: BoolFilter
  message: StringFilter
  createdAt: DateTimeFilter
  user: UserScalarRelationFilter
}

input StockReceiptBatchListRelationFilter {
  every: StockReceiptBatchWhereInput
  some: StockReceiptBatchWhereInput
  none: StockReceiptBatchWhereInput
}

input StockReceiptBatchWhereInput {
  AND: [StockReceiptBatchWhereInput!]
  OR: [StockReceiptBatchWhereInput!]
  NOT: [StockReceiptBatchWhereInput!]
  id: StringFilter
  purchaseOrderId: StringFilter
  storeId: StringFilter
  receivedById: StringFilter
  confirmedById: StringFilter
  waybillUrl: StringNullableFilter
  receivedAt: DateTimeFilter
  store: StoreScalarRelationFilter
  receivedBy: UserScalarRelationFilter
  confirmedBy: UserScalarRelationFilter
  items: StockReceiptBatchItemListRelationFilter
  purchaseReturns: PurchaseReturnItemListRelationFilter
  PurchaseOrder: PurchaseOrderListRelationFilter
}

input StockReceiptBatchItemListRelationFilter {
  every: StockReceiptBatchItemWhereInput
  some: StockReceiptBatchItemWhereInput
  none: StockReceiptBatchItemWhereInput
}

input StockReceiptBatchItemWhereInput {
  AND: [StockReceiptBatchItemWhereInput!]
  OR: [StockReceiptBatchItemWhereInput!]
  NOT: [StockReceiptBatchItemWhereInput!]
  id: StringFilter
  stockReceiptBatchId: StringFilter
  productVariantId: StringFilter
  quantity: IntFilter
  batch: StockReceiptBatchScalarRelationFilter
  productVariant: ProductVariantScalarRelationFilter
}

input StockReceiptBatchScalarRelationFilter {
  is: StockReceiptBatchWhereInput
  isNot: StockReceiptBatchWhereInput
}

input PurchaseReturnItemListRelationFilter {
  every: PurchaseReturnItemWhereInput
  some: PurchaseReturnItemWhereInput
  none: PurchaseReturnItemWhereInput
}

input PurchaseReturnItemWhereInput {
  AND: [PurchaseReturnItemWhereInput!]
  OR: [PurchaseReturnItemWhereInput!]
  NOT: [PurchaseReturnItemWhereInput!]
  id: StringFilter
  purchaseReturnId: StringFilter
  productVariantId: StringFilter
  batchId: StringFilter
  quantity: IntFilter
  return: PurchaseReturnScalarRelationFilter
  productVariant: ProductVariantScalarRelationFilter
  batch: StockReceiptBatchScalarRelationFilter
}

input PurchaseReturnScalarRelationFilter {
  is: PurchaseReturnWhereInput
  isNot: PurchaseReturnWhereInput
}

input PurchaseReturnWhereInput {
  AND: [PurchaseReturnWhereInput!]
  OR: [PurchaseReturnWhereInput!]
  NOT: [PurchaseReturnWhereInput!]
  id: StringFilter
  supplierId: StringFilter
  initiatedById: StringFilter
  approvedById: StringFilter
  status: EnumReturnStatusFilter
  reason: StringNullableFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
  supplier: SupplierScalarRelationFilter
  initiatedBy: UserScalarRelationFilter
  approvedBy: UserScalarRelationFilter
  items: PurchaseReturnItemListRelationFilter
}

input SupplierScalarRelationFilter {
  is: SupplierWhereInput
  isNot: SupplierWhereInput
}

input SupplierWhereInput {
  AND: [SupplierWhereInput!]
  OR: [SupplierWhereInput!]
  NOT: [SupplierWhereInput!]
  id: StringFilter
  name: StringFilter
  contactInfo: JsonNullableFilter
  isFrequent: BoolFilter
  creditLimit: FloatFilter
  currentBalance: FloatFilter
  paymentTerms: StringNullableFilter
  notes: StringNullableFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
  userId: StringNullableFilter
  purchaseOrders: PurchaseOrderListRelationFilter
  payments: SupplierPaymentListRelationFilter
  returns: PurchaseReturnListRelationFilter
  catalogs: SupplierCatalogListRelationFilter
  quotes: SupplierQuoteListRelationFilter
  user: UserNullableScalarRelationFilter
}

input PurchaseOrderListRelationFilter {
  every: PurchaseOrderWhereInput
  some: PurchaseOrderWhereInput
  none: PurchaseOrderWhereInput
}

input PurchaseOrderWhereInput {
  AND: [PurchaseOrderWhereInput!]
  OR: [PurchaseOrderWhereInput!]
  NOT: [PurchaseOrderWhereInput!]
  id: StringFilter
  supplierId: StringFilter
  storeId: StringNullableFilter
  invoiceNumber: StringFilter
  status: EnumPurchaseOrderStatusFilter
  phase: EnumPurchasePhaseFilter
  dueDate: DateTimeFilter
  totalAmount: FloatFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
  supplier: SupplierScalarRelationFilter
  store: StoreNullableScalarRelationFilter
  items: PurchaseOrderItemListRelationFilter
  receipts: StockReceiptBatchListRelationFilter
  payments: SupplierPaymentListRelationFilter
}

input EnumPurchaseOrderStatusFilter {
  equals: PurchaseOrderStatus
  in: [PurchaseOrderStatus!]
  notIn: [PurchaseOrderStatus!]
  not: NestedEnumPurchaseOrderStatusFilter
}

input NestedEnumPurchaseOrderStatusFilter {
  equals: PurchaseOrderStatus
  in: [PurchaseOrderStatus!]
  notIn: [PurchaseOrderStatus!]
  not: NestedEnumPurchaseOrderStatusFilter
}

input EnumPurchasePhaseFilter {
  equals: PurchasePhase
  in: [PurchasePhase!]
  notIn: [PurchasePhase!]
  not: NestedEnumPurchasePhaseFilter
}

input NestedEnumPurchasePhaseFilter {
  equals: PurchasePhase
  in: [PurchasePhase!]
  notIn: [PurchasePhase!]
  not: NestedEnumPurchasePhaseFilter
}

input PurchaseOrderItemListRelationFilter {
  every: PurchaseOrderItemWhereInput
  some: PurchaseOrderItemWhereInput
  none: PurchaseOrderItemWhereInput
}

input PurchaseOrderItemWhereInput {
  AND: [PurchaseOrderItemWhereInput!]
  OR: [PurchaseOrderItemWhereInput!]
  NOT: [PurchaseOrderItemWhereInput!]
  id: StringFilter
  purchaseOrderId: StringFilter
  productVariantId: StringFilter
  quantity: IntFilter
  unitCost: FloatFilter
  purchaseOrder: PurchaseOrderScalarRelationFilter
  productVariant: ProductVariantScalarRelationFilter
}

input PurchaseOrderScalarRelationFilter {
  is: PurchaseOrderWhereInput
  isNot: PurchaseOrderWhereInput
}

input SupplierPaymentListRelationFilter {
  every: SupplierPaymentWhereInput
  some: SupplierPaymentWhereInput
  none: SupplierPaymentWhereInput
}

input SupplierPaymentWhereInput {
  AND: [SupplierPaymentWhereInput!]
  OR: [SupplierPaymentWhereInput!]
  NOT: [SupplierPaymentWhereInput!]
  id: StringFilter
  supplierId: StringFilter
  purchaseOrderId: StringNullableFilter
  amount: FloatFilter
  paymentDate: DateTimeFilter
  method: StringFilter
  notes: StringNullableFilter
  supplier: SupplierScalarRelationFilter
  purchaseOrder: PurchaseOrderNullableScalarRelationFilter
}

input PurchaseOrderNullableScalarRelationFilter {
  is: PurchaseOrderWhereInput
  isNot: PurchaseOrderWhereInput
}

input PurchaseReturnListRelationFilter {
  every: PurchaseReturnWhereInput
  some: PurchaseReturnWhereInput
  none: PurchaseReturnWhereInput
}

input SupplierCatalogListRelationFilter {
  every: SupplierCatalogWhereInput
  some: SupplierCatalogWhereInput
  none: SupplierCatalogWhereInput
}

input SupplierCatalogWhereInput {
  AND: [SupplierCatalogWhereInput!]
  OR: [SupplierCatalogWhereInput!]
  NOT: [SupplierCatalogWhereInput!]
  id: StringFilter
  supplierId: StringFilter
  productVariantId: StringFilter
  defaultCost: FloatFilter
  leadTimeDays: IntNullableFilter
  isPreferred: BoolFilter
  supplier: SupplierScalarRelationFilter
  productVariant: ProductVariantScalarRelationFilter
}

input SupplierQuoteListRelationFilter {
  every: SupplierQuoteWhereInput
  some: SupplierQuoteWhereInput
  none: SupplierQuoteWhereInput
}

input SupplierQuoteWhereInput {
  AND: [SupplierQuoteWhereInput!]
  OR: [SupplierQuoteWhereInput!]
  NOT: [SupplierQuoteWhereInput!]
  id: StringFilter
  requisitionId: StringFilter
  supplierId: StringFilter
  status: EnumSupplierQuoteStatusFilter
  validUntil: DateTimeNullableFilter
  notes: StringNullableFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
  requisition: PurchaseRequisitionScalarRelationFilter
  supplier: SupplierScalarRelationFilter
  items: SupplierQuoteItemListRelationFilter
}

input EnumSupplierQuoteStatusFilter {
  equals: SupplierQuoteStatus
  in: [SupplierQuoteStatus!]
  notIn: [SupplierQuoteStatus!]
  not: NestedEnumSupplierQuoteStatusFilter
}

input NestedEnumSupplierQuoteStatusFilter {
  equals: SupplierQuoteStatus
  in: [SupplierQuoteStatus!]
  notIn: [SupplierQuoteStatus!]
  not: NestedEnumSupplierQuoteStatusFilter
}

input PurchaseRequisitionScalarRelationFilter {
  is: PurchaseRequisitionWhereInput
  isNot: PurchaseRequisitionWhereInput
}

input PurchaseRequisitionWhereInput {
  AND: [PurchaseRequisitionWhereInput!]
  OR: [PurchaseRequisitionWhereInput!]
  NOT: [PurchaseRequisitionWhereInput!]
  id: StringFilter
  storeId: StringFilter
  requestedById: StringFilter
  status: EnumPurchaseRequisitionStatusFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
  store: StoreScalarRelationFilter
  requestedBy: UserScalarRelationFilter
  items: PurchaseRequisitionItemListRelationFilter
  quotes: SupplierQuoteListRelationFilter
}

input EnumPurchaseRequisitionStatusFilter {
  equals: PurchaseRequisitionStatus
  in: [PurchaseRequisitionStatus!]
  notIn: [PurchaseRequisitionStatus!]
  not: NestedEnumPurchaseRequisitionStatusFilter
}

input NestedEnumPurchaseRequisitionStatusFilter {
  equals: PurchaseRequisitionStatus
  in: [PurchaseRequisitionStatus!]
  notIn: [PurchaseRequisitionStatus!]
  not: NestedEnumPurchaseRequisitionStatusFilter
}

input PurchaseRequisitionItemListRelationFilter {
  every: PurchaseRequisitionItemWhereInput
  some: PurchaseRequisitionItemWhereInput
  none: PurchaseRequisitionItemWhereInput
}

input PurchaseRequisitionItemWhereInput {
  AND: [PurchaseRequisitionItemWhereInput!]
  OR: [PurchaseRequisitionItemWhereInput!]
  NOT: [PurchaseRequisitionItemWhereInput!]
  id: StringFilter
  requisitionId: StringFilter
  productVariantId: StringFilter
  requestedQty: IntFilter
  notes: StringNullableFilter
  requisition: PurchaseRequisitionScalarRelationFilter
  productVariant: ProductVariantScalarRelationFilter
}

input SupplierQuoteItemListRelationFilter {
  every: SupplierQuoteItemWhereInput
  some: SupplierQuoteItemWhereInput
  none: SupplierQuoteItemWhereInput
}

input SupplierQuoteItemWhereInput {
  AND: [SupplierQuoteItemWhereInput!]
  OR: [SupplierQuoteItemWhereInput!]
  NOT: [SupplierQuoteItemWhereInput!]
  id: StringFilter
  quoteId: StringFilter
  productVariantId: StringFilter
  unitCost: FloatFilter
  minQty: IntNullableFilter
  leadTimeDays: IntNullableFilter
  quote: SupplierQuoteScalarRelationFilter
  productVariant: ProductVariantScalarRelationFilter
}

input SupplierQuoteScalarRelationFilter {
  is: SupplierQuoteWhereInput
  isNot: SupplierQuoteWhereInput
}

input StockTransferListRelationFilter {
  every: StockTransferWhereInput
  some: StockTransferWhereInput
  none: StockTransferWhereInput
}

input StockTransferWhereInput {
  AND: [StockTransferWhereInput!]
  OR: [StockTransferWhereInput!]
  NOT: [StockTransferWhereInput!]
  id: StringFilter
  fromStoreId: StringFilter
  toStoreId: StringFilter
  requestedById: StringFilter
  approvedById: StringFilter
  status: EnumTransferStatusFilter
  createdAt: DateTimeFilter
  fromStore: StoreScalarRelationFilter
  toStore: StoreScalarRelationFilter
  requestedBy: UserScalarRelationFilter
  approvedBy: UserScalarRelationFilter
  items: StockTransferItemListRelationFilter
}

input EnumTransferStatusFilter {
  equals: TransferStatus
  in: [TransferStatus!]
  notIn: [TransferStatus!]
  not: NestedEnumTransferStatusFilter
}

input NestedEnumTransferStatusFilter {
  equals: TransferStatus
  in: [TransferStatus!]
  notIn: [TransferStatus!]
  not: NestedEnumTransferStatusFilter
}

input StockTransferItemListRelationFilter {
  every: StockTransferItemWhereInput
  some: StockTransferItemWhereInput
  none: StockTransferItemWhereInput
}

input StockTransferItemWhereInput {
  AND: [StockTransferItemWhereInput!]
  OR: [StockTransferItemWhereInput!]
  NOT: [StockTransferItemWhereInput!]
  id: StringFilter
  stockTransferId: StringFilter
  productVariantId: StringFilter
  quantity: IntFilter
  transfer: StockTransferScalarRelationFilter
  productVariant: ProductVariantScalarRelationFilter
}

input StockTransferScalarRelationFilter {
  is: StockTransferWhereInput
  isNot: StockTransferWhereInput
}

input StoreListRelationFilter {
  every: StoreWhereInput
  some: StoreWhereInput
  none: StoreWhereInput
}

input ConsumerReceiptListRelationFilter {
  every: ConsumerReceiptWhereInput
  some: ConsumerReceiptWhereInput
  none: ConsumerReceiptWhereInput
}

input ResellerSaleListRelationFilter {
  every: ResellerSaleWhereInput
  some: ResellerSaleWhereInput
  none: ResellerSaleWhereInput
}

input PaymentListRelationFilter {
  every: PaymentWhereInput
  some: PaymentWhereInput
  none: PaymentWhereInput
}

input PaymentWhereInput {
  AND: [PaymentWhereInput!]
  OR: [PaymentWhereInput!]
  NOT: [PaymentWhereInput!]
  id: StringFilter
  type: EnumPaymentTypeFilter
  sourceId: StringFilter
  referenceEntity: StringFilter
  referenceId: StringFilter
  amount: FloatFilter
  method: EnumPaymentMethodFilter
  receivedAt: DateTimeFilter
  receivedById: StringFilter
  receivedBy: UserScalarRelationFilter
}

input EnumPaymentTypeFilter {
  equals: PaymentType
  in: [PaymentType!]
  notIn: [PaymentType!]
  not: NestedEnumPaymentTypeFilter
}

input NestedEnumPaymentTypeFilter {
  equals: PaymentType
  in: [PaymentType!]
  notIn: [PaymentType!]
  not: NestedEnumPaymentTypeFilter
}

input ResellerTierHistoryListRelationFilter {
  every: ResellerTierHistoryWhereInput
  some: ResellerTierHistoryWhereInput
  none: ResellerTierHistoryWhereInput
}

input ResellerTierHistoryWhereInput {
  AND: [ResellerTierHistoryWhereInput!]
  OR: [ResellerTierHistoryWhereInput!]
  NOT: [ResellerTierHistoryWhereInput!]
  id: StringFilter
  userId: StringFilter
  fromTier: EnumUserTierFilter
  toTier: EnumUserTierFilter
  changedBy: StringFilter
  changedAt: DateTimeFilter
  user: UserScalarRelationFilter
  admin: UserScalarRelationFilter
}

input ResellerProfileListRelationFilter {
  every: ResellerProfileWhereInput
  some: ResellerProfileWhereInput
  none: ResellerProfileWhereInput
}

input NotificationListRelationFilter {
  every: NotificationWhereInput
  some: NotificationWhereInput
  none: NotificationWhereInput
}

input NotificationWhereInput {
  AND: [NotificationWhereInput!]
  OR: [NotificationWhereInput!]
  NOT: [NotificationWhereInput!]
  id: StringFilter
  userId: StringFilter
  type: StringFilter
  message: StringFilter
  isRead: BoolFilter
  createdAt: DateTimeFilter
  user: UserScalarRelationFilter
}

input FulfillmentListRelationFilter {
  every: FulfillmentWhereInput
  some: FulfillmentWhereInput
  none: FulfillmentWhereInput
}

input PurchaseRequisitionListRelationFilter {
  every: PurchaseRequisitionWhereInput
  some: PurchaseRequisitionWhereInput
  none: PurchaseRequisitionWhereInput
}

input SupplierListRelationFilter {
  every: SupplierWhereInput
  some: SupplierWhereInput
  none: SupplierWhereInput
}

input StockMovementListRelationFilter {
  every: StockMovementWhereInput
  some: StockMovementWhereInput
  none: StockMovementWhereInput
}

input StockMovementWhereInput {
  AND: [StockMovementWhereInput!]
  OR: [StockMovementWhereInput!]
  NOT: [StockMovementWhereInput!]
  id: StringFilter
  storeId: StringFilter
  direction: EnumMovementDirectionFilter
  movementType: EnumMovementTypeFilter
  referenceEntity: StringFilter
  referenceId: StringFilter
  createdAt: DateTimeFilter
  store: StoreScalarRelationFilter
  items: StockMovementItemListRelationFilter
}

input EnumMovementDirectionFilter {
  equals: MovementDirection
  in: [MovementDirection!]
  notIn: [MovementDirection!]
  not: NestedEnumMovementDirectionFilter
}

input NestedEnumMovementDirectionFilter {
  equals: MovementDirection
  in: [MovementDirection!]
  notIn: [MovementDirection!]
  not: NestedEnumMovementDirectionFilter
}

input EnumMovementTypeFilter {
  equals: MovementType
  in: [MovementType!]
  notIn: [MovementType!]
  not: NestedEnumMovementTypeFilter
}

input NestedEnumMovementTypeFilter {
  equals: MovementType
  in: [MovementType!]
  notIn: [MovementType!]
  not: NestedEnumMovementTypeFilter
}

input StockMovementItemListRelationFilter {
  every: StockMovementItemWhereInput
  some: StockMovementItemWhereInput
  none: StockMovementItemWhereInput
}

input StockMovementItemWhereInput {
  AND: [StockMovementItemWhereInput!]
  OR: [StockMovementItemWhereInput!]
  NOT: [StockMovementItemWhereInput!]
  id: StringFilter
  stockMovementId: StringFilter
  productVariantId: StringFilter
  quantity: IntFilter
  movement: StockMovementScalarRelationFilter
  productVariant: ProductVariantScalarRelationFilter
}

input StockMovementScalarRelationFilter {
  is: StockMovementWhereInput
  isNot: StockMovementWhereInput
}

input CustomerListRelationFilter {
  every: CustomerWhereInput
  some: CustomerWhereInput
  none: CustomerWhereInput
}

input InvoiceImportListRelationFilter {
  every: InvoiceImportWhereInput
  some: InvoiceImportWhereInput
  none: InvoiceImportWhereInput
}

input InvoiceImportWhereInput {
  AND: [InvoiceImportWhereInput!]
  OR: [InvoiceImportWhereInput!]
  NOT: [InvoiceImportWhereInput!]
  id: StringFilter
  url: StringFilter
  supplierName: StringNullableFilter
  storeId: StringNullableFilter
  status: EnumInvoiceImportStatusFilter
  parsed: JsonNullableFilter
  message: StringNullableFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
  store: StoreNullableScalarRelationFilter
}

input EnumInvoiceImportStatusFilter {
  equals: InvoiceImportStatus
  in: [InvoiceImportStatus!]
  notIn: [InvoiceImportStatus!]
  not: NestedEnumInvoiceImportStatusFilter
}

input NestedEnumInvoiceImportStatusFilter {
  equals: InvoiceImportStatus
  in: [InvoiceImportStatus!]
  notIn: [InvoiceImportStatus!]
  not: NestedEnumInvoiceImportStatusFilter
}

input ProductSalesStatsNullableScalarRelationFilter {
  is: ProductSalesStatsWhereInput
  isNot: ProductSalesStatsWhereInput
}

input ProductSalesStatsWhereInput {
  AND: [ProductSalesStatsWhereInput!]
  OR: [ProductSalesStatsWhereInput!]
  NOT: [ProductSalesStatsWhereInput!]
  id: StringFilter
  productVariantId: StringFilter
  totalSold: IntFilter
  totalReturned: IntFilter
  lastSoldAt: DateTimeNullableFilter
  monthlySales: JsonFilter
  productVariant: ProductVariantScalarRelationFilter
}

input ProductVariantTierPriceListRelationFilter {
  every: ProductVariantTierPriceWhereInput
  some: ProductVariantTierPriceWhereInput
  none: ProductVariantTierPriceWhereInput
}

input ProductVariantTierPriceWhereInput {
  AND: [ProductVariantTierPriceWhereInput!]
  OR: [ProductVariantTierPriceWhereInput!]
  NOT: [ProductVariantTierPriceWhereInput!]
  id: StringFilter
  productVariantId: StringFilter
  tier: EnumUserTierFilter
  price: FloatFilter
  variant: ProductVariantScalarRelationFilter
}

input VariantFacetValueListRelationFilter {
  every: VariantFacetValueWhereInput
  some: VariantFacetValueWhereInput
  none: VariantFacetValueWhereInput
}

input VariantFacetValueWhereInput {
  AND: [VariantFacetValueWhereInput!]
  OR: [VariantFacetValueWhereInput!]
  NOT: [VariantFacetValueWhereInput!]
  id: StringFilter
  productVariantId: StringFilter
  facetId: StringFilter
  value: StringFilter
  variant: ProductVariantScalarRelationFilter
  facet: FacetScalarRelationFilter
}

input FacetScalarRelationFilter {
  is: FacetWhereInput
  isNot: FacetWhereInput
}

input FacetWhereInput {
  AND: [FacetWhereInput!]
  OR: [FacetWhereInput!]
  NOT: [FacetWhereInput!]
  id: StringFilter
  name: StringFilter
  code: StringFilter
  isPrivate: BoolFilter
  values: StringNullableListFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
  products: ProductFacetValueListRelationFilter
  variants: VariantFacetValueListRelationFilter
}

input StringNullableListFilter {
  equals: [String!]
  has: String
  hasEvery: [String!]
  hasSome: [String!]
  isEmpty: Boolean
}

input ProductFacetValueListRelationFilter {
  every: ProductFacetValueWhereInput
  some: ProductFacetValueWhereInput
  none: ProductFacetValueWhereInput
}

input ProductFacetValueWhereInput {
  AND: [ProductFacetValueWhereInput!]
  OR: [ProductFacetValueWhereInput!]
  NOT: [ProductFacetValueWhereInput!]
  id: StringFilter
  productId: StringFilter
  facetId: StringFilter
  value: StringFilter
  product: ProductScalarRelationFilter
  facet: FacetScalarRelationFilter
}

input ProductScalarRelationFilter {
  is: ProductWhereInput
  isNot: ProductWhereInput
}

input ProductOrderByWithRelationInput {
  id: SortOrder
  name: SortOrder
  description: SortOrderInput
  barcode: SortOrderInput
  createdAt: SortOrder
  updatedAt: SortOrder
  variants: ProductVariantOrderByRelationAggregateInput
  facets: ProductFacetValueOrderByRelationAggregateInput
}

enum SortOrder {
  asc
  desc
}

input SortOrderInput {
  sort: SortOrder!
  nulls: NullsOrder
}

enum NullsOrder {
  first
  last
}

input ProductVariantOrderByRelationAggregateInput {
  _count: SortOrder
}

input ProductFacetValueOrderByRelationAggregateInput {
  _count: SortOrder
}

input ProductWhereUniqueInput {
  id: String
  barcode: String
  AND: [ProductWhereInput!]
  OR: [ProductWhereInput!]
  NOT: [ProductWhereInput!]
  name: StringFilter
  description: StringNullableFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
  variants: ProductVariantListRelationFilter
  facets: ProductFacetValueListRelationFilter
}

enum ProductScalarFieldEnum {
  id
  name
  description
  barcode
  createdAt
  updatedAt
}

input ProductOrderByWithAggregationInput {
  id: SortOrder
  name: SortOrder
  description: SortOrderInput
  barcode: SortOrderInput
  createdAt: SortOrder
  updatedAt: SortOrder
  _count: ProductCountOrderByAggregateInput
  _max: ProductMaxOrderByAggregateInput
  _min: ProductMinOrderByAggregateInput
}

input ProductCountOrderByAggregateInput {
  id: SortOrder
  name: SortOrder
  description: SortOrder
  barcode: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
}

input ProductMaxOrderByAggregateInput {
  id: SortOrder
  name: SortOrder
  description: SortOrder
  barcode: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
}

input ProductMinOrderByAggregateInput {
  id: SortOrder
  name: SortOrder
  description: SortOrder
  barcode: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
}

input ProductScalarWhereWithAggregatesInput {
  AND: [ProductScalarWhereWithAggregatesInput!]
  OR: [ProductScalarWhereWithAggregatesInput!]
  NOT: [ProductScalarWhereWithAggregatesInput!]
  id: StringWithAggregatesFilter
  name: StringWithAggregatesFilter
  description: StringNullableWithAggregatesFilter
  barcode: StringNullableWithAggregatesFilter
  createdAt: DateTimeWithAggregatesFilter
  updatedAt: DateTimeWithAggregatesFilter
}

input StringWithAggregatesFilter {
  equals: String
  in: [String!]
  notIn: [String!]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  mode: QueryMode
  not: NestedStringWithAggregatesFilter
  _count: NestedIntFilter
  _min: NestedStringFilter
  _max: NestedStringFilter
}

input NestedStringWithAggregatesFilter {
  equals: String
  in: [String!]
  notIn: [String!]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  not: NestedStringWithAggregatesFilter
  _count: NestedIntFilter
  _min: NestedStringFilter
  _max: NestedStringFilter
}

input StringNullableWithAggregatesFilter {
  equals: String
  in: [String!]
  notIn: [String!]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  mode: QueryMode
  not: NestedStringNullableWithAggregatesFilter
  _count: NestedIntNullableFilter
  _min: NestedStringNullableFilter
  _max: NestedStringNullableFilter
}

input NestedStringNullableWithAggregatesFilter {
  equals: String
  in: [String!]
  notIn: [String!]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  not: NestedStringNullableWithAggregatesFilter
  _count: NestedIntNullableFilter
  _min: NestedStringNullableFilter
  _max: NestedStringNullableFilter
}

input DateTimeWithAggregatesFilter {
  equals: DateTime
  in: [DateTime!]
  notIn: [DateTime!]
  lt: DateTime
  lte: DateTime
  gt: DateTime
  gte: DateTime
  not: NestedDateTimeWithAggregatesFilter
  _count: NestedIntFilter
  _min: NestedDateTimeFilter
  _max: NestedDateTimeFilter
}

input NestedDateTimeWithAggregatesFilter {
  equals: DateTime
  in: [DateTime!]
  notIn: [DateTime!]
  lt: DateTime
  lte: DateTime
  gt: DateTime
  gte: DateTime
  not: NestedDateTimeWithAggregatesFilter
  _count: NestedIntFilter
  _min: NestedDateTimeFilter
  _max: NestedDateTimeFilter
}

input ProductCountAggregateInput {
  id: Boolean
  name: Boolean
  description: Boolean
  barcode: Boolean
  createdAt: Boolean
  updatedAt: Boolean
  _all: Boolean
}

input ProductMinAggregateInput {
  id: Boolean
  name: Boolean
  description: Boolean
  barcode: Boolean
  createdAt: Boolean
  updatedAt: Boolean
}

input ProductMaxAggregateInput {
  id: Boolean
  name: Boolean
  description: Boolean
  barcode: Boolean
  createdAt: Boolean
  updatedAt: Boolean
}

input ProductVariantOrderByWithRelationInput {
  id: SortOrder
  productId: SortOrderInput
  name: SortOrderInput
  size: SortOrder
  concentration: SortOrder
  packaging: SortOrder
  barcode: SortOrderInput
  price: SortOrder
  resellerPrice: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
  product: ProductOrderByWithRelationInput
  stockItems: StockOrderByRelationAggregateInput
  receiptItems: StockReceiptBatchItemOrderByRelationAggregateInput
  quotationItems: QuotationItemOrderByRelationAggregateInput
  resellerItems: ResellerSaleItemOrderByRelationAggregateInput
  consumerItems: ConsumerSaleItemOrderByRelationAggregateInput
  returnItems: SalesReturnItemOrderByRelationAggregateInput
  purchaseReturnItems: PurchaseReturnItemOrderByRelationAggregateInput
  transferItems: StockTransferItemOrderByRelationAggregateInput
  stats: ProductSalesStatsOrderByWithRelationInput
  PurchaseOrderItem: PurchaseOrderItemOrderByRelationAggregateInput
  StockMovementItem: StockMovementItemOrderByRelationAggregateInput
  PurchaseRequisitionItem: PurchaseRequisitionItemOrderByRelationAggregateInput
  SupplierCatalog: SupplierCatalogOrderByRelationAggregateInput
  SupplierQuoteItem: SupplierQuoteItemOrderByRelationAggregateInput
  ProductVariantTierPrice: ProductVariantTierPriceOrderByRelationAggregateInput
  facets: VariantFacetValueOrderByRelationAggregateInput
}

input StockOrderByRelationAggregateInput {
  _count: SortOrder
}

input StockReceiptBatchItemOrderByRelationAggregateInput {
  _count: SortOrder
}

input QuotationItemOrderByRelationAggregateInput {
  _count: SortOrder
}

input ResellerSaleItemOrderByRelationAggregateInput {
  _count: SortOrder
}

input ConsumerSaleItemOrderByRelationAggregateInput {
  _count: SortOrder
}

input SalesReturnItemOrderByRelationAggregateInput {
  _count: SortOrder
}

input PurchaseReturnItemOrderByRelationAggregateInput {
  _count: SortOrder
}

input StockTransferItemOrderByRelationAggregateInput {
  _count: SortOrder
}

input ProductSalesStatsOrderByWithRelationInput {
  id: SortOrder
  productVariantId: SortOrder
  totalSold: SortOrder
  totalReturned: SortOrder
  lastSoldAt: SortOrderInput
  monthlySales: SortOrder
  productVariant: ProductVariantOrderByWithRelationInput
}

input PurchaseOrderItemOrderByRelationAggregateInput {
  _count: SortOrder
}

input StockMovementItemOrderByRelationAggregateInput {
  _count: SortOrder
}

input PurchaseRequisitionItemOrderByRelationAggregateInput {
  _count: SortOrder
}

input SupplierCatalogOrderByRelationAggregateInput {
  _count: SortOrder
}

input SupplierQuoteItemOrderByRelationAggregateInput {
  _count: SortOrder
}

input ProductVariantTierPriceOrderByRelationAggregateInput {
  _count: SortOrder
}

input VariantFacetValueOrderByRelationAggregateInput {
  _count: SortOrder
}

input ProductVariantWhereUniqueInput {
  id: String
  barcode: String
  AND: [ProductVariantWhereInput!]
  OR: [ProductVariantWhereInput!]
  NOT: [ProductVariantWhereInput!]
  productId: StringNullableFilter
  name: StringNullableFilter
  size: StringFilter
  concentration: StringFilter
  packaging: StringFilter
  price: FloatFilter
  resellerPrice: FloatFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
  product: ProductNullableScalarRelationFilter
  stockItems: StockListRelationFilter
  receiptItems: StockReceiptBatchItemListRelationFilter
  quotationItems: QuotationItemListRelationFilter
  resellerItems: ResellerSaleItemListRelationFilter
  consumerItems: ConsumerSaleItemListRelationFilter
  returnItems: SalesReturnItemListRelationFilter
  purchaseReturnItems: PurchaseReturnItemListRelationFilter
  transferItems: StockTransferItemListRelationFilter
  stats: ProductSalesStatsNullableScalarRelationFilter
  PurchaseOrderItem: PurchaseOrderItemListRelationFilter
  StockMovementItem: StockMovementItemListRelationFilter
  PurchaseRequisitionItem: PurchaseRequisitionItemListRelationFilter
  SupplierCatalog: SupplierCatalogListRelationFilter
  SupplierQuoteItem: SupplierQuoteItemListRelationFilter
  ProductVariantTierPrice: ProductVariantTierPriceListRelationFilter
  facets: VariantFacetValueListRelationFilter
}

enum ProductVariantScalarFieldEnum {
  id
  productId
  name
  size
  concentration
  packaging
  barcode
  price
  resellerPrice
  createdAt
  updatedAt
}

input ProductVariantOrderByWithAggregationInput {
  id: SortOrder
  productId: SortOrderInput
  name: SortOrderInput
  size: SortOrder
  concentration: SortOrder
  packaging: SortOrder
  barcode: SortOrderInput
  price: SortOrder
  resellerPrice: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
  _count: ProductVariantCountOrderByAggregateInput
  _avg: ProductVariantAvgOrderByAggregateInput
  _max: ProductVariantMaxOrderByAggregateInput
  _min: ProductVariantMinOrderByAggregateInput
  _sum: ProductVariantSumOrderByAggregateInput
}

input ProductVariantCountOrderByAggregateInput {
  id: SortOrder
  productId: SortOrder
  name: SortOrder
  size: SortOrder
  concentration: SortOrder
  packaging: SortOrder
  barcode: SortOrder
  price: SortOrder
  resellerPrice: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
}

input ProductVariantAvgOrderByAggregateInput {
  price: SortOrder
  resellerPrice: SortOrder
}

input ProductVariantMaxOrderByAggregateInput {
  id: SortOrder
  productId: SortOrder
  name: SortOrder
  size: SortOrder
  concentration: SortOrder
  packaging: SortOrder
  barcode: SortOrder
  price: SortOrder
  resellerPrice: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
}

input ProductVariantMinOrderByAggregateInput {
  id: SortOrder
  productId: SortOrder
  name: SortOrder
  size: SortOrder
  concentration: SortOrder
  packaging: SortOrder
  barcode: SortOrder
  price: SortOrder
  resellerPrice: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
}

input ProductVariantSumOrderByAggregateInput {
  price: SortOrder
  resellerPrice: SortOrder
}

input ProductVariantScalarWhereWithAggregatesInput {
  AND: [ProductVariantScalarWhereWithAggregatesInput!]
  OR: [ProductVariantScalarWhereWithAggregatesInput!]
  NOT: [ProductVariantScalarWhereWithAggregatesInput!]
  id: StringWithAggregatesFilter
  productId: StringNullableWithAggregatesFilter
  name: StringNullableWithAggregatesFilter
  size: StringWithAggregatesFilter
  concentration: StringWithAggregatesFilter
  packaging: StringWithAggregatesFilter
  barcode: StringNullableWithAggregatesFilter
  price: FloatWithAggregatesFilter
  resellerPrice: FloatWithAggregatesFilter
  createdAt: DateTimeWithAggregatesFilter
  updatedAt: DateTimeWithAggregatesFilter
}

input FloatWithAggregatesFilter {
  equals: Float
  in: [Float!]
  notIn: [Float!]
  lt: Float
  lte: Float
  gt: Float
  gte: Float
  not: NestedFloatWithAggregatesFilter
  _count: NestedIntFilter
  _avg: NestedFloatFilter
  _sum: NestedFloatFilter
  _min: NestedFloatFilter
  _max: NestedFloatFilter
}

input NestedFloatWithAggregatesFilter {
  equals: Float
  in: [Float!]
  notIn: [Float!]
  lt: Float
  lte: Float
  gt: Float
  gte: Float
  not: NestedFloatWithAggregatesFilter
  _count: NestedIntFilter
  _avg: NestedFloatFilter
  _sum: NestedFloatFilter
  _min: NestedFloatFilter
  _max: NestedFloatFilter
}

input ProductVariantCountAggregateInput {
  id: Boolean
  productId: Boolean
  name: Boolean
  size: Boolean
  concentration: Boolean
  packaging: Boolean
  barcode: Boolean
  price: Boolean
  resellerPrice: Boolean
  createdAt: Boolean
  updatedAt: Boolean
  _all: Boolean
}

input ProductVariantAvgAggregateInput {
  price: Boolean
  resellerPrice: Boolean
}

input ProductVariantSumAggregateInput {
  price: Boolean
  resellerPrice: Boolean
}

input ProductVariantMinAggregateInput {
  id: Boolean
  productId: Boolean
  name: Boolean
  size: Boolean
  concentration: Boolean
  packaging: Boolean
  barcode: Boolean
  price: Boolean
  resellerPrice: Boolean
  createdAt: Boolean
  updatedAt: Boolean
}

input ProductVariantMaxAggregateInput {
  id: Boolean
  productId: Boolean
  name: Boolean
  size: Boolean
  concentration: Boolean
  packaging: Boolean
  barcode: Boolean
  price: Boolean
  resellerPrice: Boolean
  createdAt: Boolean
  updatedAt: Boolean
}

input QueryStockInput {
  storeId: ID
  productVariantId: ID
}

input StoreOrderByWithRelationInput {
  id: SortOrder
  name: SortOrder
  location: SortOrderInput
  isMain: SortOrder
  managerId: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
  manager: UserOrderByWithRelationInput
  stocks: StockOrderByRelationAggregateInput
  receipts: StockReceiptBatchOrderByRelationAggregateInput
  transfersOut: StockTransferOrderByRelationAggregateInput
  transfersIn: StockTransferOrderByRelationAggregateInput
  customerSales: ConsumerSaleOrderByRelationAggregateInput
  salesReturns: SalesReturnOrderByRelationAggregateInput
  resellerSales: ResellerSaleOrderByRelationAggregateInput
  movements: StockMovementOrderByRelationAggregateInput
  Customer: CustomerOrderByRelationAggregateInput
  CustomerProfile: CustomerProfileOrderByRelationAggregateInput
  Quotation: QuotationOrderByRelationAggregateInput
  PurchaseRequisition: PurchaseRequisitionOrderByRelationAggregateInput
  purchaseOrders: PurchaseOrderOrderByRelationAggregateInput
  InvoiceImport: InvoiceImportOrderByRelationAggregateInput
}

input UserOrderByWithRelationInput {
  id: SortOrder
  email: SortOrder
  passwordHash: SortOrder
  roleId: SortOrder
  tier: SortOrderInput
  referralCode: SortOrderInput
  referredBy: SortOrderInput
  createdAt: SortOrder
  updatedAt: SortOrder
  isEmailVerified: SortOrder
  emailVerificationToken: SortOrderInput
  emailVerificationTokenExpiry: SortOrderInput
  role: RoleOrderByWithRelationInput
  resellerProfile: ResellerProfileOrderByWithRelationInput
  customerProfile: CustomerProfileOrderByWithRelationInput
  resellerPaymentsMade: ResellerPaymentOrderByRelationAggregateInput
  resellerPaymentsReceived: ResellerPaymentOrderByRelationAggregateInput
  adminLogs: AdminActionLogOrderByRelationAggregateInput
  supportMessages: SupportMessageOrderByRelationAggregateInput
  ConsumerSale: ConsumerSaleOrderByRelationAggregateInput
  ConsumerSaleAdjustedBys: ConsumerSaleOrderByRelationAggregateInput
  StockReceiptBatchReceivedBys: StockReceiptBatchOrderByRelationAggregateInput
  StockReceiptBatchConfirmedBys: StockReceiptBatchOrderByRelationAggregateInput
  StockTransferRequests: StockTransferOrderByRelationAggregateInput
  StockTransferApprovals: StockTransferOrderByRelationAggregateInput
  Store: StoreOrderByRelationAggregateInput
  ConsumerReceipt: ConsumerReceiptOrderByRelationAggregateInput
  ResellerSales: ResellerSaleOrderByRelationAggregateInput
  BillerResellerSale: ResellerSaleOrderByRelationAggregateInput
  ResellerSale: ResellerSaleOrderByRelationAggregateInput
  SalesReturnReceivers: SalesReturnOrderByRelationAggregateInput
  SalesReturnRequesters: SalesReturnOrderByRelationAggregateInput
  SalesReturn: SalesReturnOrderByRelationAggregateInput
  PurchaseReturnInitiators: PurchaseReturnOrderByRelationAggregateInput
  PurchaseReturnApprovers: PurchaseReturnOrderByRelationAggregateInput
  Payment: PaymentOrderByRelationAggregateInput
  ResellerTierHistory: ResellerTierHistoryOrderByRelationAggregateInput
  ResellerTierHistoryChangedBys: ResellerTierHistoryOrderByRelationAggregateInput
  ResellerProfile: ResellerProfileOrderByRelationAggregateInput
  RequestedResellers: ResellerProfileOrderByRelationAggregateInput
  Notification: NotificationOrderByRelationAggregateInput
  Fulfillment: FulfillmentOrderByRelationAggregateInput
  BillerQuotation: QuotationOrderByRelationAggregateInput
  ResellerQuotation: QuotationOrderByRelationAggregateInput
  PurchaseRequisition: PurchaseRequisitionOrderByRelationAggregateInput
  Supplier: SupplierOrderByRelationAggregateInput
}

input RoleOrderByWithRelationInput {
  id: SortOrder
  name: SortOrder
  description: SortOrderInput
  createdBy: SortOrderInput
  createdAt: SortOrder
  permissions: PermissionOrderByRelationAggregateInput
  users: UserOrderByRelationAggregateInput
}

input PermissionOrderByRelationAggregateInput {
  _count: SortOrder
}

input UserOrderByRelationAggregateInput {
  _count: SortOrder
}

input ResellerProfileOrderByWithRelationInput {
  userId: SortOrder
  billerId: SortOrderInput
  requestedBillerId: SortOrderInput
  tier: SortOrder
  creditLimit: SortOrder
  outstandingBalance: SortOrder
  isActive: SortOrder
  profileStatus: SortOrder
  requestedAt: SortOrder
  activatedAt: SortOrderInput
  rejectedAt: SortOrderInput
  rejectionReason: SortOrderInput
  user: UserOrderByWithRelationInput
  biller: UserOrderByWithRelationInput
  requestedBiller: UserOrderByWithRelationInput
}

input CustomerProfileOrderByWithRelationInput {
  userId: SortOrder
  fullName: SortOrder
  phone: SortOrderInput
  email: SortOrderInput
  gender: SortOrderInput
  birthday: SortOrderInput
  referredById: SortOrderInput
  preferredStoreId: SortOrderInput
  preferencesid: SortOrderInput
  profileStatus: SortOrder
  requestedAt: SortOrder
  activatedAt: SortOrderInput
  isPhoneVerified: SortOrder
  phoneVerificationCode: SortOrderInput
  phoneVerificationCodeExpiry: SortOrderInput
  user: UserOrderByWithRelationInput
  preferredStore: StoreOrderByWithRelationInput
  referredBy: CustomerProfileOrderByWithRelationInput
  referrals: CustomerProfileOrderByRelationAggregateInput
  sales: ConsumerSaleOrderByRelationAggregateInput
  preferences: CustomerPreferenceProfileOrderByWithRelationInput
}

input CustomerProfileOrderByRelationAggregateInput {
  _count: SortOrder
}

input ConsumerSaleOrderByRelationAggregateInput {
  _count: SortOrder
}

input CustomerPreferenceProfileOrderByWithRelationInput {
  id: SortOrder
  customerId: SortOrder
  frequentlyBoughtVariants: SortOrder
  lastPurchaseDate: SortOrderInput
  eligibleForDiscounts: SortOrder
  customer: CustomerOrderByWithRelationInput
  CustomerProfile: CustomerProfileOrderByRelationAggregateInput
}

input CustomerOrderByWithRelationInput {
  id: SortOrder
  fullName: SortOrder
  phone: SortOrderInput
  email: SortOrderInput
  preferredStoreId: SortOrderInput
  preferredStore: StoreOrderByWithRelationInput
  sales: ConsumerSaleOrderByRelationAggregateInput
  CustomerPreferenceProfile: CustomerPreferenceProfileOrderByRelationAggregateInput
  Quotation: QuotationOrderByRelationAggregateInput
}

input CustomerPreferenceProfileOrderByRelationAggregateInput {
  _count: SortOrder
}

input QuotationOrderByRelationAggregateInput {
  _count: SortOrder
}

input ResellerPaymentOrderByRelationAggregateInput {
  _count: SortOrder
}

input AdminActionLogOrderByRelationAggregateInput {
  _count: SortOrder
}

input SupportMessageOrderByRelationAggregateInput {
  _count: SortOrder
}

input StockReceiptBatchOrderByRelationAggregateInput {
  _count: SortOrder
}

input StockTransferOrderByRelationAggregateInput {
  _count: SortOrder
}

input StoreOrderByRelationAggregateInput {
  _count: SortOrder
}

input ConsumerReceiptOrderByRelationAggregateInput {
  _count: SortOrder
}

input ResellerSaleOrderByRelationAggregateInput {
  _count: SortOrder
}

input SalesReturnOrderByRelationAggregateInput {
  _count: SortOrder
}

input PurchaseReturnOrderByRelationAggregateInput {
  _count: SortOrder
}

input PaymentOrderByRelationAggregateInput {
  _count: SortOrder
}

input ResellerTierHistoryOrderByRelationAggregateInput {
  _count: SortOrder
}

input ResellerProfileOrderByRelationAggregateInput {
  _count: SortOrder
}

input NotificationOrderByRelationAggregateInput {
  _count: SortOrder
}

input FulfillmentOrderByRelationAggregateInput {
  _count: SortOrder
}

input PurchaseRequisitionOrderByRelationAggregateInput {
  _count: SortOrder
}

input SupplierOrderByRelationAggregateInput {
  _count: SortOrder
}

input StockMovementOrderByRelationAggregateInput {
  _count: SortOrder
}

input CustomerOrderByRelationAggregateInput {
  _count: SortOrder
}

input PurchaseOrderOrderByRelationAggregateInput {
  _count: SortOrder
}

input InvoiceImportOrderByRelationAggregateInput {
  _count: SortOrder
}

input StoreWhereUniqueInput {
  id: String
  AND: [StoreWhereInput!]
  OR: [StoreWhereInput!]
  NOT: [StoreWhereInput!]
  name: StringFilter
  location: StringNullableFilter
  isMain: BoolFilter
  managerId: StringFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
  manager: UserScalarRelationFilter
  stocks: StockListRelationFilter
  receipts: StockReceiptBatchListRelationFilter
  transfersOut: StockTransferListRelationFilter
  transfersIn: StockTransferListRelationFilter
  customerSales: ConsumerSaleListRelationFilter
  salesReturns: SalesReturnListRelationFilter
  resellerSales: ResellerSaleListRelationFilter
  movements: StockMovementListRelationFilter
  Customer: CustomerListRelationFilter
  CustomerProfile: CustomerProfileListRelationFilter
  Quotation: QuotationListRelationFilter
  PurchaseRequisition: PurchaseRequisitionListRelationFilter
  purchaseOrders: PurchaseOrderListRelationFilter
  InvoiceImport: InvoiceImportListRelationFilter
}

enum StoreScalarFieldEnum {
  id
  name
  location
  isMain
  managerId
  createdAt
  updatedAt
}

input StoreOrderByWithAggregationInput {
  id: SortOrder
  name: SortOrder
  location: SortOrderInput
  isMain: SortOrder
  managerId: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
  _count: StoreCountOrderByAggregateInput
  _max: StoreMaxOrderByAggregateInput
  _min: StoreMinOrderByAggregateInput
}

input StoreCountOrderByAggregateInput {
  id: SortOrder
  name: SortOrder
  location: SortOrder
  isMain: SortOrder
  managerId: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
}

input StoreMaxOrderByAggregateInput {
  id: SortOrder
  name: SortOrder
  location: SortOrder
  isMain: SortOrder
  managerId: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
}

input StoreMinOrderByAggregateInput {
  id: SortOrder
  name: SortOrder
  location: SortOrder
  isMain: SortOrder
  managerId: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
}

input StoreScalarWhereWithAggregatesInput {
  AND: [StoreScalarWhereWithAggregatesInput!]
  OR: [StoreScalarWhereWithAggregatesInput!]
  NOT: [StoreScalarWhereWithAggregatesInput!]
  id: StringWithAggregatesFilter
  name: StringWithAggregatesFilter
  location: StringNullableWithAggregatesFilter
  isMain: BoolWithAggregatesFilter
  managerId: StringWithAggregatesFilter
  createdAt: DateTimeWithAggregatesFilter
  updatedAt: DateTimeWithAggregatesFilter
}

input BoolWithAggregatesFilter {
  equals: Boolean
  not: NestedBoolWithAggregatesFilter
  _count: NestedIntFilter
  _min: NestedBoolFilter
  _max: NestedBoolFilter
}

input NestedBoolWithAggregatesFilter {
  equals: Boolean
  not: NestedBoolWithAggregatesFilter
  _count: NestedIntFilter
  _min: NestedBoolFilter
  _max: NestedBoolFilter
}

input StoreCountAggregateInput {
  id: Boolean
  name: Boolean
  location: Boolean
  isMain: Boolean
  managerId: Boolean
  createdAt: Boolean
  updatedAt: Boolean
  _all: Boolean
}

input StoreMinAggregateInput {
  id: Boolean
  name: Boolean
  location: Boolean
  isMain: Boolean
  managerId: Boolean
  createdAt: Boolean
  updatedAt: Boolean
}

input StoreMaxAggregateInput {
  id: Boolean
  name: Boolean
  location: Boolean
  isMain: Boolean
  managerId: Boolean
  createdAt: Boolean
  updatedAt: Boolean
}

input UserWhereUniqueInput {
  id: String
  email: String
  referralCode: String
  emailVerificationToken: String
  AND: [UserWhereInput!]
  OR: [UserWhereInput!]
  NOT: [UserWhereInput!]
  passwordHash: StringFilter
  roleId: StringFilter
  tier: EnumUserTierNullableFilter
  referredBy: StringNullableFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
  isEmailVerified: BoolFilter
  emailVerificationTokenExpiry: DateTimeNullableFilter
  role: RoleScalarRelationFilter
  resellerProfile: ResellerProfileNullableScalarRelationFilter
  customerProfile: CustomerProfileNullableScalarRelationFilter
  resellerPaymentsMade: ResellerPaymentListRelationFilter
  resellerPaymentsReceived: ResellerPaymentListRelationFilter
  adminLogs: AdminActionLogListRelationFilter
  supportMessages: SupportMessageListRelationFilter
  ConsumerSale: ConsumerSaleListRelationFilter
  ConsumerSaleAdjustedBys: ConsumerSaleListRelationFilter
  StockReceiptBatchReceivedBys: StockReceiptBatchListRelationFilter
  StockReceiptBatchConfirmedBys: StockReceiptBatchListRelationFilter
  StockTransferRequests: StockTransferListRelationFilter
  StockTransferApprovals: StockTransferListRelationFilter
  Store: StoreListRelationFilter
  ConsumerReceipt: ConsumerReceiptListRelationFilter
  ResellerSales: ResellerSaleListRelationFilter
  BillerResellerSale: ResellerSaleListRelationFilter
  ResellerSale: ResellerSaleListRelationFilter
  SalesReturnReceivers: SalesReturnListRelationFilter
  SalesReturnRequesters: SalesReturnListRelationFilter
  SalesReturn: SalesReturnListRelationFilter
  PurchaseReturnInitiators: PurchaseReturnListRelationFilter
  PurchaseReturnApprovers: PurchaseReturnListRelationFilter
  Payment: PaymentListRelationFilter
  ResellerTierHistory: ResellerTierHistoryListRelationFilter
  ResellerTierHistoryChangedBys: ResellerTierHistoryListRelationFilter
  ResellerProfile: ResellerProfileListRelationFilter
  RequestedResellers: ResellerProfileListRelationFilter
  Notification: NotificationListRelationFilter
  Fulfillment: FulfillmentListRelationFilter
  BillerQuotation: QuotationListRelationFilter
  ResellerQuotation: QuotationListRelationFilter
  PurchaseRequisition: PurchaseRequisitionListRelationFilter
  Supplier: SupplierListRelationFilter
}

enum UserScalarFieldEnum {
  id
  email
  passwordHash
  roleId
  tier
  referralCode
  referredBy
  createdAt
  updatedAt
  isEmailVerified
  emailVerificationToken
  emailVerificationTokenExpiry
}

input UserOrderByWithAggregationInput {
  id: SortOrder
  email: SortOrder
  passwordHash: SortOrder
  roleId: SortOrder
  tier: SortOrderInput
  referralCode: SortOrderInput
  referredBy: SortOrderInput
  createdAt: SortOrder
  updatedAt: SortOrder
  isEmailVerified: SortOrder
  emailVerificationToken: SortOrderInput
  emailVerificationTokenExpiry: SortOrderInput
  _count: UserCountOrderByAggregateInput
  _max: UserMaxOrderByAggregateInput
  _min: UserMinOrderByAggregateInput
}

input UserCountOrderByAggregateInput {
  id: SortOrder
  email: SortOrder
  passwordHash: SortOrder
  roleId: SortOrder
  tier: SortOrder
  referralCode: SortOrder
  referredBy: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
  isEmailVerified: SortOrder
  emailVerificationToken: SortOrder
  emailVerificationTokenExpiry: SortOrder
}

input UserMaxOrderByAggregateInput {
  id: SortOrder
  email: SortOrder
  passwordHash: SortOrder
  roleId: SortOrder
  tier: SortOrder
  referralCode: SortOrder
  referredBy: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
  isEmailVerified: SortOrder
  emailVerificationToken: SortOrder
  emailVerificationTokenExpiry: SortOrder
}

input UserMinOrderByAggregateInput {
  id: SortOrder
  email: SortOrder
  passwordHash: SortOrder
  roleId: SortOrder
  tier: SortOrder
  referralCode: SortOrder
  referredBy: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
  isEmailVerified: SortOrder
  emailVerificationToken: SortOrder
  emailVerificationTokenExpiry: SortOrder
}

input UserScalarWhereWithAggregatesInput {
  AND: [UserScalarWhereWithAggregatesInput!]
  OR: [UserScalarWhereWithAggregatesInput!]
  NOT: [UserScalarWhereWithAggregatesInput!]
  id: StringWithAggregatesFilter
  email: StringWithAggregatesFilter
  passwordHash: StringWithAggregatesFilter
  roleId: StringWithAggregatesFilter
  tier: EnumUserTierNullableWithAggregatesFilter
  referralCode: StringNullableWithAggregatesFilter
  referredBy: StringNullableWithAggregatesFilter
  createdAt: DateTimeWithAggregatesFilter
  updatedAt: DateTimeWithAggregatesFilter
  isEmailVerified: BoolWithAggregatesFilter
  emailVerificationToken: StringNullableWithAggregatesFilter
  emailVerificationTokenExpiry: DateTimeNullableWithAggregatesFilter
}

input EnumUserTierNullableWithAggregatesFilter {
  equals: UserTier
  in: [UserTier!]
  notIn: [UserTier!]
  not: NestedEnumUserTierNullableWithAggregatesFilter
  _count: NestedIntNullableFilter
  _min: NestedEnumUserTierNullableFilter
  _max: NestedEnumUserTierNullableFilter
}

input NestedEnumUserTierNullableWithAggregatesFilter {
  equals: UserTier
  in: [UserTier!]
  notIn: [UserTier!]
  not: NestedEnumUserTierNullableWithAggregatesFilter
  _count: NestedIntNullableFilter
  _min: NestedEnumUserTierNullableFilter
  _max: NestedEnumUserTierNullableFilter
}

input DateTimeNullableWithAggregatesFilter {
  equals: DateTime
  in: [DateTime!]
  notIn: [DateTime!]
  lt: DateTime
  lte: DateTime
  gt: DateTime
  gte: DateTime
  not: NestedDateTimeNullableWithAggregatesFilter
  _count: NestedIntNullableFilter
  _min: NestedDateTimeNullableFilter
  _max: NestedDateTimeNullableFilter
}

input NestedDateTimeNullableWithAggregatesFilter {
  equals: DateTime
  in: [DateTime!]
  notIn: [DateTime!]
  lt: DateTime
  lte: DateTime
  gt: DateTime
  gte: DateTime
  not: NestedDateTimeNullableWithAggregatesFilter
  _count: NestedIntNullableFilter
  _min: NestedDateTimeNullableFilter
  _max: NestedDateTimeNullableFilter
}

input UserCountAggregateInput {
  id: Boolean
  email: Boolean
  passwordHash: Boolean
  roleId: Boolean
  tier: Boolean
  referralCode: Boolean
  referredBy: Boolean
  createdAt: Boolean
  updatedAt: Boolean
  isEmailVerified: Boolean
  emailVerificationToken: Boolean
  emailVerificationTokenExpiry: Boolean
  _all: Boolean
}

input UserMinAggregateInput {
  id: Boolean
  email: Boolean
  passwordHash: Boolean
  roleId: Boolean
  tier: Boolean
  referralCode: Boolean
  referredBy: Boolean
  createdAt: Boolean
  updatedAt: Boolean
  isEmailVerified: Boolean
  emailVerificationToken: Boolean
  emailVerificationTokenExpiry: Boolean
}

input UserMaxAggregateInput {
  id: Boolean
  email: Boolean
  passwordHash: Boolean
  roleId: Boolean
  tier: Boolean
  referralCode: Boolean
  referredBy: Boolean
  createdAt: Boolean
  updatedAt: Boolean
  isEmailVerified: Boolean
  emailVerificationToken: Boolean
  emailVerificationTokenExpiry: Boolean
}

input DevPurgeFilter {
  beforeDate: String
  status: String
  storeId: String
  supplierId: String
  dryRun: Boolean
  orphanOnly: Boolean
}

type Mutation {
  login(input: LoginInput!): AuthResponse!
  changePassword(input: ChangePasswordInput!): Boolean!
  createProduct(data: ProductCreateInput!): Product
  createManyProduct(data: [ProductCreateManyInput!]!, skipDuplicates: Boolean): AffectedRows
  updateProduct(data: ProductUpdateInput!, where: ProductWhereUniqueInput!): Product
  updateManyProduct(data: ProductUpdateManyMutationInput!, where: ProductWhereInput, limit: Int): AffectedRows
  deleteProduct(where: ProductWhereUniqueInput!): Product
  deleteManyProduct(where: ProductWhereInput, limit: Int): AffectedRows
  createProductVariant(data: ProductVariantCreateInput!): ProductVariant
  createManyProductVariant(data: [ProductVariantCreateManyInput!]!, skipDuplicates: Boolean): AffectedRows
  updateProductVariant(data: ProductVariantUpdateInput!, where: ProductVariantWhereUniqueInput!): ProductVariant
  updateManyProductVariant(data: ProductVariantUpdateManyMutationInput!, where: ProductVariantWhereInput, limit: Int): AffectedRows
  deleteProductVariant(where: ProductVariantWhereUniqueInput!): ProductVariant
  deleteManyProductVariant(where: ProductVariantWhereInput, limit: Int): AffectedRows
  upsertVariantSupplierCatalog(input: UpsertVariantSupplierCatalogInput!): SupplierCatalogEntry!
  upsertVariantTierPrice(input: UpsertVariantTierPriceInput!): String!
  createLooseProductVariant(input: LooseProductVariantInput!): ProductVariant!
  linkVariantToProduct(input: LinkVariantToProductInput!): ProductVariant!
  unlinkVariantFromProduct(input: UnlinkVariantFromProductInput!): ProductVariant!

  """Attach a variant to a product by setting productId"""
  attachVariantToProduct(variantId: String!, productId: String!): Boolean!
  createFacet(input: CreateFacetInput!): FacetGQL!
  updateFacet(input: UpdateFacetInput!): FacetGQL!
  deleteFacet(id: String!): String!
  assignFacetToProduct(productId: String!, facetId: String!, value: String!): String!
  removeFacetFromProduct(productId: String!, facetId: String!, value: String!): String!
  assignFacetToVariant(productVariantId: String!, facetId: String!, value: String!): String!
  removeFacetFromVariant(productVariantId: String!, facetId: String!, value: String!): String!
  markAsRead(id: String!): Notification!
  processOutbox(limit: Int, type: String, status: String): Int!
  retryOutboxFailed(limit: Int, type: String): Int!
  signupCustomer(input: CreateUserInput!): AuthResponse!
  completeCustomerProfile(input: UpdateCustomerProfileInput!): CustomerProfile!
  applyReseller(input: ApplyResellerInput!): ResellerProfile!
  approveReseller(resellerId: String!, input: ApproveResellerInput!): ResellerProfile!
  activateReseller(resellerId: String!, billerId: String): ResellerProfile!
  rejectReseller(resellerId: String!, reason: String): ResellerProfile!
  adminUpdateCustomerProfile(userId: String!, input: AdminUpdateCustomerProfileInput!): CustomerProfile!
  adminCreateCustomer(input: AdminCreateCustomerInput!): User!
  createSupplier(input: CreateSupplierInput!): Supplier!
  updateSupplier(input: UpdateSupplierInput!): Supplier!
  createPurchaseOrder(input: CreatePurchaseOrderInput!): PurchaseOrder!
  updatePurchaseOrderStatus(input: UpdatePurchaseOrderStatusInput!): PurchaseOrder!
  issueRFQPreferred(requisitionId: String!): Boolean!
  upsertSupplierCatalog(input: UpsertSupplierCatalogInput!): SupplierCatalogEntry!
  upsertSupplierCatalogBulk(input: UpsertSupplierCatalogBulkInput!): [String!]!
  selectSupplierQuote(input: SelectSupplierQuoteInput!): Boolean!
  rejectSupplierQuote(input: RejectSupplierQuoteInput!): Boolean!
  closeRFQ(input: CloseRfqInput!): Boolean!
  runLowStockScanNow: Boolean!
  linkSupplierUser(input: LinkSupplierUserInput!): Supplier!
  createSupplierPayment(input: CreateSupplierPaymentInput!): SupplierPayment!
  createPurchaseRequisition(input: CreatePurchaseRequisitionInput!): String!
  submitPurchaseRequisition(input: IdInput!): Boolean!
  approvePurchaseRequisition(input: IdInput!): Boolean!
  rejectPurchaseRequisition(input: RejectRequisitionInput!): Boolean!
  issueRFQ(input: IssueRfqInput!): Boolean!
  submitSupplierQuote(input: SubmitSupplierQuoteInput!): String!
  createPOsFromSelection(input: CreatePOsFromSelectionInput!): [String!]!
  updatePurchaseOrderPhase(input: UpdatePurchaseOrderPhaseInput!): PurchaseOrder!
  markPurchaseOrderReceived(input: MarkPurchaseOrderReceivedInput!): PurchaseOrder!
  createRequisitionFromLowStock(input: CreateRequisitionFromLowStockInput!): String
  createLowStockRequisitionAndIssuePreferred(input: CreateRequisitionFromLowStockInput!): String
  adminProcessInvoiceUrl(input: ProcessInvoiceUrlInput!): ProcessInvoiceResult!
  adminCreateInvoiceImport(input: CreateInvoiceImportInput!): InvoiceImport!
  adminReprocessInvoiceImport(id: String!): InvoiceImport!
  adminUpdateInvoiceImport(input: UpdateInvoiceImportInput!): InvoiceImport!
  adminApproveInvoiceImport(input: ApproveInvoiceImportInput!): ApproveInvoiceResult!
  receiveStockBatch(input: ReceiveStockBatchInput!): StockReceiptBatch!
  transferStock(input: TransferStockInput!): StockTransfer!
  setReorderSettings(input: SetReorderSettingsInput!): Stock!
  createStaff(input: CreateStaffInput!): User!
  assignStoreManager(storeId: String!, managerId: String!): Boolean!
  assignBiller(input: AssignBillerInput!): ResellerProfile!
  createQuotationDraft(input: CreateQuotationDraftInput!): Quotation!
  updateQuotationStatus(input: UpdateQuotationStatusInput!): Quotation!
  checkoutConsumerQuotation(input: CheckoutConsumerQuotationInput!): ConsumerSale!
  confirmResellerQuotation(input: ConfirmResellerQuotationInput!): ResellerSale!
  billerConvertConfirmedQuotation(input: BillerConvertQuotationInput!): Quotation!
  createConsumerSale(input: CreateConsumerSaleInput!): ConsumerSale!
  registerConsumerPayment(input: CreateConsumerPaymentInput!): ConsumerPayment!
  confirmConsumerPayment(input: ConfirmConsumerPaymentInput!): ConsumerPayment!
  createConsumerReceipt(input: CreateConsumerReceiptInput!): ConsumerReceipt!
  fulfillConsumerSale(input: FulfillConsumerSaleInput!): ConsumerSale!
  createResellerSale(input: CreateResellerSaleInput!): ResellerSale!
  registerResellerPayment(input: CreateResellerPaymentInput!): ResellerPayment!
  confirmResellerPayment(paymentId: String!): ResellerPayment!

  """Assign delivery personnel to a fulfillment and set status to ASSIGNED"""
  createFulfillment(input: CreateFulfillmentInput!): Fulfillment!

  """
  Update fulfillment status (ASSIGNED, IN_TRANSIT, DELIVERED, CANCELLED). If DELIVERED and a PIN is set, confirmationPin is required.
  """
  assignFulfillmentPersonnel(input: AssignFulfillmentPersonnelInput!): Fulfillment!
  updateFulfillmentStatus(input: UpdateFulfillmentStatusInput!): Fulfillment!
  adminRevertOrderToQuotation(saleOrderId: String!): SaleOrder!
  adminRevertToQuotation(saleOrderId: String!): SaleOrder!
  createSalesReturn(input: CreateSalesReturnInput!): String!
  updateSalesReturnStatus(input: UpdateSalesReturnStatusInput!): Boolean!
  createSalesReturnForOrder(input: CreateOrderReturnInput!): String!
  createPurchaseReturn(input: CreatePurchaseReturnInput!): String!
  fulfillPurchaseReturn(input: FulfillPurchaseReturnInput!): Boolean!
  sendSupportMessage(input: SendSupportMessageInput!): SupportMessage!
  adminSendSupportMessage(input: AdminSendSupportMessageInput!): SupportMessage!
  createStore(data: StoreCreateInput!): Store
  createManyStore(data: [StoreCreateManyInput!]!, skipDuplicates: Boolean): AffectedRows
  updateStore(data: StoreUpdateInput!, where: StoreWhereUniqueInput!): Store
  updateManyStore(data: StoreUpdateManyMutationInput!, where: StoreWhereInput, limit: Int): AffectedRows
  deleteStore(where: StoreWhereUniqueInput!): Store
  deleteManyStore(where: StoreWhereInput, limit: Int): AffectedRows
  bulkAssignStoreManager(storeIds: [String!]!, managerId: String!): Float!
  createUser(data: UserCreateInput!): User
  createManyUser(data: [UserCreateManyInput!]!, skipDuplicates: Boolean): AffectedRows
  updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User
  updateManyUser(data: UserUpdateManyMutationInput!, where: UserWhereInput, limit: Int): AffectedRows
  deleteUser(where: UserWhereUniqueInput!): User
  deleteManyUser(where: UserWhereInput, limit: Int): AffectedRows
  sendEmailVerification: Boolean!
  verifyEmail(token: String!): Boolean!
  sendPhoneVerification: Boolean!
  verifyPhone(code: String!): Boolean!
  devPurgeInvoiceImports(filter: DevPurgeFilter): Int!
  devPurgePurchaseOrders(filter: DevPurgeFilter): Int!
  devImportSnapshot(json: String!, preview: Boolean): String!
  devSeedFixtures(kind: String): String!
  devPurgeOrphanVariants: Int!
}

input LoginInput {
  email: String!
  password: String!
}

input ChangePasswordInput {
  currentPassword: String!
  newPassword: String!
}

input ProductCreateInput {
  id: String
  name: String!
  description: String
  barcode: String
  createdAt: DateTime
  updatedAt: DateTime
  variants: ProductVariantCreateNestedManyWithoutProductInput
  facets: ProductFacetValueCreateNestedManyWithoutProductInput
}

input ProductVariantCreateNestedManyWithoutProductInput {
  create: [ProductVariantCreateWithoutProductInput!]
  connectOrCreate: [ProductVariantCreateOrConnectWithoutProductInput!]
  createMany: ProductVariantCreateManyProductInputEnvelope
  connect: [ProductVariantWhereUniqueInput!]
}

input ProductVariantCreateWithoutProductInput {
  id: String
  name: String
  size: String!
  concentration: String!
  packaging: String!
  barcode: String
  price: Float!
  resellerPrice: Float!
  createdAt: DateTime
  updatedAt: DateTime
  stockItems: StockCreateNestedManyWithoutProductVariantInput
  receiptItems: StockReceiptBatchItemCreateNestedManyWithoutProductVariantInput
  quotationItems: QuotationItemCreateNestedManyWithoutProductVariantInput
  resellerItems: ResellerSaleItemCreateNestedManyWithoutProductVariantInput
  consumerItems: ConsumerSaleItemCreateNestedManyWithoutProductVariantInput
  returnItems: SalesReturnItemCreateNestedManyWithoutProductVariantInput
  purchaseReturnItems: PurchaseReturnItemCreateNestedManyWithoutProductVariantInput
  transferItems: StockTransferItemCreateNestedManyWithoutProductVariantInput
  stats: ProductSalesStatsCreateNestedOneWithoutProductVariantInput
  PurchaseOrderItem: PurchaseOrderItemCreateNestedManyWithoutProductVariantInput
  StockMovementItem: StockMovementItemCreateNestedManyWithoutProductVariantInput
  PurchaseRequisitionItem: PurchaseRequisitionItemCreateNestedManyWithoutProductVariantInput
  SupplierCatalog: SupplierCatalogCreateNestedManyWithoutProductVariantInput
  SupplierQuoteItem: SupplierQuoteItemCreateNestedManyWithoutProductVariantInput
  ProductVariantTierPrice: ProductVariantTierPriceCreateNestedManyWithoutVariantInput
  facets: VariantFacetValueCreateNestedManyWithoutVariantInput
}

input StockCreateNestedManyWithoutProductVariantInput {
  create: [StockCreateWithoutProductVariantInput!]
  connectOrCreate: [StockCreateOrConnectWithoutProductVariantInput!]
  createMany: StockCreateManyProductVariantInputEnvelope
  connect: [StockWhereUniqueInput!]
}

input StockCreateWithoutProductVariantInput {
  id: String
  quantity: Int!
  reserved: Int
  reorderPoint: Int
  reorderQty: Int
  createdAt: DateTime
  updatedAt: DateTime
  store: StoreCreateNestedOneWithoutStocksInput!
}

input StoreCreateNestedOneWithoutStocksInput {
  create: StoreCreateWithoutStocksInput
  connectOrCreate: StoreCreateOrConnectWithoutStocksInput
  connect: StoreWhereUniqueInput
}

input StoreCreateWithoutStocksInput {
  id: String
  name: String!
  location: String
  isMain: Boolean
  createdAt: DateTime
  updatedAt: DateTime
  manager: UserCreateNestedOneWithoutStoreInput!
  receipts: StockReceiptBatchCreateNestedManyWithoutStoreInput
  transfersOut: StockTransferCreateNestedManyWithoutFromStoreInput
  transfersIn: StockTransferCreateNestedManyWithoutToStoreInput
  customerSales: ConsumerSaleCreateNestedManyWithoutStoreInput
  salesReturns: SalesReturnCreateNestedManyWithoutStoreInput
  resellerSales: ResellerSaleCreateNestedManyWithoutStoreInput
  movements: StockMovementCreateNestedManyWithoutStoreInput
  Customer: CustomerCreateNestedManyWithoutPreferredStoreInput
  CustomerProfile: CustomerProfileCreateNestedManyWithoutPreferredStoreInput
  Quotation: QuotationCreateNestedManyWithoutStoreInput
  PurchaseRequisition: PurchaseRequisitionCreateNestedManyWithoutStoreInput
  purchaseOrders: PurchaseOrderCreateNestedManyWithoutStoreInput
  InvoiceImport: InvoiceImportCreateNestedManyWithoutStoreInput
}

input UserCreateNestedOneWithoutStoreInput {
  create: UserCreateWithoutStoreInput
  connectOrCreate: UserCreateOrConnectWithoutStoreInput
  connect: UserWhereUniqueInput
}

input UserCreateWithoutStoreInput {
  id: String
  email: String!
  passwordHash: String!
  tier: UserTier
  referralCode: String
  referredBy: String
  createdAt: DateTime
  updatedAt: DateTime
  isEmailVerified: Boolean
  emailVerificationToken: String
  emailVerificationTokenExpiry: DateTime
  role: RoleCreateNestedOneWithoutUsersInput!
  resellerProfile: ResellerProfileCreateNestedOneWithoutUserInput
  customerProfile: CustomerProfileCreateNestedOneWithoutUserInput
  resellerPaymentsMade: ResellerPaymentCreateNestedManyWithoutResellerInput
  resellerPaymentsReceived: ResellerPaymentCreateNestedManyWithoutReceivedByInput
  adminLogs: AdminActionLogCreateNestedManyWithoutAdminInput
  supportMessages: SupportMessageCreateNestedManyWithoutUserInput
  ConsumerSale: ConsumerSaleCreateNestedManyWithoutBillerInput
  ConsumerSaleAdjustedBys: ConsumerSaleCreateNestedManyWithoutAdjustedByInput
  StockReceiptBatchReceivedBys: StockReceiptBatchCreateNestedManyWithoutReceivedByInput
  StockReceiptBatchConfirmedBys: StockReceiptBatchCreateNestedManyWithoutConfirmedByInput
  StockTransferRequests: StockTransferCreateNestedManyWithoutRequestedByInput
  StockTransferApprovals: StockTransferCreateNestedManyWithoutApprovedByInput
  ConsumerReceipt: ConsumerReceiptCreateNestedManyWithoutIssuedByInput
  ResellerSales: ResellerSaleCreateNestedManyWithoutResellerInput
  BillerResellerSale: ResellerSaleCreateNestedManyWithoutBillerInput
  ResellerSale: ResellerSaleCreateNestedManyWithoutApprovedByInput
  SalesReturnReceivers: SalesReturnCreateNestedManyWithoutReceivedByInput
  SalesReturnRequesters: SalesReturnCreateNestedManyWithoutReturnedByInput
  SalesReturn: SalesReturnCreateNestedManyWithoutApprovedByInput
  PurchaseReturnInitiators: PurchaseReturnCreateNestedManyWithoutInitiatedByInput
  PurchaseReturnApprovers: PurchaseReturnCreateNestedManyWithoutApprovedByInput
  Payment: PaymentCreateNestedManyWithoutReceivedByInput
  ResellerTierHistory: ResellerTierHistoryCreateNestedManyWithoutUserInput
  ResellerTierHistoryChangedBys: ResellerTierHistoryCreateNestedManyWithoutAdminInput
  ResellerProfile: ResellerProfileCreateNestedManyWithoutBillerInput
  RequestedResellers: ResellerProfileCreateNestedManyWithoutRequestedBillerInput
  Notification: NotificationCreateNestedManyWithoutUserInput
  Fulfillment: FulfillmentCreateNestedManyWithoutDeliveryPersonnelInput
  BillerQuotation: QuotationCreateNestedManyWithoutBillerInput
  ResellerQuotation: QuotationCreateNestedManyWithoutResellerInput
  PurchaseRequisition: PurchaseRequisitionCreateNestedManyWithoutRequestedByInput
  Supplier: SupplierCreateNestedManyWithoutUserInput
}

input RoleCreateNestedOneWithoutUsersInput {
  create: RoleCreateWithoutUsersInput
  connectOrCreate: RoleCreateOrConnectWithoutUsersInput
  connect: RoleWhereUniqueInput
}

input RoleCreateWithoutUsersInput {
  id: String
  name: String!
  description: String
  createdBy: String
  createdAt: DateTime
  permissions: PermissionCreateNestedManyWithoutRolesInput
}

input PermissionCreateNestedManyWithoutRolesInput {
  create: [PermissionCreateWithoutRolesInput!]
  connectOrCreate: [PermissionCreateOrConnectWithoutRolesInput!]
  connect: [PermissionWhereUniqueInput!]
}

input PermissionCreateWithoutRolesInput {
  id: String
  name: String!
  module: String!
  action: String!
}

input PermissionCreateOrConnectWithoutRolesInput {
  where: PermissionWhereUniqueInput!
  create: PermissionCreateWithoutRolesInput!
}

input PermissionWhereUniqueInput {
  id: String
  name: String
  AND: [PermissionWhereInput!]
  OR: [PermissionWhereInput!]
  NOT: [PermissionWhereInput!]
  module: StringFilter
  action: StringFilter
  roles: RoleListRelationFilter
}

input RoleCreateOrConnectWithoutUsersInput {
  where: RoleWhereUniqueInput!
  create: RoleCreateWithoutUsersInput!
}

input RoleWhereUniqueInput {
  id: String
  name: String
  AND: [RoleWhereInput!]
  OR: [RoleWhereInput!]
  NOT: [RoleWhereInput!]
  description: StringNullableFilter
  createdBy: StringNullableFilter
  createdAt: DateTimeFilter
  permissions: PermissionListRelationFilter
  users: UserListRelationFilter
}

input ResellerProfileCreateNestedOneWithoutUserInput {
  create: ResellerProfileCreateWithoutUserInput
  connectOrCreate: ResellerProfileCreateOrConnectWithoutUserInput
  connect: ResellerProfileWhereUniqueInput
}

input ResellerProfileCreateWithoutUserInput {
  tier: UserTier!
  creditLimit: Float!
  outstandingBalance: Float
  isActive: Boolean
  profileStatus: ProfileStatus
  requestedAt: DateTime
  activatedAt: DateTime
  rejectedAt: DateTime
  rejectionReason: String
  biller: UserCreateNestedOneWithoutResellerProfileInput
  requestedBiller: UserCreateNestedOneWithoutRequestedResellersInput
}

input UserCreateNestedOneWithoutResellerProfileInput {
  create: UserCreateWithoutResellerProfileInput
  connectOrCreate: UserCreateOrConnectWithoutResellerProfileInput
  connect: UserWhereUniqueInput
}

input UserCreateWithoutResellerProfileInput {
  id: String
  email: String!
  passwordHash: String!
  tier: UserTier
  referralCode: String
  referredBy: String
  createdAt: DateTime
  updatedAt: DateTime
  isEmailVerified: Boolean
  emailVerificationToken: String
  emailVerificationTokenExpiry: DateTime
  role: RoleCreateNestedOneWithoutUsersInput!
  resellerProfile: ResellerProfileCreateNestedOneWithoutUserInput
  customerProfile: CustomerProfileCreateNestedOneWithoutUserInput
  resellerPaymentsMade: ResellerPaymentCreateNestedManyWithoutResellerInput
  resellerPaymentsReceived: ResellerPaymentCreateNestedManyWithoutReceivedByInput
  adminLogs: AdminActionLogCreateNestedManyWithoutAdminInput
  supportMessages: SupportMessageCreateNestedManyWithoutUserInput
  ConsumerSale: ConsumerSaleCreateNestedManyWithoutBillerInput
  ConsumerSaleAdjustedBys: ConsumerSaleCreateNestedManyWithoutAdjustedByInput
  StockReceiptBatchReceivedBys: StockReceiptBatchCreateNestedManyWithoutReceivedByInput
  StockReceiptBatchConfirmedBys: StockReceiptBatchCreateNestedManyWithoutConfirmedByInput
  StockTransferRequests: StockTransferCreateNestedManyWithoutRequestedByInput
  StockTransferApprovals: StockTransferCreateNestedManyWithoutApprovedByInput
  Store: StoreCreateNestedManyWithoutManagerInput
  ConsumerReceipt: ConsumerReceiptCreateNestedManyWithoutIssuedByInput
  ResellerSales: ResellerSaleCreateNestedManyWithoutResellerInput
  BillerResellerSale: ResellerSaleCreateNestedManyWithoutBillerInput
  ResellerSale: ResellerSaleCreateNestedManyWithoutApprovedByInput
  SalesReturnReceivers: SalesReturnCreateNestedManyWithoutReceivedByInput
  SalesReturnRequesters: SalesReturnCreateNestedManyWithoutReturnedByInput
  SalesReturn: SalesReturnCreateNestedManyWithoutApprovedByInput
  PurchaseReturnInitiators: PurchaseReturnCreateNestedManyWithoutInitiatedByInput
  PurchaseReturnApprovers: PurchaseReturnCreateNestedManyWithoutApprovedByInput
  Payment: PaymentCreateNestedManyWithoutReceivedByInput
  ResellerTierHistory: ResellerTierHistoryCreateNestedManyWithoutUserInput
  ResellerTierHistoryChangedBys: ResellerTierHistoryCreateNestedManyWithoutAdminInput
  RequestedResellers: ResellerProfileCreateNestedManyWithoutRequestedBillerInput
  Notification: NotificationCreateNestedManyWithoutUserInput
  Fulfillment: FulfillmentCreateNestedManyWithoutDeliveryPersonnelInput
  BillerQuotation: QuotationCreateNestedManyWithoutBillerInput
  ResellerQuotation: QuotationCreateNestedManyWithoutResellerInput
  PurchaseRequisition: PurchaseRequisitionCreateNestedManyWithoutRequestedByInput
  Supplier: SupplierCreateNestedManyWithoutUserInput
}

input CustomerProfileCreateNestedOneWithoutUserInput {
  create: CustomerProfileCreateWithoutUserInput
  connectOrCreate: CustomerProfileCreateOrConnectWithoutUserInput
  connect: CustomerProfileWhereUniqueInput
}

input CustomerProfileCreateWithoutUserInput {
  fullName: String!
  phone: String
  email: String
  gender: String
  birthday: DateTime
  profileStatus: ProfileStatus
  requestedAt: DateTime
  activatedAt: DateTime
  isPhoneVerified: Boolean
  phoneVerificationCode: String
  phoneVerificationCodeExpiry: DateTime
  preferredStore: StoreCreateNestedOneWithoutCustomerProfileInput
  referredBy: CustomerProfileCreateNestedOneWithoutReferralsInput
  referrals: CustomerProfileCreateNestedManyWithoutReferredByInput
  sales: ConsumerSaleCreateNestedManyWithoutCustomerProfileInput
  preferences: CustomerPreferenceProfileCreateNestedOneWithoutCustomerProfileInput
}

input StoreCreateNestedOneWithoutCustomerProfileInput {
  create: StoreCreateWithoutCustomerProfileInput
  connectOrCreate: StoreCreateOrConnectWithoutCustomerProfileInput
  connect: StoreWhereUniqueInput
}

input StoreCreateWithoutCustomerProfileInput {
  id: String
  name: String!
  location: String
  isMain: Boolean
  createdAt: DateTime
  updatedAt: DateTime
  manager: UserCreateNestedOneWithoutStoreInput!
  stocks: StockCreateNestedManyWithoutStoreInput
  receipts: StockReceiptBatchCreateNestedManyWithoutStoreInput
  transfersOut: StockTransferCreateNestedManyWithoutFromStoreInput
  transfersIn: StockTransferCreateNestedManyWithoutToStoreInput
  customerSales: ConsumerSaleCreateNestedManyWithoutStoreInput
  salesReturns: SalesReturnCreateNestedManyWithoutStoreInput
  resellerSales: ResellerSaleCreateNestedManyWithoutStoreInput
  movements: StockMovementCreateNestedManyWithoutStoreInput
  Customer: CustomerCreateNestedManyWithoutPreferredStoreInput
  Quotation: QuotationCreateNestedManyWithoutStoreInput
  PurchaseRequisition: PurchaseRequisitionCreateNestedManyWithoutStoreInput
  purchaseOrders: PurchaseOrderCreateNestedManyWithoutStoreInput
  InvoiceImport: InvoiceImportCreateNestedManyWithoutStoreInput
}

input StockCreateNestedManyWithoutStoreInput {
  create: [StockCreateWithoutStoreInput!]
  connectOrCreate: [StockCreateOrConnectWithoutStoreInput!]
  createMany: StockCreateManyStoreInputEnvelope
  connect: [StockWhereUniqueInput!]
}

input StockCreateWithoutStoreInput {
  id: String
  quantity: Int!
  reserved: Int
  reorderPoint: Int
  reorderQty: Int
  createdAt: DateTime
  updatedAt: DateTime
  productVariant: ProductVariantCreateNestedOneWithoutStockItemsInput!
}

input ProductVariantCreateNestedOneWithoutStockItemsInput {
  create: ProductVariantCreateWithoutStockItemsInput
  connectOrCreate: ProductVariantCreateOrConnectWithoutStockItemsInput
  connect: ProductVariantWhereUniqueInput
}

input ProductVariantCreateWithoutStockItemsInput {
  id: String
  name: String
  size: String!
  concentration: String!
  packaging: String!
  barcode: String
  price: Float!
  resellerPrice: Float!
  createdAt: DateTime
  updatedAt: DateTime
  product: ProductCreateNestedOneWithoutVariantsInput
  receiptItems: StockReceiptBatchItemCreateNestedManyWithoutProductVariantInput
  quotationItems: QuotationItemCreateNestedManyWithoutProductVariantInput
  resellerItems: ResellerSaleItemCreateNestedManyWithoutProductVariantInput
  consumerItems: ConsumerSaleItemCreateNestedManyWithoutProductVariantInput
  returnItems: SalesReturnItemCreateNestedManyWithoutProductVariantInput
  purchaseReturnItems: PurchaseReturnItemCreateNestedManyWithoutProductVariantInput
  transferItems: StockTransferItemCreateNestedManyWithoutProductVariantInput
  stats: ProductSalesStatsCreateNestedOneWithoutProductVariantInput
  PurchaseOrderItem: PurchaseOrderItemCreateNestedManyWithoutProductVariantInput
  StockMovementItem: StockMovementItemCreateNestedManyWithoutProductVariantInput
  PurchaseRequisitionItem: PurchaseRequisitionItemCreateNestedManyWithoutProductVariantInput
  SupplierCatalog: SupplierCatalogCreateNestedManyWithoutProductVariantInput
  SupplierQuoteItem: SupplierQuoteItemCreateNestedManyWithoutProductVariantInput
  ProductVariantTierPrice: ProductVariantTierPriceCreateNestedManyWithoutVariantInput
  facets: VariantFacetValueCreateNestedManyWithoutVariantInput
}

input ProductCreateNestedOneWithoutVariantsInput {
  create: ProductCreateWithoutVariantsInput
  connectOrCreate: ProductCreateOrConnectWithoutVariantsInput
  connect: ProductWhereUniqueInput
}

input ProductCreateWithoutVariantsInput {
  id: String
  name: String!
  description: String
  barcode: String
  createdAt: DateTime
  updatedAt: DateTime
  facets: ProductFacetValueCreateNestedManyWithoutProductInput
}

input ProductFacetValueCreateNestedManyWithoutProductInput {
  create: [ProductFacetValueCreateWithoutProductInput!]
  connectOrCreate: [ProductFacetValueCreateOrConnectWithoutProductInput!]
  createMany: ProductFacetValueCreateManyProductInputEnvelope
  connect: [ProductFacetValueWhereUniqueInput!]
}

input ProductFacetValueCreateWithoutProductInput {
  id: String
  value: String!
  facet: FacetCreateNestedOneWithoutProductsInput!
}

input FacetCreateNestedOneWithoutProductsInput {
  create: FacetCreateWithoutProductsInput
  connectOrCreate: FacetCreateOrConnectWithoutProductsInput
  connect: FacetWhereUniqueInput
}

input FacetCreateWithoutProductsInput {
  id: String
  name: String!
  code: String!
  isPrivate: Boolean
  values: FacetCreatevaluesInput
  createdAt: DateTime
  updatedAt: DateTime
  variants: VariantFacetValueCreateNestedManyWithoutFacetInput
}

input FacetCreatevaluesInput {
  set: [String!]!
}

input VariantFacetValueCreateNestedManyWithoutFacetInput {
  create: [VariantFacetValueCreateWithoutFacetInput!]
  connectOrCreate: [VariantFacetValueCreateOrConnectWithoutFacetInput!]
  createMany: VariantFacetValueCreateManyFacetInputEnvelope
  connect: [VariantFacetValueWhereUniqueInput!]
}

input VariantFacetValueCreateWithoutFacetInput {
  id: String
  value: String!
  variant: ProductVariantCreateNestedOneWithoutFacetsInput!
}

input ProductVariantCreateNestedOneWithoutFacetsInput {
  create: ProductVariantCreateWithoutFacetsInput
  connectOrCreate: ProductVariantCreateOrConnectWithoutFacetsInput
  connect: ProductVariantWhereUniqueInput
}

input ProductVariantCreateWithoutFacetsInput {
  id: String
  name: String
  size: String!
  concentration: String!
  packaging: String!
  barcode: String
  price: Float!
  resellerPrice: Float!
  createdAt: DateTime
  updatedAt: DateTime
  product: ProductCreateNestedOneWithoutVariantsInput
  stockItems: StockCreateNestedManyWithoutProductVariantInput
  receiptItems: StockReceiptBatchItemCreateNestedManyWithoutProductVariantInput
  quotationItems: QuotationItemCreateNestedManyWithoutProductVariantInput
  resellerItems: ResellerSaleItemCreateNestedManyWithoutProductVariantInput
  consumerItems: ConsumerSaleItemCreateNestedManyWithoutProductVariantInput
  returnItems: SalesReturnItemCreateNestedManyWithoutProductVariantInput
  purchaseReturnItems: PurchaseReturnItemCreateNestedManyWithoutProductVariantInput
  transferItems: StockTransferItemCreateNestedManyWithoutProductVariantInput
  stats: ProductSalesStatsCreateNestedOneWithoutProductVariantInput
  PurchaseOrderItem: PurchaseOrderItemCreateNestedManyWithoutProductVariantInput
  StockMovementItem: StockMovementItemCreateNestedManyWithoutProductVariantInput
  PurchaseRequisitionItem: PurchaseRequisitionItemCreateNestedManyWithoutProductVariantInput
  SupplierCatalog: SupplierCatalogCreateNestedManyWithoutProductVariantInput
  SupplierQuoteItem: SupplierQuoteItemCreateNestedManyWithoutProductVariantInput
  ProductVariantTierPrice: ProductVariantTierPriceCreateNestedManyWithoutVariantInput
}

input StockReceiptBatchItemCreateNestedManyWithoutProductVariantInput {
  create: [StockReceiptBatchItemCreateWithoutProductVariantInput!]
  connectOrCreate: [StockReceiptBatchItemCreateOrConnectWithoutProductVariantInput!]
  createMany: StockReceiptBatchItemCreateManyProductVariantInputEnvelope
  connect: [StockReceiptBatchItemWhereUniqueInput!]
}

input StockReceiptBatchItemCreateWithoutProductVariantInput {
  id: String
  quantity: Int!
  batch: StockReceiptBatchCreateNestedOneWithoutItemsInput!
}

input StockReceiptBatchCreateNestedOneWithoutItemsInput {
  create: StockReceiptBatchCreateWithoutItemsInput
  connectOrCreate: StockReceiptBatchCreateOrConnectWithoutItemsInput
  connect: StockReceiptBatchWhereUniqueInput
}

input StockReceiptBatchCreateWithoutItemsInput {
  id: String
  purchaseOrderId: String!
  waybillUrl: String
  receivedAt: DateTime
  store: StoreCreateNestedOneWithoutReceiptsInput!
  receivedBy: UserCreateNestedOneWithoutStockReceiptBatchReceivedBysInput!
  confirmedBy: UserCreateNestedOneWithoutStockReceiptBatchConfirmedBysInput!
  purchaseReturns: PurchaseReturnItemCreateNestedManyWithoutBatchInput
  PurchaseOrder: PurchaseOrderCreateNestedManyWithoutReceiptsInput
}

input StoreCreateNestedOneWithoutReceiptsInput {
  create: StoreCreateWithoutReceiptsInput
  connectOrCreate: StoreCreateOrConnectWithoutReceiptsInput
  connect: StoreWhereUniqueInput
}

input StoreCreateWithoutReceiptsInput {
  id: String
  name: String!
  location: String
  isMain: Boolean
  createdAt: DateTime
  updatedAt: DateTime
  manager: UserCreateNestedOneWithoutStoreInput!
  stocks: StockCreateNestedManyWithoutStoreInput
  transfersOut: StockTransferCreateNestedManyWithoutFromStoreInput
  transfersIn: StockTransferCreateNestedManyWithoutToStoreInput
  customerSales: ConsumerSaleCreateNestedManyWithoutStoreInput
  salesReturns: SalesReturnCreateNestedManyWithoutStoreInput
  resellerSales: ResellerSaleCreateNestedManyWithoutStoreInput
  movements: StockMovementCreateNestedManyWithoutStoreInput
  Customer: CustomerCreateNestedManyWithoutPreferredStoreInput
  CustomerProfile: CustomerProfileCreateNestedManyWithoutPreferredStoreInput
  Quotation: QuotationCreateNestedManyWithoutStoreInput
  PurchaseRequisition: PurchaseRequisitionCreateNestedManyWithoutStoreInput
  purchaseOrders: PurchaseOrderCreateNestedManyWithoutStoreInput
  InvoiceImport: InvoiceImportCreateNestedManyWithoutStoreInput
}

input StockTransferCreateNestedManyWithoutFromStoreInput {
  create: [StockTransferCreateWithoutFromStoreInput!]
  connectOrCreate: [StockTransferCreateOrConnectWithoutFromStoreInput!]
  createMany: StockTransferCreateManyFromStoreInputEnvelope
  connect: [StockTransferWhereUniqueInput!]
}

input StockTransferCreateWithoutFromStoreInput {
  id: String
  status: TransferStatus!
  createdAt: DateTime
  toStore: StoreCreateNestedOneWithoutTransfersInInput!
  requestedBy: UserCreateNestedOneWithoutStockTransferRequestsInput!
  approvedBy: UserCreateNestedOneWithoutStockTransferApprovalsInput!
  items: StockTransferItemCreateNestedManyWithoutTransferInput
}

input StoreCreateNestedOneWithoutTransfersInInput {
  create: StoreCreateWithoutTransfersInInput
  connectOrCreate: StoreCreateOrConnectWithoutTransfersInInput
  connect: StoreWhereUniqueInput
}

input StoreCreateWithoutTransfersInInput {
  id: String
  name: String!
  location: String
  isMain: Boolean
  createdAt: DateTime
  updatedAt: DateTime
  manager: UserCreateNestedOneWithoutStoreInput!
  stocks: StockCreateNestedManyWithoutStoreInput
  receipts: StockReceiptBatchCreateNestedManyWithoutStoreInput
  transfersOut: StockTransferCreateNestedManyWithoutFromStoreInput
  customerSales: ConsumerSaleCreateNestedManyWithoutStoreInput
  salesReturns: SalesReturnCreateNestedManyWithoutStoreInput
  resellerSales: ResellerSaleCreateNestedManyWithoutStoreInput
  movements: StockMovementCreateNestedManyWithoutStoreInput
  Customer: CustomerCreateNestedManyWithoutPreferredStoreInput
  CustomerProfile: CustomerProfileCreateNestedManyWithoutPreferredStoreInput
  Quotation: QuotationCreateNestedManyWithoutStoreInput
  PurchaseRequisition: PurchaseRequisitionCreateNestedManyWithoutStoreInput
  purchaseOrders: PurchaseOrderCreateNestedManyWithoutStoreInput
  InvoiceImport: InvoiceImportCreateNestedManyWithoutStoreInput
}

input StockReceiptBatchCreateNestedManyWithoutStoreInput {
  create: [StockReceiptBatchCreateWithoutStoreInput!]
  connectOrCreate: [StockReceiptBatchCreateOrConnectWithoutStoreInput!]
  createMany: StockReceiptBatchCreateManyStoreInputEnvelope
  connect: [StockReceiptBatchWhereUniqueInput!]
}

input StockReceiptBatchCreateWithoutStoreInput {
  id: String
  purchaseOrderId: String!
  waybillUrl: String
  receivedAt: DateTime
  receivedBy: UserCreateNestedOneWithoutStockReceiptBatchReceivedBysInput!
  confirmedBy: UserCreateNestedOneWithoutStockReceiptBatchConfirmedBysInput!
  items: StockReceiptBatchItemCreateNestedManyWithoutBatchInput
  purchaseReturns: PurchaseReturnItemCreateNestedManyWithoutBatchInput
  PurchaseOrder: PurchaseOrderCreateNestedManyWithoutReceiptsInput
}

input UserCreateNestedOneWithoutStockReceiptBatchReceivedBysInput {
  create: UserCreateWithoutStockReceiptBatchReceivedBysInput
  connectOrCreate: UserCreateOrConnectWithoutStockReceiptBatchReceivedBysInput
  connect: UserWhereUniqueInput
}

input UserCreateWithoutStockReceiptBatchReceivedBysInput {
  id: String
  email: String!
  passwordHash: String!
  tier: UserTier
  referralCode: String
  referredBy: String
  createdAt: DateTime
  updatedAt: DateTime
  isEmailVerified: Boolean
  emailVerificationToken: String
  emailVerificationTokenExpiry: DateTime
  role: RoleCreateNestedOneWithoutUsersInput!
  resellerProfile: ResellerProfileCreateNestedOneWithoutUserInput
  customerProfile: CustomerProfileCreateNestedOneWithoutUserInput
  resellerPaymentsMade: ResellerPaymentCreateNestedManyWithoutResellerInput
  resellerPaymentsReceived: ResellerPaymentCreateNestedManyWithoutReceivedByInput
  adminLogs: AdminActionLogCreateNestedManyWithoutAdminInput
  supportMessages: SupportMessageCreateNestedManyWithoutUserInput
  ConsumerSale: ConsumerSaleCreateNestedManyWithoutBillerInput
  ConsumerSaleAdjustedBys: ConsumerSaleCreateNestedManyWithoutAdjustedByInput
  StockReceiptBatchConfirmedBys: StockReceiptBatchCreateNestedManyWithoutConfirmedByInput
  StockTransferRequests: StockTransferCreateNestedManyWithoutRequestedByInput
  StockTransferApprovals: StockTransferCreateNestedManyWithoutApprovedByInput
  Store: StoreCreateNestedManyWithoutManagerInput
  ConsumerReceipt: ConsumerReceiptCreateNestedManyWithoutIssuedByInput
  ResellerSales: ResellerSaleCreateNestedManyWithoutResellerInput
  BillerResellerSale: ResellerSaleCreateNestedManyWithoutBillerInput
  ResellerSale: ResellerSaleCreateNestedManyWithoutApprovedByInput
  SalesReturnReceivers: SalesReturnCreateNestedManyWithoutReceivedByInput
  SalesReturnRequesters: SalesReturnCreateNestedManyWithoutReturnedByInput
  SalesReturn: SalesReturnCreateNestedManyWithoutApprovedByInput
  PurchaseReturnInitiators: PurchaseReturnCreateNestedManyWithoutInitiatedByInput
  PurchaseReturnApprovers: PurchaseReturnCreateNestedManyWithoutApprovedByInput
  Payment: PaymentCreateNestedManyWithoutReceivedByInput
  ResellerTierHistory: ResellerTierHistoryCreateNestedManyWithoutUserInput
  ResellerTierHistoryChangedBys: ResellerTierHistoryCreateNestedManyWithoutAdminInput
  ResellerProfile: ResellerProfileCreateNestedManyWithoutBillerInput
  RequestedResellers: ResellerProfileCreateNestedManyWithoutRequestedBillerInput
  Notification: NotificationCreateNestedManyWithoutUserInput
  Fulfillment: FulfillmentCreateNestedManyWithoutDeliveryPersonnelInput
  BillerQuotation: QuotationCreateNestedManyWithoutBillerInput
  ResellerQuotation: QuotationCreateNestedManyWithoutResellerInput
  PurchaseRequisition: PurchaseRequisitionCreateNestedManyWithoutRequestedByInput
  Supplier: SupplierCreateNestedManyWithoutUserInput
}

input ResellerPaymentCreateNestedManyWithoutResellerInput {
  create: [ResellerPaymentCreateWithoutResellerInput!]
  connectOrCreate: [ResellerPaymentCreateOrConnectWithoutResellerInput!]
  createMany: ResellerPaymentCreateManyResellerInputEnvelope
  connect: [ResellerPaymentWhereUniqueInput!]
}

input ResellerPaymentCreateWithoutResellerInput {
  id: String
  amount: Float!
  method: PaymentMethod!
  reference: String
  status: PaymentStatus
  receivedAt: DateTime
  saleOrder: SaleOrderCreateNestedOneWithoutResellerPaymentInput!
  sale: ResellerSaleCreateNestedOneWithoutPaymentsInput
  receivedBy: UserCreateNestedOneWithoutResellerPaymentsReceivedInput!
}

input SaleOrderCreateNestedOneWithoutResellerPaymentInput {
  create: SaleOrderCreateWithoutResellerPaymentInput
  connectOrCreate: SaleOrderCreateOrConnectWithoutResellerPaymentInput
  connect: SaleOrderWhereUniqueInput
}

input SaleOrderCreateWithoutResellerPaymentInput {
  id: String
  storeId: String!
  billerId: String!
  type: SaleType!
  status: SaleStatus
  phase: OrderPhase
  totalAmount: Float!
  createdAt: DateTime
  updatedAt: DateTime
  resellerSaleid: String
  consumerSale: ConsumerSaleCreateNestedOneWithoutSaleOrderInput
  resellerSale: ResellerSaleCreateNestedOneWithoutSaleOrderInput
  fulfillment: FulfillmentCreateNestedOneWithoutSaleOrderInput
  quotation: QuotationCreateNestedOneWithoutSaleOrderInput
  ConsumerPayment: ConsumerPaymentCreateNestedManyWithoutSaleOrderInput
}

input ConsumerSaleCreateNestedOneWithoutSaleOrderInput {
  create: ConsumerSaleCreateWithoutSaleOrderInput
  connectOrCreate: ConsumerSaleCreateOrConnectWithoutSaleOrderInput
  connect: ConsumerSaleWhereUniqueInput
}

input ConsumerSaleCreateWithoutSaleOrderInput {
  id: String
  channel: SaleChannel!
  status: SaleStatus!
  totalAmount: Float!
  adjustmentType: AdjustmentType
  createdAt: DateTime
  updatedAt: DateTime
  customer: CustomerCreateNestedOneWithoutSalesInput
  store: StoreCreateNestedOneWithoutCustomerSalesInput!
  biller: UserCreateNestedOneWithoutConsumerSaleInput!
  adjustedBy: UserCreateNestedOneWithoutConsumerSaleAdjustedBysInput
  quotation: QuotationCreateNestedOneWithoutConsumerSaleInput
  items: ConsumerSaleItemCreateNestedManyWithoutSaleInput
  payments: ConsumerPaymentCreateNestedManyWithoutSaleInput
  receipt: ConsumerReceiptCreateNestedOneWithoutSaleInput
  SalesReturn: SalesReturnCreateNestedManyWithoutConsumerSaleInput
  CustomerProfile: CustomerProfileCreateNestedManyWithoutSalesInput
}

input CustomerCreateNestedOneWithoutSalesInput {
  create: CustomerCreateWithoutSalesInput
  connectOrCreate: CustomerCreateOrConnectWithoutSalesInput
  connect: CustomerWhereUniqueInput
}

input CustomerCreateWithoutSalesInput {
  id: String
  fullName: String!
  phone: String
  email: String
  preferredStore: StoreCreateNestedOneWithoutCustomerInput
  CustomerPreferenceProfile: CustomerPreferenceProfileCreateNestedManyWithoutCustomerInput
  Quotation: QuotationCreateNestedManyWithoutConsumerInput
}

input StoreCreateNestedOneWithoutCustomerInput {
  create: StoreCreateWithoutCustomerInput
  connectOrCreate: StoreCreateOrConnectWithoutCustomerInput
  connect: StoreWhereUniqueInput
}

input StoreCreateWithoutCustomerInput {
  id: String
  name: String!
  location: String
  isMain: Boolean
  createdAt: DateTime
  updatedAt: DateTime
  manager: UserCreateNestedOneWithoutStoreInput!
  stocks: StockCreateNestedManyWithoutStoreInput
  receipts: StockReceiptBatchCreateNestedManyWithoutStoreInput
  transfersOut: StockTransferCreateNestedManyWithoutFromStoreInput
  transfersIn: StockTransferCreateNestedManyWithoutToStoreInput
  customerSales: ConsumerSaleCreateNestedManyWithoutStoreInput
  salesReturns: SalesReturnCreateNestedManyWithoutStoreInput
  resellerSales: ResellerSaleCreateNestedManyWithoutStoreInput
  movements: StockMovementCreateNestedManyWithoutStoreInput
  CustomerProfile: CustomerProfileCreateNestedManyWithoutPreferredStoreInput
  Quotation: QuotationCreateNestedManyWithoutStoreInput
  PurchaseRequisition: PurchaseRequisitionCreateNestedManyWithoutStoreInput
  purchaseOrders: PurchaseOrderCreateNestedManyWithoutStoreInput
  InvoiceImport: InvoiceImportCreateNestedManyWithoutStoreInput
}

input StockTransferCreateNestedManyWithoutToStoreInput {
  create: [StockTransferCreateWithoutToStoreInput!]
  connectOrCreate: [StockTransferCreateOrConnectWithoutToStoreInput!]
  createMany: StockTransferCreateManyToStoreInputEnvelope
  connect: [StockTransferWhereUniqueInput!]
}

input StockTransferCreateWithoutToStoreInput {
  id: String
  status: TransferStatus!
  createdAt: DateTime
  fromStore: StoreCreateNestedOneWithoutTransfersOutInput!
  requestedBy: UserCreateNestedOneWithoutStockTransferRequestsInput!
  approvedBy: UserCreateNestedOneWithoutStockTransferApprovalsInput!
  items: StockTransferItemCreateNestedManyWithoutTransferInput
}

input StoreCreateNestedOneWithoutTransfersOutInput {
  create: StoreCreateWithoutTransfersOutInput
  connectOrCreate: StoreCreateOrConnectWithoutTransfersOutInput
  connect: StoreWhereUniqueInput
}

input StoreCreateWithoutTransfersOutInput {
  id: String
  name: String!
  location: String
  isMain: Boolean
  createdAt: DateTime
  updatedAt: DateTime
  manager: UserCreateNestedOneWithoutStoreInput!
  stocks: StockCreateNestedManyWithoutStoreInput
  receipts: StockReceiptBatchCreateNestedManyWithoutStoreInput
  transfersIn: StockTransferCreateNestedManyWithoutToStoreInput
  customerSales: ConsumerSaleCreateNestedManyWithoutStoreInput
  salesReturns: SalesReturnCreateNestedManyWithoutStoreInput
  resellerSales: ResellerSaleCreateNestedManyWithoutStoreInput
  movements: StockMovementCreateNestedManyWithoutStoreInput
  Customer: CustomerCreateNestedManyWithoutPreferredStoreInput
  CustomerProfile: CustomerProfileCreateNestedManyWithoutPreferredStoreInput
  Quotation: QuotationCreateNestedManyWithoutStoreInput
  PurchaseRequisition: PurchaseRequisitionCreateNestedManyWithoutStoreInput
  purchaseOrders: PurchaseOrderCreateNestedManyWithoutStoreInput
  InvoiceImport: InvoiceImportCreateNestedManyWithoutStoreInput
}

input ConsumerSaleCreateNestedManyWithoutStoreInput {
  create: [ConsumerSaleCreateWithoutStoreInput!]
  connectOrCreate: [ConsumerSaleCreateOrConnectWithoutStoreInput!]
  createMany: ConsumerSaleCreateManyStoreInputEnvelope
  connect: [ConsumerSaleWhereUniqueInput!]
}

input ConsumerSaleCreateWithoutStoreInput {
  id: String
  channel: SaleChannel!
  status: SaleStatus!
  totalAmount: Float!
  adjustmentType: AdjustmentType
  createdAt: DateTime
  updatedAt: DateTime
  customer: CustomerCreateNestedOneWithoutSalesInput
  biller: UserCreateNestedOneWithoutConsumerSaleInput!
  adjustedBy: UserCreateNestedOneWithoutConsumerSaleAdjustedBysInput
  quotation: QuotationCreateNestedOneWithoutConsumerSaleInput
  items: ConsumerSaleItemCreateNestedManyWithoutSaleInput
  payments: ConsumerPaymentCreateNestedManyWithoutSaleInput
  receipt: ConsumerReceiptCreateNestedOneWithoutSaleInput
  SalesReturn: SalesReturnCreateNestedManyWithoutConsumerSaleInput
  CustomerProfile: CustomerProfileCreateNestedManyWithoutSalesInput
  SaleOrder: SaleOrderCreateNestedOneWithoutConsumerSaleInput!
}

input UserCreateNestedOneWithoutConsumerSaleInput {
  create: UserCreateWithoutConsumerSaleInput
  connectOrCreate: UserCreateOrConnectWithoutConsumerSaleInput
  connect: UserWhereUniqueInput
}

input UserCreateWithoutConsumerSaleInput {
  id: String
  email: String!
  passwordHash: String!
  tier: UserTier
  referralCode: String
  referredBy: String
  createdAt: DateTime
  updatedAt: DateTime
  isEmailVerified: Boolean
  emailVerificationToken: String
  emailVerificationTokenExpiry: DateTime
  role: RoleCreateNestedOneWithoutUsersInput!
  resellerProfile: ResellerProfileCreateNestedOneWithoutUserInput
  customerProfile: CustomerProfileCreateNestedOneWithoutUserInput
  resellerPaymentsMade: ResellerPaymentCreateNestedManyWithoutResellerInput
  resellerPaymentsReceived: ResellerPaymentCreateNestedManyWithoutReceivedByInput
  adminLogs: AdminActionLogCreateNestedManyWithoutAdminInput
  supportMessages: SupportMessageCreateNestedManyWithoutUserInput
  ConsumerSaleAdjustedBys: ConsumerSaleCreateNestedManyWithoutAdjustedByInput
  StockReceiptBatchReceivedBys: StockReceiptBatchCreateNestedManyWithoutReceivedByInput
  StockReceiptBatchConfirmedBys: StockReceiptBatchCreateNestedManyWithoutConfirmedByInput
  StockTransferRequests: StockTransferCreateNestedManyWithoutRequestedByInput
  StockTransferApprovals: StockTransferCreateNestedManyWithoutApprovedByInput
  Store: StoreCreateNestedManyWithoutManagerInput
  ConsumerReceipt: ConsumerReceiptCreateNestedManyWithoutIssuedByInput
  ResellerSales: ResellerSaleCreateNestedManyWithoutResellerInput
  BillerResellerSale: ResellerSaleCreateNestedManyWithoutBillerInput
  ResellerSale: ResellerSaleCreateNestedManyWithoutApprovedByInput
  SalesReturnReceivers: SalesReturnCreateNestedManyWithoutReceivedByInput
  SalesReturnRequesters: SalesReturnCreateNestedManyWithoutReturnedByInput
  SalesReturn: SalesReturnCreateNestedManyWithoutApprovedByInput
  PurchaseReturnInitiators: PurchaseReturnCreateNestedManyWithoutInitiatedByInput
  PurchaseReturnApprovers: PurchaseReturnCreateNestedManyWithoutApprovedByInput
  Payment: PaymentCreateNestedManyWithoutReceivedByInput
  ResellerTierHistory: ResellerTierHistoryCreateNestedManyWithoutUserInput
  ResellerTierHistoryChangedBys: ResellerTierHistoryCreateNestedManyWithoutAdminInput
  ResellerProfile: ResellerProfileCreateNestedManyWithoutBillerInput
  RequestedResellers: ResellerProfileCreateNestedManyWithoutRequestedBillerInput
  Notification: NotificationCreateNestedManyWithoutUserInput
  Fulfillment: FulfillmentCreateNestedManyWithoutDeliveryPersonnelInput
  BillerQuotation: QuotationCreateNestedManyWithoutBillerInput
  ResellerQuotation: QuotationCreateNestedManyWithoutResellerInput
  PurchaseRequisition: PurchaseRequisitionCreateNestedManyWithoutRequestedByInput
  Supplier: SupplierCreateNestedManyWithoutUserInput
}

input ResellerPaymentCreateNestedManyWithoutReceivedByInput {
  create: [ResellerPaymentCreateWithoutReceivedByInput!]
  connectOrCreate: [ResellerPaymentCreateOrConnectWithoutReceivedByInput!]
  createMany: ResellerPaymentCreateManyReceivedByInputEnvelope
  connect: [ResellerPaymentWhereUniqueInput!]
}

input ResellerPaymentCreateWithoutReceivedByInput {
  id: String
  amount: Float!
  method: PaymentMethod!
  reference: String
  status: PaymentStatus
  receivedAt: DateTime
  saleOrder: SaleOrderCreateNestedOneWithoutResellerPaymentInput!
  reseller: UserCreateNestedOneWithoutResellerPaymentsMadeInput!
  sale: ResellerSaleCreateNestedOneWithoutPaymentsInput
}

input UserCreateNestedOneWithoutResellerPaymentsMadeInput {
  create: UserCreateWithoutResellerPaymentsMadeInput
  connectOrCreate: UserCreateOrConnectWithoutResellerPaymentsMadeInput
  connect: UserWhereUniqueInput
}

input UserCreateWithoutResellerPaymentsMadeInput {
  id: String
  email: String!
  passwordHash: String!
  tier: UserTier
  referralCode: String
  referredBy: String
  createdAt: DateTime
  updatedAt: DateTime
  isEmailVerified: Boolean
  emailVerificationToken: String
  emailVerificationTokenExpiry: DateTime
  role: RoleCreateNestedOneWithoutUsersInput!
  resellerProfile: ResellerProfileCreateNestedOneWithoutUserInput
  customerProfile: CustomerProfileCreateNestedOneWithoutUserInput
  resellerPaymentsReceived: ResellerPaymentCreateNestedManyWithoutReceivedByInput
  adminLogs: AdminActionLogCreateNestedManyWithoutAdminInput
  supportMessages: SupportMessageCreateNestedManyWithoutUserInput
  ConsumerSale: ConsumerSaleCreateNestedManyWithoutBillerInput
  ConsumerSaleAdjustedBys: ConsumerSaleCreateNestedManyWithoutAdjustedByInput
  StockReceiptBatchReceivedBys: StockReceiptBatchCreateNestedManyWithoutReceivedByInput
  StockReceiptBatchConfirmedBys: StockReceiptBatchCreateNestedManyWithoutConfirmedByInput
  StockTransferRequests: StockTransferCreateNestedManyWithoutRequestedByInput
  StockTransferApprovals: StockTransferCreateNestedManyWithoutApprovedByInput
  Store: StoreCreateNestedManyWithoutManagerInput
  ConsumerReceipt: ConsumerReceiptCreateNestedManyWithoutIssuedByInput
  ResellerSales: ResellerSaleCreateNestedManyWithoutResellerInput
  BillerResellerSale: ResellerSaleCreateNestedManyWithoutBillerInput
  ResellerSale: ResellerSaleCreateNestedManyWithoutApprovedByInput
  SalesReturnReceivers: SalesReturnCreateNestedManyWithoutReceivedByInput
  SalesReturnRequesters: SalesReturnCreateNestedManyWithoutReturnedByInput
  SalesReturn: SalesReturnCreateNestedManyWithoutApprovedByInput
  PurchaseReturnInitiators: PurchaseReturnCreateNestedManyWithoutInitiatedByInput
  PurchaseReturnApprovers: PurchaseReturnCreateNestedManyWithoutApprovedByInput
  Payment: PaymentCreateNestedManyWithoutReceivedByInput
  ResellerTierHistory: ResellerTierHistoryCreateNestedManyWithoutUserInput
  ResellerTierHistoryChangedBys: ResellerTierHistoryCreateNestedManyWithoutAdminInput
  ResellerProfile: ResellerProfileCreateNestedManyWithoutBillerInput
  RequestedResellers: ResellerProfileCreateNestedManyWithoutRequestedBillerInput
  Notification: NotificationCreateNestedManyWithoutUserInput
  Fulfillment: FulfillmentCreateNestedManyWithoutDeliveryPersonnelInput
  BillerQuotation: QuotationCreateNestedManyWithoutBillerInput
  ResellerQuotation: QuotationCreateNestedManyWithoutResellerInput
  PurchaseRequisition: PurchaseRequisitionCreateNestedManyWithoutRequestedByInput
  Supplier: SupplierCreateNestedManyWithoutUserInput
}

input AdminActionLogCreateNestedManyWithoutAdminInput {
  create: [AdminActionLogCreateWithoutAdminInput!]
  connectOrCreate: [AdminActionLogCreateOrConnectWithoutAdminInput!]
  createMany: AdminActionLogCreateManyAdminInputEnvelope
  connect: [AdminActionLogWhereUniqueInput!]
}

input AdminActionLogCreateWithoutAdminInput {
  id: String
  action: String!
  entityType: String!
  entityId: String!
  beforeChange: JSON
  afterChange: JSON
  timestamp: DateTime
}

input AdminActionLogCreateOrConnectWithoutAdminInput {
  where: AdminActionLogWhereUniqueInput!
  create: AdminActionLogCreateWithoutAdminInput!
}

input AdminActionLogWhereUniqueInput {
  id: String
  AND: [AdminActionLogWhereInput!]
  OR: [AdminActionLogWhereInput!]
  NOT: [AdminActionLogWhereInput!]
  adminId: StringFilter
  action: StringFilter
  entityType: StringFilter
  entityId: StringFilter
  beforeChange: JsonNullableFilter
  afterChange: JsonNullableFilter
  timestamp: DateTimeFilter
  admin: UserScalarRelationFilter
}

input AdminActionLogCreateManyAdminInputEnvelope {
  data: [AdminActionLogCreateManyAdminInput!]!
  skipDuplicates: Boolean
}

input AdminActionLogCreateManyAdminInput {
  id: String
  action: String!
  entityType: String!
  entityId: String!
  beforeChange: JSON
  afterChange: JSON
  timestamp: DateTime
}

input SupportMessageCreateNestedManyWithoutUserInput {
  create: [SupportMessageCreateWithoutUserInput!]
  connectOrCreate: [SupportMessageCreateOrConnectWithoutUserInput!]
  createMany: SupportMessageCreateManyUserInputEnvelope
  connect: [SupportMessageWhereUniqueInput!]
}

input SupportMessageCreateWithoutUserInput {
  id: String
  isAdmin: Boolean
  message: String!
  createdAt: DateTime
}

input SupportMessageCreateOrConnectWithoutUserInput {
  where: SupportMessageWhereUniqueInput!
  create: SupportMessageCreateWithoutUserInput!
}

input SupportMessageWhereUniqueInput {
  id: String
  AND: [SupportMessageWhereInput!]
  OR: [SupportMessageWhereInput!]
  NOT: [SupportMessageWhereInput!]
  userId: StringFilter
  isAdmin: BoolFilter
  message: StringFilter
  createdAt: DateTimeFilter
  user: UserScalarRelationFilter
}

input SupportMessageCreateManyUserInputEnvelope {
  data: [SupportMessageCreateManyUserInput!]!
  skipDuplicates: Boolean
}

input SupportMessageCreateManyUserInput {
  id: String
  isAdmin: Boolean
  message: String!
  createdAt: DateTime
}

input ConsumerSaleCreateNestedManyWithoutBillerInput {
  create: [ConsumerSaleCreateWithoutBillerInput!]
  connectOrCreate: [ConsumerSaleCreateOrConnectWithoutBillerInput!]
  createMany: ConsumerSaleCreateManyBillerInputEnvelope
  connect: [ConsumerSaleWhereUniqueInput!]
}

input ConsumerSaleCreateWithoutBillerInput {
  id: String
  channel: SaleChannel!
  status: SaleStatus!
  totalAmount: Float!
  adjustmentType: AdjustmentType
  createdAt: DateTime
  updatedAt: DateTime
  customer: CustomerCreateNestedOneWithoutSalesInput
  store: StoreCreateNestedOneWithoutCustomerSalesInput!
  adjustedBy: UserCreateNestedOneWithoutConsumerSaleAdjustedBysInput
  quotation: QuotationCreateNestedOneWithoutConsumerSaleInput
  items: ConsumerSaleItemCreateNestedManyWithoutSaleInput
  payments: ConsumerPaymentCreateNestedManyWithoutSaleInput
  receipt: ConsumerReceiptCreateNestedOneWithoutSaleInput
  SalesReturn: SalesReturnCreateNestedManyWithoutConsumerSaleInput
  CustomerProfile: CustomerProfileCreateNestedManyWithoutSalesInput
  SaleOrder: SaleOrderCreateNestedOneWithoutConsumerSaleInput!
}

input StoreCreateNestedOneWithoutCustomerSalesInput {
  create: StoreCreateWithoutCustomerSalesInput
  connectOrCreate: StoreCreateOrConnectWithoutCustomerSalesInput
  connect: StoreWhereUniqueInput
}

input StoreCreateWithoutCustomerSalesInput {
  id: String
  name: String!
  location: String
  isMain: Boolean
  createdAt: DateTime
  updatedAt: DateTime
  manager: UserCreateNestedOneWithoutStoreInput!
  stocks: StockCreateNestedManyWithoutStoreInput
  receipts: StockReceiptBatchCreateNestedManyWithoutStoreInput
  transfersOut: StockTransferCreateNestedManyWithoutFromStoreInput
  transfersIn: StockTransferCreateNestedManyWithoutToStoreInput
  salesReturns: SalesReturnCreateNestedManyWithoutStoreInput
  resellerSales: ResellerSaleCreateNestedManyWithoutStoreInput
  movements: StockMovementCreateNestedManyWithoutStoreInput
  Customer: CustomerCreateNestedManyWithoutPreferredStoreInput
  CustomerProfile: CustomerProfileCreateNestedManyWithoutPreferredStoreInput
  Quotation: QuotationCreateNestedManyWithoutStoreInput
  PurchaseRequisition: PurchaseRequisitionCreateNestedManyWithoutStoreInput
  purchaseOrders: PurchaseOrderCreateNestedManyWithoutStoreInput
  InvoiceImport: InvoiceImportCreateNestedManyWithoutStoreInput
}

input SalesReturnCreateNestedManyWithoutStoreInput {
  create: [SalesReturnCreateWithoutStoreInput!]
  connectOrCreate: [SalesReturnCreateOrConnectWithoutStoreInput!]
  createMany: SalesReturnCreateManyStoreInputEnvelope
  connect: [SalesReturnWhereUniqueInput!]
}

input SalesReturnCreateWithoutStoreInput {
  id: String
  type: SaleType!
  status: ReturnStatus!
  returnLocation: ReturnLocation!
  isApprovedLate: Boolean
  createdAt: DateTime
  updatedAt: DateTime
  consumerSale: ConsumerSaleCreateNestedOneWithoutSalesReturnInput
  resellerSale: ResellerSaleCreateNestedOneWithoutSalesReturnInput
  returnedBy: UserCreateNestedOneWithoutSalesReturnRequestersInput!
  receivedBy: UserCreateNestedOneWithoutSalesReturnReceiversInput!
  approvedBy: UserCreateNestedOneWithoutSalesReturnInput
  items: SalesReturnItemCreateNestedManyWithoutReturnInput
}

input ConsumerSaleCreateNestedOneWithoutSalesReturnInput {
  create: ConsumerSaleCreateWithoutSalesReturnInput
  connectOrCreate: ConsumerSaleCreateOrConnectWithoutSalesReturnInput
  connect: ConsumerSaleWhereUniqueInput
}

input ConsumerSaleCreateWithoutSalesReturnInput {
  id: String
  channel: SaleChannel!
  status: SaleStatus!
  totalAmount: Float!
  adjustmentType: AdjustmentType
  createdAt: DateTime
  updatedAt: DateTime
  customer: CustomerCreateNestedOneWithoutSalesInput
  store: StoreCreateNestedOneWithoutCustomerSalesInput!
  biller: UserCreateNestedOneWithoutConsumerSaleInput!
  adjustedBy: UserCreateNestedOneWithoutConsumerSaleAdjustedBysInput
  quotation: QuotationCreateNestedOneWithoutConsumerSaleInput
  items: ConsumerSaleItemCreateNestedManyWithoutSaleInput
  payments: ConsumerPaymentCreateNestedManyWithoutSaleInput
  receipt: ConsumerReceiptCreateNestedOneWithoutSaleInput
  CustomerProfile: CustomerProfileCreateNestedManyWithoutSalesInput
  SaleOrder: SaleOrderCreateNestedOneWithoutConsumerSaleInput!
}

input UserCreateNestedOneWithoutConsumerSaleAdjustedBysInput {
  create: UserCreateWithoutConsumerSaleAdjustedBysInput
  connectOrCreate: UserCreateOrConnectWithoutConsumerSaleAdjustedBysInput
  connect: UserWhereUniqueInput
}

input UserCreateWithoutConsumerSaleAdjustedBysInput {
  id: String
  email: String!
  passwordHash: String!
  tier: UserTier
  referralCode: String
  referredBy: String
  createdAt: DateTime
  updatedAt: DateTime
  isEmailVerified: Boolean
  emailVerificationToken: String
  emailVerificationTokenExpiry: DateTime
  role: RoleCreateNestedOneWithoutUsersInput!
  resellerProfile: ResellerProfileCreateNestedOneWithoutUserInput
  customerProfile: CustomerProfileCreateNestedOneWithoutUserInput
  resellerPaymentsMade: ResellerPaymentCreateNestedManyWithoutResellerInput
  resellerPaymentsReceived: ResellerPaymentCreateNestedManyWithoutReceivedByInput
  adminLogs: AdminActionLogCreateNestedManyWithoutAdminInput
  supportMessages: SupportMessageCreateNestedManyWithoutUserInput
  ConsumerSale: ConsumerSaleCreateNestedManyWithoutBillerInput
  StockReceiptBatchReceivedBys: StockReceiptBatchCreateNestedManyWithoutReceivedByInput
  StockReceiptBatchConfirmedBys: StockReceiptBatchCreateNestedManyWithoutConfirmedByInput
  StockTransferRequests: StockTransferCreateNestedManyWithoutRequestedByInput
  StockTransferApprovals: StockTransferCreateNestedManyWithoutApprovedByInput
  Store: StoreCreateNestedManyWithoutManagerInput
  ConsumerReceipt: ConsumerReceiptCreateNestedManyWithoutIssuedByInput
  ResellerSales: ResellerSaleCreateNestedManyWithoutResellerInput
  BillerResellerSale: ResellerSaleCreateNestedManyWithoutBillerInput
  ResellerSale: ResellerSaleCreateNestedManyWithoutApprovedByInput
  SalesReturnReceivers: SalesReturnCreateNestedManyWithoutReceivedByInput
  SalesReturnRequesters: SalesReturnCreateNestedManyWithoutReturnedByInput
  SalesReturn: SalesReturnCreateNestedManyWithoutApprovedByInput
  PurchaseReturnInitiators: PurchaseReturnCreateNestedManyWithoutInitiatedByInput
  PurchaseReturnApprovers: PurchaseReturnCreateNestedManyWithoutApprovedByInput
  Payment: PaymentCreateNestedManyWithoutReceivedByInput
  ResellerTierHistory: ResellerTierHistoryCreateNestedManyWithoutUserInput
  ResellerTierHistoryChangedBys: ResellerTierHistoryCreateNestedManyWithoutAdminInput
  ResellerProfile: ResellerProfileCreateNestedManyWithoutBillerInput
  RequestedResellers: ResellerProfileCreateNestedManyWithoutRequestedBillerInput
  Notification: NotificationCreateNestedManyWithoutUserInput
  Fulfillment: FulfillmentCreateNestedManyWithoutDeliveryPersonnelInput
  BillerQuotation: QuotationCreateNestedManyWithoutBillerInput
  ResellerQuotation: QuotationCreateNestedManyWithoutResellerInput
  PurchaseRequisition: PurchaseRequisitionCreateNestedManyWithoutRequestedByInput
  Supplier: SupplierCreateNestedManyWithoutUserInput
}

input StockReceiptBatchCreateNestedManyWithoutReceivedByInput {
  create: [StockReceiptBatchCreateWithoutReceivedByInput!]
  connectOrCreate: [StockReceiptBatchCreateOrConnectWithoutReceivedByInput!]
  createMany: StockReceiptBatchCreateManyReceivedByInputEnvelope
  connect: [StockReceiptBatchWhereUniqueInput!]
}

input StockReceiptBatchCreateWithoutReceivedByInput {
  id: String
  purchaseOrderId: String!
  waybillUrl: String
  receivedAt: DateTime
  store: StoreCreateNestedOneWithoutReceiptsInput!
  confirmedBy: UserCreateNestedOneWithoutStockReceiptBatchConfirmedBysInput!
  items: StockReceiptBatchItemCreateNestedManyWithoutBatchInput
  purchaseReturns: PurchaseReturnItemCreateNestedManyWithoutBatchInput
  PurchaseOrder: PurchaseOrderCreateNestedManyWithoutReceiptsInput
}

input UserCreateNestedOneWithoutStockReceiptBatchConfirmedBysInput {
  create: UserCreateWithoutStockReceiptBatchConfirmedBysInput
  connectOrCreate: UserCreateOrConnectWithoutStockReceiptBatchConfirmedBysInput
  connect: UserWhereUniqueInput
}

input UserCreateWithoutStockReceiptBatchConfirmedBysInput {
  id: String
  email: String!
  passwordHash: String!
  tier: UserTier
  referralCode: String
  referredBy: String
  createdAt: DateTime
  updatedAt: DateTime
  isEmailVerified: Boolean
  emailVerificationToken: String
  emailVerificationTokenExpiry: DateTime
  role: RoleCreateNestedOneWithoutUsersInput!
  resellerProfile: ResellerProfileCreateNestedOneWithoutUserInput
  customerProfile: CustomerProfileCreateNestedOneWithoutUserInput
  resellerPaymentsMade: ResellerPaymentCreateNestedManyWithoutResellerInput
  resellerPaymentsReceived: ResellerPaymentCreateNestedManyWithoutReceivedByInput
  adminLogs: AdminActionLogCreateNestedManyWithoutAdminInput
  supportMessages: SupportMessageCreateNestedManyWithoutUserInput
  ConsumerSale: ConsumerSaleCreateNestedManyWithoutBillerInput
  ConsumerSaleAdjustedBys: ConsumerSaleCreateNestedManyWithoutAdjustedByInput
  StockReceiptBatchReceivedBys: StockReceiptBatchCreateNestedManyWithoutReceivedByInput
  StockTransferRequests: StockTransferCreateNestedManyWithoutRequestedByInput
  StockTransferApprovals: StockTransferCreateNestedManyWithoutApprovedByInput
  Store: StoreCreateNestedManyWithoutManagerInput
  ConsumerReceipt: ConsumerReceiptCreateNestedManyWithoutIssuedByInput
  ResellerSales: ResellerSaleCreateNestedManyWithoutResellerInput
  BillerResellerSale: ResellerSaleCreateNestedManyWithoutBillerInput
  ResellerSale: ResellerSaleCreateNestedManyWithoutApprovedByInput
  SalesReturnReceivers: SalesReturnCreateNestedManyWithoutReceivedByInput
  SalesReturnRequesters: SalesReturnCreateNestedManyWithoutReturnedByInput
  SalesReturn: SalesReturnCreateNestedManyWithoutApprovedByInput
  PurchaseReturnInitiators: PurchaseReturnCreateNestedManyWithoutInitiatedByInput
  PurchaseReturnApprovers: PurchaseReturnCreateNestedManyWithoutApprovedByInput
  Payment: PaymentCreateNestedManyWithoutReceivedByInput
  ResellerTierHistory: ResellerTierHistoryCreateNestedManyWithoutUserInput
  ResellerTierHistoryChangedBys: ResellerTierHistoryCreateNestedManyWithoutAdminInput
  ResellerProfile: ResellerProfileCreateNestedManyWithoutBillerInput
  RequestedResellers: ResellerProfileCreateNestedManyWithoutRequestedBillerInput
  Notification: NotificationCreateNestedManyWithoutUserInput
  Fulfillment: FulfillmentCreateNestedManyWithoutDeliveryPersonnelInput
  BillerQuotation: QuotationCreateNestedManyWithoutBillerInput
  ResellerQuotation: QuotationCreateNestedManyWithoutResellerInput
  PurchaseRequisition: PurchaseRequisitionCreateNestedManyWithoutRequestedByInput
  Supplier: SupplierCreateNestedManyWithoutUserInput
}

input ConsumerSaleCreateNestedManyWithoutAdjustedByInput {
  create: [ConsumerSaleCreateWithoutAdjustedByInput!]
  connectOrCreate: [ConsumerSaleCreateOrConnectWithoutAdjustedByInput!]
  createMany: ConsumerSaleCreateManyAdjustedByInputEnvelope
  connect: [ConsumerSaleWhereUniqueInput!]
}

input ConsumerSaleCreateWithoutAdjustedByInput {
  id: String
  channel: SaleChannel!
  status: SaleStatus!
  totalAmount: Float!
  adjustmentType: AdjustmentType
  createdAt: DateTime
  updatedAt: DateTime
  customer: CustomerCreateNestedOneWithoutSalesInput
  store: StoreCreateNestedOneWithoutCustomerSalesInput!
  biller: UserCreateNestedOneWithoutConsumerSaleInput!
  quotation: QuotationCreateNestedOneWithoutConsumerSaleInput
  items: ConsumerSaleItemCreateNestedManyWithoutSaleInput
  payments: ConsumerPaymentCreateNestedManyWithoutSaleInput
  receipt: ConsumerReceiptCreateNestedOneWithoutSaleInput
  SalesReturn: SalesReturnCreateNestedManyWithoutConsumerSaleInput
  CustomerProfile: CustomerProfileCreateNestedManyWithoutSalesInput
  SaleOrder: SaleOrderCreateNestedOneWithoutConsumerSaleInput!
}

input QuotationCreateNestedOneWithoutConsumerSaleInput {
  create: QuotationCreateWithoutConsumerSaleInput
  connectOrCreate: QuotationCreateOrConnectWithoutConsumerSaleInput
  connect: QuotationWhereUniqueInput
}

input QuotationCreateWithoutConsumerSaleInput {
  id: String
  type: SaleType!
  channel: SaleChannel!
  status: QuotationStatus
  totalAmount: Float!
  createdAt: DateTime
  updatedAt: DateTime
  store: StoreCreateNestedOneWithoutQuotationInput!
  biller: UserCreateNestedOneWithoutBillerQuotationInput
  consumer: CustomerCreateNestedOneWithoutQuotationInput
  reseller: UserCreateNestedOneWithoutResellerQuotationInput
  items: QuotationItemCreateNestedManyWithoutQuotationInput
  sale: ResellerSaleCreateNestedOneWithoutQuotationInput
  SaleOrder: SaleOrderCreateNestedOneWithoutQuotationInput
}

input StoreCreateNestedOneWithoutQuotationInput {
  create: StoreCreateWithoutQuotationInput
  connectOrCreate: StoreCreateOrConnectWithoutQuotationInput
  connect: StoreWhereUniqueInput
}

input StoreCreateWithoutQuotationInput {
  id: String
  name: String!
  location: String
  isMain: Boolean
  createdAt: DateTime
  updatedAt: DateTime
  manager: UserCreateNestedOneWithoutStoreInput!
  stocks: StockCreateNestedManyWithoutStoreInput
  receipts: StockReceiptBatchCreateNestedManyWithoutStoreInput
  transfersOut: StockTransferCreateNestedManyWithoutFromStoreInput
  transfersIn: StockTransferCreateNestedManyWithoutToStoreInput
  customerSales: ConsumerSaleCreateNestedManyWithoutStoreInput
  salesReturns: SalesReturnCreateNestedManyWithoutStoreInput
  resellerSales: ResellerSaleCreateNestedManyWithoutStoreInput
  movements: StockMovementCreateNestedManyWithoutStoreInput
  Customer: CustomerCreateNestedManyWithoutPreferredStoreInput
  CustomerProfile: CustomerProfileCreateNestedManyWithoutPreferredStoreInput
  PurchaseRequisition: PurchaseRequisitionCreateNestedManyWithoutStoreInput
  purchaseOrders: PurchaseOrderCreateNestedManyWithoutStoreInput
  InvoiceImport: InvoiceImportCreateNestedManyWithoutStoreInput
}

input ResellerSaleCreateNestedManyWithoutStoreInput {
  create: [ResellerSaleCreateWithoutStoreInput!]
  connectOrCreate: [ResellerSaleCreateOrConnectWithoutStoreInput!]
  createMany: ResellerSaleCreateManyStoreInputEnvelope
  connect: [ResellerSaleWhereUniqueInput!]
}

input ResellerSaleCreateWithoutStoreInput {
  id: String
  status: SaleStatus!
  totalAmount: Float!
  approvedAt: DateTime
  createdAt: DateTime
  updatedAt: DateTime
  reseller: UserCreateNestedOneWithoutResellerSalesInput!
  biller: UserCreateNestedOneWithoutBillerResellerSaleInput!
  approvedBy: UserCreateNestedOneWithoutResellerSaleInput
  quotation: QuotationCreateNestedOneWithoutSaleInput
  items: ResellerSaleItemCreateNestedManyWithoutSaleInput
  payments: ResellerPaymentCreateNestedManyWithoutSaleInput
  SalesReturn: SalesReturnCreateNestedManyWithoutResellerSaleInput
  SaleOrder: SaleOrderCreateNestedOneWithoutResellerSaleInput!
}

input UserCreateNestedOneWithoutResellerSalesInput {
  create: UserCreateWithoutResellerSalesInput
  connectOrCreate: UserCreateOrConnectWithoutResellerSalesInput
  connect: UserWhereUniqueInput
}

input UserCreateWithoutResellerSalesInput {
  id: String
  email: String!
  passwordHash: String!
  tier: UserTier
  referralCode: String
  referredBy: String
  createdAt: DateTime
  updatedAt: DateTime
  isEmailVerified: Boolean
  emailVerificationToken: String
  emailVerificationTokenExpiry: DateTime
  role: RoleCreateNestedOneWithoutUsersInput!
  resellerProfile: ResellerProfileCreateNestedOneWithoutUserInput
  customerProfile: CustomerProfileCreateNestedOneWithoutUserInput
  resellerPaymentsMade: ResellerPaymentCreateNestedManyWithoutResellerInput
  resellerPaymentsReceived: ResellerPaymentCreateNestedManyWithoutReceivedByInput
  adminLogs: AdminActionLogCreateNestedManyWithoutAdminInput
  supportMessages: SupportMessageCreateNestedManyWithoutUserInput
  ConsumerSale: ConsumerSaleCreateNestedManyWithoutBillerInput
  ConsumerSaleAdjustedBys: ConsumerSaleCreateNestedManyWithoutAdjustedByInput
  StockReceiptBatchReceivedBys: StockReceiptBatchCreateNestedManyWithoutReceivedByInput
  StockReceiptBatchConfirmedBys: StockReceiptBatchCreateNestedManyWithoutConfirmedByInput
  StockTransferRequests: StockTransferCreateNestedManyWithoutRequestedByInput
  StockTransferApprovals: StockTransferCreateNestedManyWithoutApprovedByInput
  Store: StoreCreateNestedManyWithoutManagerInput
  ConsumerReceipt: ConsumerReceiptCreateNestedManyWithoutIssuedByInput
  BillerResellerSale: ResellerSaleCreateNestedManyWithoutBillerInput
  ResellerSale: ResellerSaleCreateNestedManyWithoutApprovedByInput
  SalesReturnReceivers: SalesReturnCreateNestedManyWithoutReceivedByInput
  SalesReturnRequesters: SalesReturnCreateNestedManyWithoutReturnedByInput
  SalesReturn: SalesReturnCreateNestedManyWithoutApprovedByInput
  PurchaseReturnInitiators: PurchaseReturnCreateNestedManyWithoutInitiatedByInput
  PurchaseReturnApprovers: PurchaseReturnCreateNestedManyWithoutApprovedByInput
  Payment: PaymentCreateNestedManyWithoutReceivedByInput
  ResellerTierHistory: ResellerTierHistoryCreateNestedManyWithoutUserInput
  ResellerTierHistoryChangedBys: ResellerTierHistoryCreateNestedManyWithoutAdminInput
  ResellerProfile: ResellerProfileCreateNestedManyWithoutBillerInput
  RequestedResellers: ResellerProfileCreateNestedManyWithoutRequestedBillerInput
  Notification: NotificationCreateNestedManyWithoutUserInput
  Fulfillment: FulfillmentCreateNestedManyWithoutDeliveryPersonnelInput
  BillerQuotation: QuotationCreateNestedManyWithoutBillerInput
  ResellerQuotation: QuotationCreateNestedManyWithoutResellerInput
  PurchaseRequisition: PurchaseRequisitionCreateNestedManyWithoutRequestedByInput
  Supplier: SupplierCreateNestedManyWithoutUserInput
}

input StockReceiptBatchCreateNestedManyWithoutConfirmedByInput {
  create: [StockReceiptBatchCreateWithoutConfirmedByInput!]
  connectOrCreate: [StockReceiptBatchCreateOrConnectWithoutConfirmedByInput!]
  createMany: StockReceiptBatchCreateManyConfirmedByInputEnvelope
  connect: [StockReceiptBatchWhereUniqueInput!]
}

input StockReceiptBatchCreateWithoutConfirmedByInput {
  id: String
  purchaseOrderId: String!
  waybillUrl: String
  receivedAt: DateTime
  store: StoreCreateNestedOneWithoutReceiptsInput!
  receivedBy: UserCreateNestedOneWithoutStockReceiptBatchReceivedBysInput!
  items: StockReceiptBatchItemCreateNestedManyWithoutBatchInput
  purchaseReturns: PurchaseReturnItemCreateNestedManyWithoutBatchInput
  PurchaseOrder: PurchaseOrderCreateNestedManyWithoutReceiptsInput
}

input StockReceiptBatchItemCreateNestedManyWithoutBatchInput {
  create: [StockReceiptBatchItemCreateWithoutBatchInput!]
  connectOrCreate: [StockReceiptBatchItemCreateOrConnectWithoutBatchInput!]
  createMany: StockReceiptBatchItemCreateManyBatchInputEnvelope
  connect: [StockReceiptBatchItemWhereUniqueInput!]
}

input StockReceiptBatchItemCreateWithoutBatchInput {
  id: String
  quantity: Int!
  productVariant: ProductVariantCreateNestedOneWithoutReceiptItemsInput!
}

input ProductVariantCreateNestedOneWithoutReceiptItemsInput {
  create: ProductVariantCreateWithoutReceiptItemsInput
  connectOrCreate: ProductVariantCreateOrConnectWithoutReceiptItemsInput
  connect: ProductVariantWhereUniqueInput
}

input ProductVariantCreateWithoutReceiptItemsInput {
  id: String
  name: String
  size: String!
  concentration: String!
  packaging: String!
  barcode: String
  price: Float!
  resellerPrice: Float!
  createdAt: DateTime
  updatedAt: DateTime
  product: ProductCreateNestedOneWithoutVariantsInput
  stockItems: StockCreateNestedManyWithoutProductVariantInput
  quotationItems: QuotationItemCreateNestedManyWithoutProductVariantInput
  resellerItems: ResellerSaleItemCreateNestedManyWithoutProductVariantInput
  consumerItems: ConsumerSaleItemCreateNestedManyWithoutProductVariantInput
  returnItems: SalesReturnItemCreateNestedManyWithoutProductVariantInput
  purchaseReturnItems: PurchaseReturnItemCreateNestedManyWithoutProductVariantInput
  transferItems: StockTransferItemCreateNestedManyWithoutProductVariantInput
  stats: ProductSalesStatsCreateNestedOneWithoutProductVariantInput
  PurchaseOrderItem: PurchaseOrderItemCreateNestedManyWithoutProductVariantInput
  StockMovementItem: StockMovementItemCreateNestedManyWithoutProductVariantInput
  PurchaseRequisitionItem: PurchaseRequisitionItemCreateNestedManyWithoutProductVariantInput
  SupplierCatalog: SupplierCatalogCreateNestedManyWithoutProductVariantInput
  SupplierQuoteItem: SupplierQuoteItemCreateNestedManyWithoutProductVariantInput
  ProductVariantTierPrice: ProductVariantTierPriceCreateNestedManyWithoutVariantInput
  facets: VariantFacetValueCreateNestedManyWithoutVariantInput
}

input QuotationItemCreateNestedManyWithoutProductVariantInput {
  create: [QuotationItemCreateWithoutProductVariantInput!]
  connectOrCreate: [QuotationItemCreateOrConnectWithoutProductVariantInput!]
  createMany: QuotationItemCreateManyProductVariantInputEnvelope
  connect: [QuotationItemWhereUniqueInput!]
}

input QuotationItemCreateWithoutProductVariantInput {
  id: String
  quantity: Int!
  unitPrice: Float!
  quotation: QuotationCreateNestedOneWithoutItemsInput!
}

input QuotationCreateNestedOneWithoutItemsInput {
  create: QuotationCreateWithoutItemsInput
  connectOrCreate: QuotationCreateOrConnectWithoutItemsInput
  connect: QuotationWhereUniqueInput
}

input QuotationCreateWithoutItemsInput {
  id: String
  type: SaleType!
  channel: SaleChannel!
  status: QuotationStatus
  totalAmount: Float!
  createdAt: DateTime
  updatedAt: DateTime
  store: StoreCreateNestedOneWithoutQuotationInput!
  biller: UserCreateNestedOneWithoutBillerQuotationInput
  consumer: CustomerCreateNestedOneWithoutQuotationInput
  reseller: UserCreateNestedOneWithoutResellerQuotationInput
  sale: ResellerSaleCreateNestedOneWithoutQuotationInput
  SaleOrder: SaleOrderCreateNestedOneWithoutQuotationInput
  ConsumerSale: ConsumerSaleCreateNestedManyWithoutQuotationInput
}

input UserCreateNestedOneWithoutBillerQuotationInput {
  create: UserCreateWithoutBillerQuotationInput
  connectOrCreate: UserCreateOrConnectWithoutBillerQuotationInput
  connect: UserWhereUniqueInput
}

input UserCreateWithoutBillerQuotationInput {
  id: String
  email: String!
  passwordHash: String!
  tier: UserTier
  referralCode: String
  referredBy: String
  createdAt: DateTime
  updatedAt: DateTime
  isEmailVerified: Boolean
  emailVerificationToken: String
  emailVerificationTokenExpiry: DateTime
  role: RoleCreateNestedOneWithoutUsersInput!
  resellerProfile: ResellerProfileCreateNestedOneWithoutUserInput
  customerProfile: CustomerProfileCreateNestedOneWithoutUserInput
  resellerPaymentsMade: ResellerPaymentCreateNestedManyWithoutResellerInput
  resellerPaymentsReceived: ResellerPaymentCreateNestedManyWithoutReceivedByInput
  adminLogs: AdminActionLogCreateNestedManyWithoutAdminInput
  supportMessages: SupportMessageCreateNestedManyWithoutUserInput
  ConsumerSale: ConsumerSaleCreateNestedManyWithoutBillerInput
  ConsumerSaleAdjustedBys: ConsumerSaleCreateNestedManyWithoutAdjustedByInput
  StockReceiptBatchReceivedBys: StockReceiptBatchCreateNestedManyWithoutReceivedByInput
  StockReceiptBatchConfirmedBys: StockReceiptBatchCreateNestedManyWithoutConfirmedByInput
  StockTransferRequests: StockTransferCreateNestedManyWithoutRequestedByInput
  StockTransferApprovals: StockTransferCreateNestedManyWithoutApprovedByInput
  Store: StoreCreateNestedManyWithoutManagerInput
  ConsumerReceipt: ConsumerReceiptCreateNestedManyWithoutIssuedByInput
  ResellerSales: ResellerSaleCreateNestedManyWithoutResellerInput
  BillerResellerSale: ResellerSaleCreateNestedManyWithoutBillerInput
  ResellerSale: ResellerSaleCreateNestedManyWithoutApprovedByInput
  SalesReturnReceivers: SalesReturnCreateNestedManyWithoutReceivedByInput
  SalesReturnRequesters: SalesReturnCreateNestedManyWithoutReturnedByInput
  SalesReturn: SalesReturnCreateNestedManyWithoutApprovedByInput
  PurchaseReturnInitiators: PurchaseReturnCreateNestedManyWithoutInitiatedByInput
  PurchaseReturnApprovers: PurchaseReturnCreateNestedManyWithoutApprovedByInput
  Payment: PaymentCreateNestedManyWithoutReceivedByInput
  ResellerTierHistory: ResellerTierHistoryCreateNestedManyWithoutUserInput
  ResellerTierHistoryChangedBys: ResellerTierHistoryCreateNestedManyWithoutAdminInput
  ResellerProfile: ResellerProfileCreateNestedManyWithoutBillerInput
  RequestedResellers: ResellerProfileCreateNestedManyWithoutRequestedBillerInput
  Notification: NotificationCreateNestedManyWithoutUserInput
  Fulfillment: FulfillmentCreateNestedManyWithoutDeliveryPersonnelInput
  ResellerQuotation: QuotationCreateNestedManyWithoutResellerInput
  PurchaseRequisition: PurchaseRequisitionCreateNestedManyWithoutRequestedByInput
  Supplier: SupplierCreateNestedManyWithoutUserInput
}

input StockTransferCreateNestedManyWithoutRequestedByInput {
  create: [StockTransferCreateWithoutRequestedByInput!]
  connectOrCreate: [StockTransferCreateOrConnectWithoutRequestedByInput!]
  createMany: StockTransferCreateManyRequestedByInputEnvelope
  connect: [StockTransferWhereUniqueInput!]
}

input StockTransferCreateWithoutRequestedByInput {
  id: String
  status: TransferStatus!
  createdAt: DateTime
  fromStore: StoreCreateNestedOneWithoutTransfersOutInput!
  toStore: StoreCreateNestedOneWithoutTransfersInInput!
  approvedBy: UserCreateNestedOneWithoutStockTransferApprovalsInput!
  items: StockTransferItemCreateNestedManyWithoutTransferInput
}

input UserCreateNestedOneWithoutStockTransferApprovalsInput {
  create: UserCreateWithoutStockTransferApprovalsInput
  connectOrCreate: UserCreateOrConnectWithoutStockTransferApprovalsInput
  connect: UserWhereUniqueInput
}

input UserCreateWithoutStockTransferApprovalsInput {
  id: String
  email: String!
  passwordHash: String!
  tier: UserTier
  referralCode: String
  referredBy: String
  createdAt: DateTime
  updatedAt: DateTime
  isEmailVerified: Boolean
  emailVerificationToken: String
  emailVerificationTokenExpiry: DateTime
  role: RoleCreateNestedOneWithoutUsersInput!
  resellerProfile: ResellerProfileCreateNestedOneWithoutUserInput
  customerProfile: CustomerProfileCreateNestedOneWithoutUserInput
  resellerPaymentsMade: ResellerPaymentCreateNestedManyWithoutResellerInput
  resellerPaymentsReceived: ResellerPaymentCreateNestedManyWithoutReceivedByInput
  adminLogs: AdminActionLogCreateNestedManyWithoutAdminInput
  supportMessages: SupportMessageCreateNestedManyWithoutUserInput
  ConsumerSale: ConsumerSaleCreateNestedManyWithoutBillerInput
  ConsumerSaleAdjustedBys: ConsumerSaleCreateNestedManyWithoutAdjustedByInput
  StockReceiptBatchReceivedBys: StockReceiptBatchCreateNestedManyWithoutReceivedByInput
  StockReceiptBatchConfirmedBys: StockReceiptBatchCreateNestedManyWithoutConfirmedByInput
  StockTransferRequests: StockTransferCreateNestedManyWithoutRequestedByInput
  Store: StoreCreateNestedManyWithoutManagerInput
  ConsumerReceipt: ConsumerReceiptCreateNestedManyWithoutIssuedByInput
  ResellerSales: ResellerSaleCreateNestedManyWithoutResellerInput
  BillerResellerSale: ResellerSaleCreateNestedManyWithoutBillerInput
  ResellerSale: ResellerSaleCreateNestedManyWithoutApprovedByInput
  SalesReturnReceivers: SalesReturnCreateNestedManyWithoutReceivedByInput
  SalesReturnRequesters: SalesReturnCreateNestedManyWithoutReturnedByInput
  SalesReturn: SalesReturnCreateNestedManyWithoutApprovedByInput
  PurchaseReturnInitiators: PurchaseReturnCreateNestedManyWithoutInitiatedByInput
  PurchaseReturnApprovers: PurchaseReturnCreateNestedManyWithoutApprovedByInput
  Payment: PaymentCreateNestedManyWithoutReceivedByInput
  ResellerTierHistory: ResellerTierHistoryCreateNestedManyWithoutUserInput
  ResellerTierHistoryChangedBys: ResellerTierHistoryCreateNestedManyWithoutAdminInput
  ResellerProfile: ResellerProfileCreateNestedManyWithoutBillerInput
  RequestedResellers: ResellerProfileCreateNestedManyWithoutRequestedBillerInput
  Notification: NotificationCreateNestedManyWithoutUserInput
  Fulfillment: FulfillmentCreateNestedManyWithoutDeliveryPersonnelInput
  BillerQuotation: QuotationCreateNestedManyWithoutBillerInput
  ResellerQuotation: QuotationCreateNestedManyWithoutResellerInput
  PurchaseRequisition: PurchaseRequisitionCreateNestedManyWithoutRequestedByInput
  Supplier: SupplierCreateNestedManyWithoutUserInput
}

input StoreCreateNestedManyWithoutManagerInput {
  create: [StoreCreateWithoutManagerInput!]
  connectOrCreate: [StoreCreateOrConnectWithoutManagerInput!]
  createMany: StoreCreateManyManagerInputEnvelope
  connect: [StoreWhereUniqueInput!]
}

input StoreCreateWithoutManagerInput {
  id: String
  name: String!
  location: String
  isMain: Boolean
  createdAt: DateTime
  updatedAt: DateTime
  stocks: StockCreateNestedManyWithoutStoreInput
  receipts: StockReceiptBatchCreateNestedManyWithoutStoreInput
  transfersOut: StockTransferCreateNestedManyWithoutFromStoreInput
  transfersIn: StockTransferCreateNestedManyWithoutToStoreInput
  customerSales: ConsumerSaleCreateNestedManyWithoutStoreInput
  salesReturns: SalesReturnCreateNestedManyWithoutStoreInput
  resellerSales: ResellerSaleCreateNestedManyWithoutStoreInput
  movements: StockMovementCreateNestedManyWithoutStoreInput
  Customer: CustomerCreateNestedManyWithoutPreferredStoreInput
  CustomerProfile: CustomerProfileCreateNestedManyWithoutPreferredStoreInput
  Quotation: QuotationCreateNestedManyWithoutStoreInput
  PurchaseRequisition: PurchaseRequisitionCreateNestedManyWithoutStoreInput
  purchaseOrders: PurchaseOrderCreateNestedManyWithoutStoreInput
  InvoiceImport: InvoiceImportCreateNestedManyWithoutStoreInput
}

input StockMovementCreateNestedManyWithoutStoreInput {
  create: [StockMovementCreateWithoutStoreInput!]
  connectOrCreate: [StockMovementCreateOrConnectWithoutStoreInput!]
  createMany: StockMovementCreateManyStoreInputEnvelope
  connect: [StockMovementWhereUniqueInput!]
}

input StockMovementCreateWithoutStoreInput {
  id: String
  direction: MovementDirection!
  movementType: MovementType!
  referenceEntity: String!
  referenceId: String!
  createdAt: DateTime
  items: StockMovementItemCreateNestedManyWithoutMovementInput
}

input StockMovementItemCreateNestedManyWithoutMovementInput {
  create: [StockMovementItemCreateWithoutMovementInput!]
  connectOrCreate: [StockMovementItemCreateOrConnectWithoutMovementInput!]
  createMany: StockMovementItemCreateManyMovementInputEnvelope
  connect: [StockMovementItemWhereUniqueInput!]
}

input StockMovementItemCreateWithoutMovementInput {
  id: String
  quantity: Int!
  productVariant: ProductVariantCreateNestedOneWithoutStockMovementItemInput!
}

input ProductVariantCreateNestedOneWithoutStockMovementItemInput {
  create: ProductVariantCreateWithoutStockMovementItemInput
  connectOrCreate: ProductVariantCreateOrConnectWithoutStockMovementItemInput
  connect: ProductVariantWhereUniqueInput
}

input ProductVariantCreateWithoutStockMovementItemInput {
  id: String
  name: String
  size: String!
  concentration: String!
  packaging: String!
  barcode: String
  price: Float!
  resellerPrice: Float!
  createdAt: DateTime
  updatedAt: DateTime
  product: ProductCreateNestedOneWithoutVariantsInput
  stockItems: StockCreateNestedManyWithoutProductVariantInput
  receiptItems: StockReceiptBatchItemCreateNestedManyWithoutProductVariantInput
  quotationItems: QuotationItemCreateNestedManyWithoutProductVariantInput
  resellerItems: ResellerSaleItemCreateNestedManyWithoutProductVariantInput
  consumerItems: ConsumerSaleItemCreateNestedManyWithoutProductVariantInput
  returnItems: SalesReturnItemCreateNestedManyWithoutProductVariantInput
  purchaseReturnItems: PurchaseReturnItemCreateNestedManyWithoutProductVariantInput
  transferItems: StockTransferItemCreateNestedManyWithoutProductVariantInput
  stats: ProductSalesStatsCreateNestedOneWithoutProductVariantInput
  PurchaseOrderItem: PurchaseOrderItemCreateNestedManyWithoutProductVariantInput
  PurchaseRequisitionItem: PurchaseRequisitionItemCreateNestedManyWithoutProductVariantInput
  SupplierCatalog: SupplierCatalogCreateNestedManyWithoutProductVariantInput
  SupplierQuoteItem: SupplierQuoteItemCreateNestedManyWithoutProductVariantInput
  ProductVariantTierPrice: ProductVariantTierPriceCreateNestedManyWithoutVariantInput
  facets: VariantFacetValueCreateNestedManyWithoutVariantInput
}

input ResellerSaleItemCreateNestedManyWithoutProductVariantInput {
  create: [ResellerSaleItemCreateWithoutProductVariantInput!]
  connectOrCreate: [ResellerSaleItemCreateOrConnectWithoutProductVariantInput!]
  createMany: ResellerSaleItemCreateManyProductVariantInputEnvelope
  connect: [ResellerSaleItemWhereUniqueInput!]
}

input ResellerSaleItemCreateWithoutProductVariantInput {
  id: String
  quantity: Int!
  unitPrice: Float!
  sale: ResellerSaleCreateNestedOneWithoutItemsInput!
}

input ResellerSaleCreateNestedOneWithoutItemsInput {
  create: ResellerSaleCreateWithoutItemsInput
  connectOrCreate: ResellerSaleCreateOrConnectWithoutItemsInput
  connect: ResellerSaleWhereUniqueInput
}

input ResellerSaleCreateWithoutItemsInput {
  id: String
  status: SaleStatus!
  totalAmount: Float!
  approvedAt: DateTime
  createdAt: DateTime
  updatedAt: DateTime
  reseller: UserCreateNestedOneWithoutResellerSalesInput!
  biller: UserCreateNestedOneWithoutBillerResellerSaleInput!
  approvedBy: UserCreateNestedOneWithoutResellerSaleInput
  quotation: QuotationCreateNestedOneWithoutSaleInput
  store: StoreCreateNestedOneWithoutResellerSalesInput!
  payments: ResellerPaymentCreateNestedManyWithoutSaleInput
  SalesReturn: SalesReturnCreateNestedManyWithoutResellerSaleInput
  SaleOrder: SaleOrderCreateNestedOneWithoutResellerSaleInput!
}

input UserCreateNestedOneWithoutBillerResellerSaleInput {
  create: UserCreateWithoutBillerResellerSaleInput
  connectOrCreate: UserCreateOrConnectWithoutBillerResellerSaleInput
  connect: UserWhereUniqueInput
}

input UserCreateWithoutBillerResellerSaleInput {
  id: String
  email: String!
  passwordHash: String!
  tier: UserTier
  referralCode: String
  referredBy: String
  createdAt: DateTime
  updatedAt: DateTime
  isEmailVerified: Boolean
  emailVerificationToken: String
  emailVerificationTokenExpiry: DateTime
  role: RoleCreateNestedOneWithoutUsersInput!
  resellerProfile: ResellerProfileCreateNestedOneWithoutUserInput
  customerProfile: CustomerProfileCreateNestedOneWithoutUserInput
  resellerPaymentsMade: ResellerPaymentCreateNestedManyWithoutResellerInput
  resellerPaymentsReceived: ResellerPaymentCreateNestedManyWithoutReceivedByInput
  adminLogs: AdminActionLogCreateNestedManyWithoutAdminInput
  supportMessages: SupportMessageCreateNestedManyWithoutUserInput
  ConsumerSale: ConsumerSaleCreateNestedManyWithoutBillerInput
  ConsumerSaleAdjustedBys: ConsumerSaleCreateNestedManyWithoutAdjustedByInput
  StockReceiptBatchReceivedBys: StockReceiptBatchCreateNestedManyWithoutReceivedByInput
  StockReceiptBatchConfirmedBys: StockReceiptBatchCreateNestedManyWithoutConfirmedByInput
  StockTransferRequests: StockTransferCreateNestedManyWithoutRequestedByInput
  StockTransferApprovals: StockTransferCreateNestedManyWithoutApprovedByInput
  Store: StoreCreateNestedManyWithoutManagerInput
  ConsumerReceipt: ConsumerReceiptCreateNestedManyWithoutIssuedByInput
  ResellerSales: ResellerSaleCreateNestedManyWithoutResellerInput
  ResellerSale: ResellerSaleCreateNestedManyWithoutApprovedByInput
  SalesReturnReceivers: SalesReturnCreateNestedManyWithoutReceivedByInput
  SalesReturnRequesters: SalesReturnCreateNestedManyWithoutReturnedByInput
  SalesReturn: SalesReturnCreateNestedManyWithoutApprovedByInput
  PurchaseReturnInitiators: PurchaseReturnCreateNestedManyWithoutInitiatedByInput
  PurchaseReturnApprovers: PurchaseReturnCreateNestedManyWithoutApprovedByInput
  Payment: PaymentCreateNestedManyWithoutReceivedByInput
  ResellerTierHistory: ResellerTierHistoryCreateNestedManyWithoutUserInput
  ResellerTierHistoryChangedBys: ResellerTierHistoryCreateNestedManyWithoutAdminInput
  ResellerProfile: ResellerProfileCreateNestedManyWithoutBillerInput
  RequestedResellers: ResellerProfileCreateNestedManyWithoutRequestedBillerInput
  Notification: NotificationCreateNestedManyWithoutUserInput
  Fulfillment: FulfillmentCreateNestedManyWithoutDeliveryPersonnelInput
  BillerQuotation: QuotationCreateNestedManyWithoutBillerInput
  ResellerQuotation: QuotationCreateNestedManyWithoutResellerInput
  PurchaseRequisition: PurchaseRequisitionCreateNestedManyWithoutRequestedByInput
  Supplier: SupplierCreateNestedManyWithoutUserInput
}

input StockTransferCreateNestedManyWithoutApprovedByInput {
  create: [StockTransferCreateWithoutApprovedByInput!]
  connectOrCreate: [StockTransferCreateOrConnectWithoutApprovedByInput!]
  createMany: StockTransferCreateManyApprovedByInputEnvelope
  connect: [StockTransferWhereUniqueInput!]
}

input StockTransferCreateWithoutApprovedByInput {
  id: String
  status: TransferStatus!
  createdAt: DateTime
  fromStore: StoreCreateNestedOneWithoutTransfersOutInput!
  toStore: StoreCreateNestedOneWithoutTransfersInInput!
  requestedBy: UserCreateNestedOneWithoutStockTransferRequestsInput!
  items: StockTransferItemCreateNestedManyWithoutTransferInput
}

input UserCreateNestedOneWithoutStockTransferRequestsInput {
  create: UserCreateWithoutStockTransferRequestsInput
  connectOrCreate: UserCreateOrConnectWithoutStockTransferRequestsInput
  connect: UserWhereUniqueInput
}

input UserCreateWithoutStockTransferRequestsInput {
  id: String
  email: String!
  passwordHash: String!
  tier: UserTier
  referralCode: String
  referredBy: String
  createdAt: DateTime
  updatedAt: DateTime
  isEmailVerified: Boolean
  emailVerificationToken: String
  emailVerificationTokenExpiry: DateTime
  role: RoleCreateNestedOneWithoutUsersInput!
  resellerProfile: ResellerProfileCreateNestedOneWithoutUserInput
  customerProfile: CustomerProfileCreateNestedOneWithoutUserInput
  resellerPaymentsMade: ResellerPaymentCreateNestedManyWithoutResellerInput
  resellerPaymentsReceived: ResellerPaymentCreateNestedManyWithoutReceivedByInput
  adminLogs: AdminActionLogCreateNestedManyWithoutAdminInput
  supportMessages: SupportMessageCreateNestedManyWithoutUserInput
  ConsumerSale: ConsumerSaleCreateNestedManyWithoutBillerInput
  ConsumerSaleAdjustedBys: ConsumerSaleCreateNestedManyWithoutAdjustedByInput
  StockReceiptBatchReceivedBys: StockReceiptBatchCreateNestedManyWithoutReceivedByInput
  StockReceiptBatchConfirmedBys: StockReceiptBatchCreateNestedManyWithoutConfirmedByInput
  StockTransferApprovals: StockTransferCreateNestedManyWithoutApprovedByInput
  Store: StoreCreateNestedManyWithoutManagerInput
  ConsumerReceipt: ConsumerReceiptCreateNestedManyWithoutIssuedByInput
  ResellerSales: ResellerSaleCreateNestedManyWithoutResellerInput
  BillerResellerSale: ResellerSaleCreateNestedManyWithoutBillerInput
  ResellerSale: ResellerSaleCreateNestedManyWithoutApprovedByInput
  SalesReturnReceivers: SalesReturnCreateNestedManyWithoutReceivedByInput
  SalesReturnRequesters: SalesReturnCreateNestedManyWithoutReturnedByInput
  SalesReturn: SalesReturnCreateNestedManyWithoutApprovedByInput
  PurchaseReturnInitiators: PurchaseReturnCreateNestedManyWithoutInitiatedByInput
  PurchaseReturnApprovers: PurchaseReturnCreateNestedManyWithoutApprovedByInput
  Payment: PaymentCreateNestedManyWithoutReceivedByInput
  ResellerTierHistory: ResellerTierHistoryCreateNestedManyWithoutUserInput
  ResellerTierHistoryChangedBys: ResellerTierHistoryCreateNestedManyWithoutAdminInput
  ResellerProfile: ResellerProfileCreateNestedManyWithoutBillerInput
  RequestedResellers: ResellerProfileCreateNestedManyWithoutRequestedBillerInput
  Notification: NotificationCreateNestedManyWithoutUserInput
  Fulfillment: FulfillmentCreateNestedManyWithoutDeliveryPersonnelInput
  BillerQuotation: QuotationCreateNestedManyWithoutBillerInput
  ResellerQuotation: QuotationCreateNestedManyWithoutResellerInput
  PurchaseRequisition: PurchaseRequisitionCreateNestedManyWithoutRequestedByInput
  Supplier: SupplierCreateNestedManyWithoutUserInput
}

input ConsumerReceiptCreateNestedManyWithoutIssuedByInput {
  create: [ConsumerReceiptCreateWithoutIssuedByInput!]
  connectOrCreate: [ConsumerReceiptCreateOrConnectWithoutIssuedByInput!]
  createMany: ConsumerReceiptCreateManyIssuedByInputEnvelope
  connect: [ConsumerReceiptWhereUniqueInput!]
}

input ConsumerReceiptCreateWithoutIssuedByInput {
  id: String
  issuedAt: DateTime
  receiptUrl: String
  sale: ConsumerSaleCreateNestedOneWithoutReceiptInput!
}

input ConsumerSaleCreateNestedOneWithoutReceiptInput {
  create: ConsumerSaleCreateWithoutReceiptInput
  connectOrCreate: ConsumerSaleCreateOrConnectWithoutReceiptInput
  connect: ConsumerSaleWhereUniqueInput
}

input ConsumerSaleCreateWithoutReceiptInput {
  id: String
  channel: SaleChannel!
  status: SaleStatus!
  totalAmount: Float!
  adjustmentType: AdjustmentType
  createdAt: DateTime
  updatedAt: DateTime
  customer: CustomerCreateNestedOneWithoutSalesInput
  store: StoreCreateNestedOneWithoutCustomerSalesInput!
  biller: UserCreateNestedOneWithoutConsumerSaleInput!
  adjustedBy: UserCreateNestedOneWithoutConsumerSaleAdjustedBysInput
  quotation: QuotationCreateNestedOneWithoutConsumerSaleInput
  items: ConsumerSaleItemCreateNestedManyWithoutSaleInput
  payments: ConsumerPaymentCreateNestedManyWithoutSaleInput
  SalesReturn: SalesReturnCreateNestedManyWithoutConsumerSaleInput
  CustomerProfile: CustomerProfileCreateNestedManyWithoutSalesInput
  SaleOrder: SaleOrderCreateNestedOneWithoutConsumerSaleInput!
}

input ConsumerSaleItemCreateNestedManyWithoutSaleInput {
  create: [ConsumerSaleItemCreateWithoutSaleInput!]
  connectOrCreate: [ConsumerSaleItemCreateOrConnectWithoutSaleInput!]
  createMany: ConsumerSaleItemCreateManySaleInputEnvelope
  connect: [ConsumerSaleItemWhereUniqueInput!]
}

input ConsumerSaleItemCreateWithoutSaleInput {
  id: String
  quantity: Int!
  unitPrice: Float!
  productVariant: ProductVariantCreateNestedOneWithoutConsumerItemsInput!
}

input ProductVariantCreateNestedOneWithoutConsumerItemsInput {
  create: ProductVariantCreateWithoutConsumerItemsInput
  connectOrCreate: ProductVariantCreateOrConnectWithoutConsumerItemsInput
  connect: ProductVariantWhereUniqueInput
}

input ProductVariantCreateWithoutConsumerItemsInput {
  id: String
  name: String
  size: String!
  concentration: String!
  packaging: String!
  barcode: String
  price: Float!
  resellerPrice: Float!
  createdAt: DateTime
  updatedAt: DateTime
  product: ProductCreateNestedOneWithoutVariantsInput
  stockItems: StockCreateNestedManyWithoutProductVariantInput
  receiptItems: StockReceiptBatchItemCreateNestedManyWithoutProductVariantInput
  quotationItems: QuotationItemCreateNestedManyWithoutProductVariantInput
  resellerItems: ResellerSaleItemCreateNestedManyWithoutProductVariantInput
  returnItems: SalesReturnItemCreateNestedManyWithoutProductVariantInput
  purchaseReturnItems: PurchaseReturnItemCreateNestedManyWithoutProductVariantInput
  transferItems: StockTransferItemCreateNestedManyWithoutProductVariantInput
  stats: ProductSalesStatsCreateNestedOneWithoutProductVariantInput
  PurchaseOrderItem: PurchaseOrderItemCreateNestedManyWithoutProductVariantInput
  StockMovementItem: StockMovementItemCreateNestedManyWithoutProductVariantInput
  PurchaseRequisitionItem: PurchaseRequisitionItemCreateNestedManyWithoutProductVariantInput
  SupplierCatalog: SupplierCatalogCreateNestedManyWithoutProductVariantInput
  SupplierQuoteItem: SupplierQuoteItemCreateNestedManyWithoutProductVariantInput
  ProductVariantTierPrice: ProductVariantTierPriceCreateNestedManyWithoutVariantInput
  facets: VariantFacetValueCreateNestedManyWithoutVariantInput
}

input SalesReturnItemCreateNestedManyWithoutProductVariantInput {
  create: [SalesReturnItemCreateWithoutProductVariantInput!]
  connectOrCreate: [SalesReturnItemCreateOrConnectWithoutProductVariantInput!]
  createMany: SalesReturnItemCreateManyProductVariantInputEnvelope
  connect: [SalesReturnItemWhereUniqueInput!]
}

input SalesReturnItemCreateWithoutProductVariantInput {
  id: String
  quantity: Int!
  condition: String!
  return: SalesReturnCreateNestedOneWithoutItemsInput!
}

input SalesReturnCreateNestedOneWithoutItemsInput {
  create: SalesReturnCreateWithoutItemsInput
  connectOrCreate: SalesReturnCreateOrConnectWithoutItemsInput
  connect: SalesReturnWhereUniqueInput
}

input SalesReturnCreateWithoutItemsInput {
  id: String
  type: SaleType!
  status: ReturnStatus!
  returnLocation: ReturnLocation!
  isApprovedLate: Boolean
  createdAt: DateTime
  updatedAt: DateTime
  consumerSale: ConsumerSaleCreateNestedOneWithoutSalesReturnInput
  resellerSale: ResellerSaleCreateNestedOneWithoutSalesReturnInput
  returnedBy: UserCreateNestedOneWithoutSalesReturnRequestersInput!
  receivedBy: UserCreateNestedOneWithoutSalesReturnReceiversInput!
  approvedBy: UserCreateNestedOneWithoutSalesReturnInput
  store: StoreCreateNestedOneWithoutSalesReturnsInput!
}

input ResellerSaleCreateNestedOneWithoutSalesReturnInput {
  create: ResellerSaleCreateWithoutSalesReturnInput
  connectOrCreate: ResellerSaleCreateOrConnectWithoutSalesReturnInput
  connect: ResellerSaleWhereUniqueInput
}

input ResellerSaleCreateWithoutSalesReturnInput {
  id: String
  status: SaleStatus!
  totalAmount: Float!
  approvedAt: DateTime
  createdAt: DateTime
  updatedAt: DateTime
  reseller: UserCreateNestedOneWithoutResellerSalesInput!
  biller: UserCreateNestedOneWithoutBillerResellerSaleInput!
  approvedBy: UserCreateNestedOneWithoutResellerSaleInput
  quotation: QuotationCreateNestedOneWithoutSaleInput
  store: StoreCreateNestedOneWithoutResellerSalesInput!
  items: ResellerSaleItemCreateNestedManyWithoutSaleInput
  payments: ResellerPaymentCreateNestedManyWithoutSaleInput
  SaleOrder: SaleOrderCreateNestedOneWithoutResellerSaleInput!
}

input UserCreateNestedOneWithoutResellerSaleInput {
  create: UserCreateWithoutResellerSaleInput
  connectOrCreate: UserCreateOrConnectWithoutResellerSaleInput
  connect: UserWhereUniqueInput
}

input UserCreateWithoutResellerSaleInput {
  id: String
  email: String!
  passwordHash: String!
  tier: UserTier
  referralCode: String
  referredBy: String
  createdAt: DateTime
  updatedAt: DateTime
  isEmailVerified: Boolean
  emailVerificationToken: String
  emailVerificationTokenExpiry: DateTime
  role: RoleCreateNestedOneWithoutUsersInput!
  resellerProfile: ResellerProfileCreateNestedOneWithoutUserInput
  customerProfile: CustomerProfileCreateNestedOneWithoutUserInput
  resellerPaymentsMade: ResellerPaymentCreateNestedManyWithoutResellerInput
  resellerPaymentsReceived: ResellerPaymentCreateNestedManyWithoutReceivedByInput
  adminLogs: AdminActionLogCreateNestedManyWithoutAdminInput
  supportMessages: SupportMessageCreateNestedManyWithoutUserInput
  ConsumerSale: ConsumerSaleCreateNestedManyWithoutBillerInput
  ConsumerSaleAdjustedBys: ConsumerSaleCreateNestedManyWithoutAdjustedByInput
  StockReceiptBatchReceivedBys: StockReceiptBatchCreateNestedManyWithoutReceivedByInput
  StockReceiptBatchConfirmedBys: StockReceiptBatchCreateNestedManyWithoutConfirmedByInput
  StockTransferRequests: StockTransferCreateNestedManyWithoutRequestedByInput
  StockTransferApprovals: StockTransferCreateNestedManyWithoutApprovedByInput
  Store: StoreCreateNestedManyWithoutManagerInput
  ConsumerReceipt: ConsumerReceiptCreateNestedManyWithoutIssuedByInput
  ResellerSales: ResellerSaleCreateNestedManyWithoutResellerInput
  BillerResellerSale: ResellerSaleCreateNestedManyWithoutBillerInput
  SalesReturnReceivers: SalesReturnCreateNestedManyWithoutReceivedByInput
  SalesReturnRequesters: SalesReturnCreateNestedManyWithoutReturnedByInput
  SalesReturn: SalesReturnCreateNestedManyWithoutApprovedByInput
  PurchaseReturnInitiators: PurchaseReturnCreateNestedManyWithoutInitiatedByInput
  PurchaseReturnApprovers: PurchaseReturnCreateNestedManyWithoutApprovedByInput
  Payment: PaymentCreateNestedManyWithoutReceivedByInput
  ResellerTierHistory: ResellerTierHistoryCreateNestedManyWithoutUserInput
  ResellerTierHistoryChangedBys: ResellerTierHistoryCreateNestedManyWithoutAdminInput
  ResellerProfile: ResellerProfileCreateNestedManyWithoutBillerInput
  RequestedResellers: ResellerProfileCreateNestedManyWithoutRequestedBillerInput
  Notification: NotificationCreateNestedManyWithoutUserInput
  Fulfillment: FulfillmentCreateNestedManyWithoutDeliveryPersonnelInput
  BillerQuotation: QuotationCreateNestedManyWithoutBillerInput
  ResellerQuotation: QuotationCreateNestedManyWithoutResellerInput
  PurchaseRequisition: PurchaseRequisitionCreateNestedManyWithoutRequestedByInput
  Supplier: SupplierCreateNestedManyWithoutUserInput
}

input ResellerSaleCreateNestedManyWithoutResellerInput {
  create: [ResellerSaleCreateWithoutResellerInput!]
  connectOrCreate: [ResellerSaleCreateOrConnectWithoutResellerInput!]
  createMany: ResellerSaleCreateManyResellerInputEnvelope
  connect: [ResellerSaleWhereUniqueInput!]
}

input ResellerSaleCreateWithoutResellerInput {
  id: String
  status: SaleStatus!
  totalAmount: Float!
  approvedAt: DateTime
  createdAt: DateTime
  updatedAt: DateTime
  biller: UserCreateNestedOneWithoutBillerResellerSaleInput!
  approvedBy: UserCreateNestedOneWithoutResellerSaleInput
  quotation: QuotationCreateNestedOneWithoutSaleInput
  store: StoreCreateNestedOneWithoutResellerSalesInput!
  items: ResellerSaleItemCreateNestedManyWithoutSaleInput
  payments: ResellerPaymentCreateNestedManyWithoutSaleInput
  SalesReturn: SalesReturnCreateNestedManyWithoutResellerSaleInput
  SaleOrder: SaleOrderCreateNestedOneWithoutResellerSaleInput!
}

input QuotationCreateNestedOneWithoutSaleInput {
  create: QuotationCreateWithoutSaleInput
  connectOrCreate: QuotationCreateOrConnectWithoutSaleInput
  connect: QuotationWhereUniqueInput
}

input QuotationCreateWithoutSaleInput {
  id: String
  type: SaleType!
  channel: SaleChannel!
  status: QuotationStatus
  totalAmount: Float!
  createdAt: DateTime
  updatedAt: DateTime
  store: StoreCreateNestedOneWithoutQuotationInput!
  biller: UserCreateNestedOneWithoutBillerQuotationInput
  consumer: CustomerCreateNestedOneWithoutQuotationInput
  reseller: UserCreateNestedOneWithoutResellerQuotationInput
  items: QuotationItemCreateNestedManyWithoutQuotationInput
  SaleOrder: SaleOrderCreateNestedOneWithoutQuotationInput
  ConsumerSale: ConsumerSaleCreateNestedManyWithoutQuotationInput
}

input CustomerCreateNestedOneWithoutQuotationInput {
  create: CustomerCreateWithoutQuotationInput
  connectOrCreate: CustomerCreateOrConnectWithoutQuotationInput
  connect: CustomerWhereUniqueInput
}

input CustomerCreateWithoutQuotationInput {
  id: String
  fullName: String!
  phone: String
  email: String
  preferredStore: StoreCreateNestedOneWithoutCustomerInput
  sales: ConsumerSaleCreateNestedManyWithoutCustomerInput
  CustomerPreferenceProfile: CustomerPreferenceProfileCreateNestedManyWithoutCustomerInput
}

input ConsumerSaleCreateNestedManyWithoutCustomerInput {
  create: [ConsumerSaleCreateWithoutCustomerInput!]
  connectOrCreate: [ConsumerSaleCreateOrConnectWithoutCustomerInput!]
  createMany: ConsumerSaleCreateManyCustomerInputEnvelope
  connect: [ConsumerSaleWhereUniqueInput!]
}

input ConsumerSaleCreateWithoutCustomerInput {
  id: String
  channel: SaleChannel!
  status: SaleStatus!
  totalAmount: Float!
  adjustmentType: AdjustmentType
  createdAt: DateTime
  updatedAt: DateTime
  store: StoreCreateNestedOneWithoutCustomerSalesInput!
  biller: UserCreateNestedOneWithoutConsumerSaleInput!
  adjustedBy: UserCreateNestedOneWithoutConsumerSaleAdjustedBysInput
  quotation: QuotationCreateNestedOneWithoutConsumerSaleInput
  items: ConsumerSaleItemCreateNestedManyWithoutSaleInput
  payments: ConsumerPaymentCreateNestedManyWithoutSaleInput
  receipt: ConsumerReceiptCreateNestedOneWithoutSaleInput
  SalesReturn: SalesReturnCreateNestedManyWithoutConsumerSaleInput
  CustomerProfile: CustomerProfileCreateNestedManyWithoutSalesInput
  SaleOrder: SaleOrderCreateNestedOneWithoutConsumerSaleInput!
}

input ConsumerPaymentCreateNestedManyWithoutSaleInput {
  create: [ConsumerPaymentCreateWithoutSaleInput!]
  connectOrCreate: [ConsumerPaymentCreateOrConnectWithoutSaleInput!]
  createMany: ConsumerPaymentCreateManySaleInputEnvelope
  connect: [ConsumerPaymentWhereUniqueInput!]
}

input ConsumerPaymentCreateWithoutSaleInput {
  id: String
  amount: Float!
  method: PaymentMethod!
  status: PaymentStatus
  receivedAt: DateTime
  reference: String
  saleOrder: SaleOrderCreateNestedOneWithoutConsumerPaymentInput!
}

input SaleOrderCreateNestedOneWithoutConsumerPaymentInput {
  create: SaleOrderCreateWithoutConsumerPaymentInput
  connectOrCreate: SaleOrderCreateOrConnectWithoutConsumerPaymentInput
  connect: SaleOrderWhereUniqueInput
}

input SaleOrderCreateWithoutConsumerPaymentInput {
  id: String
  storeId: String!
  billerId: String!
  type: SaleType!
  status: SaleStatus
  phase: OrderPhase
  totalAmount: Float!
  createdAt: DateTime
  updatedAt: DateTime
  resellerSaleid: String
  consumerSale: ConsumerSaleCreateNestedOneWithoutSaleOrderInput
  resellerSale: ResellerSaleCreateNestedOneWithoutSaleOrderInput
  fulfillment: FulfillmentCreateNestedOneWithoutSaleOrderInput
  quotation: QuotationCreateNestedOneWithoutSaleOrderInput
  ResellerPayment: ResellerPaymentCreateNestedManyWithoutSaleOrderInput
}

input ResellerSaleCreateNestedOneWithoutSaleOrderInput {
  create: ResellerSaleCreateWithoutSaleOrderInput
  connectOrCreate: ResellerSaleCreateOrConnectWithoutSaleOrderInput
  connect: ResellerSaleWhereUniqueInput
}

input ResellerSaleCreateWithoutSaleOrderInput {
  id: String
  status: SaleStatus!
  totalAmount: Float!
  approvedAt: DateTime
  createdAt: DateTime
  updatedAt: DateTime
  reseller: UserCreateNestedOneWithoutResellerSalesInput!
  biller: UserCreateNestedOneWithoutBillerResellerSaleInput!
  approvedBy: UserCreateNestedOneWithoutResellerSaleInput
  quotation: QuotationCreateNestedOneWithoutSaleInput
  store: StoreCreateNestedOneWithoutResellerSalesInput!
  items: ResellerSaleItemCreateNestedManyWithoutSaleInput
  payments: ResellerPaymentCreateNestedManyWithoutSaleInput
  SalesReturn: SalesReturnCreateNestedManyWithoutResellerSaleInput
}

input StoreCreateNestedOneWithoutResellerSalesInput {
  create: StoreCreateWithoutResellerSalesInput
  connectOrCreate: StoreCreateOrConnectWithoutResellerSalesInput
  connect: StoreWhereUniqueInput
}

input StoreCreateWithoutResellerSalesInput {
  id: String
  name: String!
  location: String
  isMain: Boolean
  createdAt: DateTime
  updatedAt: DateTime
  manager: UserCreateNestedOneWithoutStoreInput!
  stocks: StockCreateNestedManyWithoutStoreInput
  receipts: StockReceiptBatchCreateNestedManyWithoutStoreInput
  transfersOut: StockTransferCreateNestedManyWithoutFromStoreInput
  transfersIn: StockTransferCreateNestedManyWithoutToStoreInput
  customerSales: ConsumerSaleCreateNestedManyWithoutStoreInput
  salesReturns: SalesReturnCreateNestedManyWithoutStoreInput
  movements: StockMovementCreateNestedManyWithoutStoreInput
  Customer: CustomerCreateNestedManyWithoutPreferredStoreInput
  CustomerProfile: CustomerProfileCreateNestedManyWithoutPreferredStoreInput
  Quotation: QuotationCreateNestedManyWithoutStoreInput
  PurchaseRequisition: PurchaseRequisitionCreateNestedManyWithoutStoreInput
  purchaseOrders: PurchaseOrderCreateNestedManyWithoutStoreInput
  InvoiceImport: InvoiceImportCreateNestedManyWithoutStoreInput
}

input CustomerCreateNestedManyWithoutPreferredStoreInput {
  create: [CustomerCreateWithoutPreferredStoreInput!]
  connectOrCreate: [CustomerCreateOrConnectWithoutPreferredStoreInput!]
  createMany: CustomerCreateManyPreferredStoreInputEnvelope
  connect: [CustomerWhereUniqueInput!]
}

input CustomerCreateWithoutPreferredStoreInput {
  id: String
  fullName: String!
  phone: String
  email: String
  sales: ConsumerSaleCreateNestedManyWithoutCustomerInput
  CustomerPreferenceProfile: CustomerPreferenceProfileCreateNestedManyWithoutCustomerInput
  Quotation: QuotationCreateNestedManyWithoutConsumerInput
}

input CustomerPreferenceProfileCreateNestedManyWithoutCustomerInput {
  create: [CustomerPreferenceProfileCreateWithoutCustomerInput!]
  connectOrCreate: [CustomerPreferenceProfileCreateOrConnectWithoutCustomerInput!]
  createMany: CustomerPreferenceProfileCreateManyCustomerInputEnvelope
  connect: [CustomerPreferenceProfileWhereUniqueInput!]
}

input CustomerPreferenceProfileCreateWithoutCustomerInput {
  id: String
  frequentlyBoughtVariants: JSON!
  lastPurchaseDate: DateTime
  eligibleForDiscounts: Boolean
  CustomerProfile: CustomerProfileCreateNestedManyWithoutPreferencesInput
}

input CustomerProfileCreateNestedManyWithoutPreferencesInput {
  create: [CustomerProfileCreateWithoutPreferencesInput!]
  connectOrCreate: [CustomerProfileCreateOrConnectWithoutPreferencesInput!]
  createMany: CustomerProfileCreateManyPreferencesInputEnvelope
  connect: [CustomerProfileWhereUniqueInput!]
}

input CustomerProfileCreateWithoutPreferencesInput {
  fullName: String!
  phone: String
  email: String
  gender: String
  birthday: DateTime
  profileStatus: ProfileStatus
  requestedAt: DateTime
  activatedAt: DateTime
  isPhoneVerified: Boolean
  phoneVerificationCode: String
  phoneVerificationCodeExpiry: DateTime
  user: UserCreateNestedOneWithoutCustomerProfileInput!
  preferredStore: StoreCreateNestedOneWithoutCustomerProfileInput
  referredBy: CustomerProfileCreateNestedOneWithoutReferralsInput
  referrals: CustomerProfileCreateNestedManyWithoutReferredByInput
  sales: ConsumerSaleCreateNestedManyWithoutCustomerProfileInput
}

input UserCreateNestedOneWithoutCustomerProfileInput {
  create: UserCreateWithoutCustomerProfileInput
  connectOrCreate: UserCreateOrConnectWithoutCustomerProfileInput
  connect: UserWhereUniqueInput
}

input UserCreateWithoutCustomerProfileInput {
  id: String
  email: String!
  passwordHash: String!
  tier: UserTier
  referralCode: String
  referredBy: String
  createdAt: DateTime
  updatedAt: DateTime
  isEmailVerified: Boolean
  emailVerificationToken: String
  emailVerificationTokenExpiry: DateTime
  role: RoleCreateNestedOneWithoutUsersInput!
  resellerProfile: ResellerProfileCreateNestedOneWithoutUserInput
  resellerPaymentsMade: ResellerPaymentCreateNestedManyWithoutResellerInput
  resellerPaymentsReceived: ResellerPaymentCreateNestedManyWithoutReceivedByInput
  adminLogs: AdminActionLogCreateNestedManyWithoutAdminInput
  supportMessages: SupportMessageCreateNestedManyWithoutUserInput
  ConsumerSale: ConsumerSaleCreateNestedManyWithoutBillerInput
  ConsumerSaleAdjustedBys: ConsumerSaleCreateNestedManyWithoutAdjustedByInput
  StockReceiptBatchReceivedBys: StockReceiptBatchCreateNestedManyWithoutReceivedByInput
  StockReceiptBatchConfirmedBys: StockReceiptBatchCreateNestedManyWithoutConfirmedByInput
  StockTransferRequests: StockTransferCreateNestedManyWithoutRequestedByInput
  StockTransferApprovals: StockTransferCreateNestedManyWithoutApprovedByInput
  Store: StoreCreateNestedManyWithoutManagerInput
  ConsumerReceipt: ConsumerReceiptCreateNestedManyWithoutIssuedByInput
  ResellerSales: ResellerSaleCreateNestedManyWithoutResellerInput
  BillerResellerSale: ResellerSaleCreateNestedManyWithoutBillerInput
  ResellerSale: ResellerSaleCreateNestedManyWithoutApprovedByInput
  SalesReturnReceivers: SalesReturnCreateNestedManyWithoutReceivedByInput
  SalesReturnRequesters: SalesReturnCreateNestedManyWithoutReturnedByInput
  SalesReturn: SalesReturnCreateNestedManyWithoutApprovedByInput
  PurchaseReturnInitiators: PurchaseReturnCreateNestedManyWithoutInitiatedByInput
  PurchaseReturnApprovers: PurchaseReturnCreateNestedManyWithoutApprovedByInput
  Payment: PaymentCreateNestedManyWithoutReceivedByInput
  ResellerTierHistory: ResellerTierHistoryCreateNestedManyWithoutUserInput
  ResellerTierHistoryChangedBys: ResellerTierHistoryCreateNestedManyWithoutAdminInput
  ResellerProfile: ResellerProfileCreateNestedManyWithoutBillerInput
  RequestedResellers: ResellerProfileCreateNestedManyWithoutRequestedBillerInput
  Notification: NotificationCreateNestedManyWithoutUserInput
  Fulfillment: FulfillmentCreateNestedManyWithoutDeliveryPersonnelInput
  BillerQuotation: QuotationCreateNestedManyWithoutBillerInput
  ResellerQuotation: QuotationCreateNestedManyWithoutResellerInput
  PurchaseRequisition: PurchaseRequisitionCreateNestedManyWithoutRequestedByInput
  Supplier: SupplierCreateNestedManyWithoutUserInput
}

input ResellerSaleCreateNestedManyWithoutBillerInput {
  create: [ResellerSaleCreateWithoutBillerInput!]
  connectOrCreate: [ResellerSaleCreateOrConnectWithoutBillerInput!]
  createMany: ResellerSaleCreateManyBillerInputEnvelope
  connect: [ResellerSaleWhereUniqueInput!]
}

input ResellerSaleCreateWithoutBillerInput {
  id: String
  status: SaleStatus!
  totalAmount: Float!
  approvedAt: DateTime
  createdAt: DateTime
  updatedAt: DateTime
  reseller: UserCreateNestedOneWithoutResellerSalesInput!
  approvedBy: UserCreateNestedOneWithoutResellerSaleInput
  quotation: QuotationCreateNestedOneWithoutSaleInput
  store: StoreCreateNestedOneWithoutResellerSalesInput!
  items: ResellerSaleItemCreateNestedManyWithoutSaleInput
  payments: ResellerPaymentCreateNestedManyWithoutSaleInput
  SalesReturn: SalesReturnCreateNestedManyWithoutResellerSaleInput
  SaleOrder: SaleOrderCreateNestedOneWithoutResellerSaleInput!
}

input ResellerSaleItemCreateNestedManyWithoutSaleInput {
  create: [ResellerSaleItemCreateWithoutSaleInput!]
  connectOrCreate: [ResellerSaleItemCreateOrConnectWithoutSaleInput!]
  createMany: ResellerSaleItemCreateManySaleInputEnvelope
  connect: [ResellerSaleItemWhereUniqueInput!]
}

input ResellerSaleItemCreateWithoutSaleInput {
  id: String
  quantity: Int!
  unitPrice: Float!
  productVariant: ProductVariantCreateNestedOneWithoutResellerItemsInput!
}

input ProductVariantCreateNestedOneWithoutResellerItemsInput {
  create: ProductVariantCreateWithoutResellerItemsInput
  connectOrCreate: ProductVariantCreateOrConnectWithoutResellerItemsInput
  connect: ProductVariantWhereUniqueInput
}

input ProductVariantCreateWithoutResellerItemsInput {
  id: String
  name: String
  size: String!
  concentration: String!
  packaging: String!
  barcode: String
  price: Float!
  resellerPrice: Float!
  createdAt: DateTime
  updatedAt: DateTime
  product: ProductCreateNestedOneWithoutVariantsInput
  stockItems: StockCreateNestedManyWithoutProductVariantInput
  receiptItems: StockReceiptBatchItemCreateNestedManyWithoutProductVariantInput
  quotationItems: QuotationItemCreateNestedManyWithoutProductVariantInput
  consumerItems: ConsumerSaleItemCreateNestedManyWithoutProductVariantInput
  returnItems: SalesReturnItemCreateNestedManyWithoutProductVariantInput
  purchaseReturnItems: PurchaseReturnItemCreateNestedManyWithoutProductVariantInput
  transferItems: StockTransferItemCreateNestedManyWithoutProductVariantInput
  stats: ProductSalesStatsCreateNestedOneWithoutProductVariantInput
  PurchaseOrderItem: PurchaseOrderItemCreateNestedManyWithoutProductVariantInput
  StockMovementItem: StockMovementItemCreateNestedManyWithoutProductVariantInput
  PurchaseRequisitionItem: PurchaseRequisitionItemCreateNestedManyWithoutProductVariantInput
  SupplierCatalog: SupplierCatalogCreateNestedManyWithoutProductVariantInput
  SupplierQuoteItem: SupplierQuoteItemCreateNestedManyWithoutProductVariantInput
  ProductVariantTierPrice: ProductVariantTierPriceCreateNestedManyWithoutVariantInput
  facets: VariantFacetValueCreateNestedManyWithoutVariantInput
}

input ConsumerSaleItemCreateNestedManyWithoutProductVariantInput {
  create: [ConsumerSaleItemCreateWithoutProductVariantInput!]
  connectOrCreate: [ConsumerSaleItemCreateOrConnectWithoutProductVariantInput!]
  createMany: ConsumerSaleItemCreateManyProductVariantInputEnvelope
  connect: [ConsumerSaleItemWhereUniqueInput!]
}

input ConsumerSaleItemCreateWithoutProductVariantInput {
  id: String
  quantity: Int!
  unitPrice: Float!
  sale: ConsumerSaleCreateNestedOneWithoutItemsInput!
}

input ConsumerSaleCreateNestedOneWithoutItemsInput {
  create: ConsumerSaleCreateWithoutItemsInput
  connectOrCreate: ConsumerSaleCreateOrConnectWithoutItemsInput
  connect: ConsumerSaleWhereUniqueInput
}

input ConsumerSaleCreateWithoutItemsInput {
  id: String
  channel: SaleChannel!
  status: SaleStatus!
  totalAmount: Float!
  adjustmentType: AdjustmentType
  createdAt: DateTime
  updatedAt: DateTime
  customer: CustomerCreateNestedOneWithoutSalesInput
  store: StoreCreateNestedOneWithoutCustomerSalesInput!
  biller: UserCreateNestedOneWithoutConsumerSaleInput!
  adjustedBy: UserCreateNestedOneWithoutConsumerSaleAdjustedBysInput
  quotation: QuotationCreateNestedOneWithoutConsumerSaleInput
  payments: ConsumerPaymentCreateNestedManyWithoutSaleInput
  receipt: ConsumerReceiptCreateNestedOneWithoutSaleInput
  SalesReturn: SalesReturnCreateNestedManyWithoutConsumerSaleInput
  CustomerProfile: CustomerProfileCreateNestedManyWithoutSalesInput
  SaleOrder: SaleOrderCreateNestedOneWithoutConsumerSaleInput!
}

input ConsumerReceiptCreateNestedOneWithoutSaleInput {
  create: ConsumerReceiptCreateWithoutSaleInput
  connectOrCreate: ConsumerReceiptCreateOrConnectWithoutSaleInput
  connect: ConsumerReceiptWhereUniqueInput
}

input ConsumerReceiptCreateWithoutSaleInput {
  id: String
  issuedAt: DateTime
  receiptUrl: String
  issuedBy: UserCreateNestedOneWithoutConsumerReceiptInput!
}

input UserCreateNestedOneWithoutConsumerReceiptInput {
  create: UserCreateWithoutConsumerReceiptInput
  connectOrCreate: UserCreateOrConnectWithoutConsumerReceiptInput
  connect: UserWhereUniqueInput
}

input UserCreateWithoutConsumerReceiptInput {
  id: String
  email: String!
  passwordHash: String!
  tier: UserTier
  referralCode: String
  referredBy: String
  createdAt: DateTime
  updatedAt: DateTime
  isEmailVerified: Boolean
  emailVerificationToken: String
  emailVerificationTokenExpiry: DateTime
  role: RoleCreateNestedOneWithoutUsersInput!
  resellerProfile: ResellerProfileCreateNestedOneWithoutUserInput
  customerProfile: CustomerProfileCreateNestedOneWithoutUserInput
  resellerPaymentsMade: ResellerPaymentCreateNestedManyWithoutResellerInput
  resellerPaymentsReceived: ResellerPaymentCreateNestedManyWithoutReceivedByInput
  adminLogs: AdminActionLogCreateNestedManyWithoutAdminInput
  supportMessages: SupportMessageCreateNestedManyWithoutUserInput
  ConsumerSale: ConsumerSaleCreateNestedManyWithoutBillerInput
  ConsumerSaleAdjustedBys: ConsumerSaleCreateNestedManyWithoutAdjustedByInput
  StockReceiptBatchReceivedBys: StockReceiptBatchCreateNestedManyWithoutReceivedByInput
  StockReceiptBatchConfirmedBys: StockReceiptBatchCreateNestedManyWithoutConfirmedByInput
  StockTransferRequests: StockTransferCreateNestedManyWithoutRequestedByInput
  StockTransferApprovals: StockTransferCreateNestedManyWithoutApprovedByInput
  Store: StoreCreateNestedManyWithoutManagerInput
  ResellerSales: ResellerSaleCreateNestedManyWithoutResellerInput
  BillerResellerSale: ResellerSaleCreateNestedManyWithoutBillerInput
  ResellerSale: ResellerSaleCreateNestedManyWithoutApprovedByInput
  SalesReturnReceivers: SalesReturnCreateNestedManyWithoutReceivedByInput
  SalesReturnRequesters: SalesReturnCreateNestedManyWithoutReturnedByInput
  SalesReturn: SalesReturnCreateNestedManyWithoutApprovedByInput
  PurchaseReturnInitiators: PurchaseReturnCreateNestedManyWithoutInitiatedByInput
  PurchaseReturnApprovers: PurchaseReturnCreateNestedManyWithoutApprovedByInput
  Payment: PaymentCreateNestedManyWithoutReceivedByInput
  ResellerTierHistory: ResellerTierHistoryCreateNestedManyWithoutUserInput
  ResellerTierHistoryChangedBys: ResellerTierHistoryCreateNestedManyWithoutAdminInput
  ResellerProfile: ResellerProfileCreateNestedManyWithoutBillerInput
  RequestedResellers: ResellerProfileCreateNestedManyWithoutRequestedBillerInput
  Notification: NotificationCreateNestedManyWithoutUserInput
  Fulfillment: FulfillmentCreateNestedManyWithoutDeliveryPersonnelInput
  BillerQuotation: QuotationCreateNestedManyWithoutBillerInput
  ResellerQuotation: QuotationCreateNestedManyWithoutResellerInput
  PurchaseRequisition: PurchaseRequisitionCreateNestedManyWithoutRequestedByInput
  Supplier: SupplierCreateNestedManyWithoutUserInput
}

input ResellerSaleCreateNestedManyWithoutApprovedByInput {
  create: [ResellerSaleCreateWithoutApprovedByInput!]
  connectOrCreate: [ResellerSaleCreateOrConnectWithoutApprovedByInput!]
  createMany: ResellerSaleCreateManyApprovedByInputEnvelope
  connect: [ResellerSaleWhereUniqueInput!]
}

input ResellerSaleCreateWithoutApprovedByInput {
  id: String
  status: SaleStatus!
  totalAmount: Float!
  approvedAt: DateTime
  createdAt: DateTime
  updatedAt: DateTime
  reseller: UserCreateNestedOneWithoutResellerSalesInput!
  biller: UserCreateNestedOneWithoutBillerResellerSaleInput!
  quotation: QuotationCreateNestedOneWithoutSaleInput
  store: StoreCreateNestedOneWithoutResellerSalesInput!
  items: ResellerSaleItemCreateNestedManyWithoutSaleInput
  payments: ResellerPaymentCreateNestedManyWithoutSaleInput
  SalesReturn: SalesReturnCreateNestedManyWithoutResellerSaleInput
  SaleOrder: SaleOrderCreateNestedOneWithoutResellerSaleInput!
}

input ResellerPaymentCreateNestedManyWithoutSaleInput {
  create: [ResellerPaymentCreateWithoutSaleInput!]
  connectOrCreate: [ResellerPaymentCreateOrConnectWithoutSaleInput!]
  createMany: ResellerPaymentCreateManySaleInputEnvelope
  connect: [ResellerPaymentWhereUniqueInput!]
}

input ResellerPaymentCreateWithoutSaleInput {
  id: String
  amount: Float!
  method: PaymentMethod!
  reference: String
  status: PaymentStatus
  receivedAt: DateTime
  saleOrder: SaleOrderCreateNestedOneWithoutResellerPaymentInput!
  reseller: UserCreateNestedOneWithoutResellerPaymentsMadeInput!
  receivedBy: UserCreateNestedOneWithoutResellerPaymentsReceivedInput!
}

input UserCreateNestedOneWithoutResellerPaymentsReceivedInput {
  create: UserCreateWithoutResellerPaymentsReceivedInput
  connectOrCreate: UserCreateOrConnectWithoutResellerPaymentsReceivedInput
  connect: UserWhereUniqueInput
}

input UserCreateWithoutResellerPaymentsReceivedInput {
  id: String
  email: String!
  passwordHash: String!
  tier: UserTier
  referralCode: String
  referredBy: String
  createdAt: DateTime
  updatedAt: DateTime
  isEmailVerified: Boolean
  emailVerificationToken: String
  emailVerificationTokenExpiry: DateTime
  role: RoleCreateNestedOneWithoutUsersInput!
  resellerProfile: ResellerProfileCreateNestedOneWithoutUserInput
  customerProfile: CustomerProfileCreateNestedOneWithoutUserInput
  resellerPaymentsMade: ResellerPaymentCreateNestedManyWithoutResellerInput
  adminLogs: AdminActionLogCreateNestedManyWithoutAdminInput
  supportMessages: SupportMessageCreateNestedManyWithoutUserInput
  ConsumerSale: ConsumerSaleCreateNestedManyWithoutBillerInput
  ConsumerSaleAdjustedBys: ConsumerSaleCreateNestedManyWithoutAdjustedByInput
  StockReceiptBatchReceivedBys: StockReceiptBatchCreateNestedManyWithoutReceivedByInput
  StockReceiptBatchConfirmedBys: StockReceiptBatchCreateNestedManyWithoutConfirmedByInput
  StockTransferRequests: StockTransferCreateNestedManyWithoutRequestedByInput
  StockTransferApprovals: StockTransferCreateNestedManyWithoutApprovedByInput
  Store: StoreCreateNestedManyWithoutManagerInput
  ConsumerReceipt: ConsumerReceiptCreateNestedManyWithoutIssuedByInput
  ResellerSales: ResellerSaleCreateNestedManyWithoutResellerInput
  BillerResellerSale: ResellerSaleCreateNestedManyWithoutBillerInput
  ResellerSale: ResellerSaleCreateNestedManyWithoutApprovedByInput
  SalesReturnReceivers: SalesReturnCreateNestedManyWithoutReceivedByInput
  SalesReturnRequesters: SalesReturnCreateNestedManyWithoutReturnedByInput
  SalesReturn: SalesReturnCreateNestedManyWithoutApprovedByInput
  PurchaseReturnInitiators: PurchaseReturnCreateNestedManyWithoutInitiatedByInput
  PurchaseReturnApprovers: PurchaseReturnCreateNestedManyWithoutApprovedByInput
  Payment: PaymentCreateNestedManyWithoutReceivedByInput
  ResellerTierHistory: ResellerTierHistoryCreateNestedManyWithoutUserInput
  ResellerTierHistoryChangedBys: ResellerTierHistoryCreateNestedManyWithoutAdminInput
  ResellerProfile: ResellerProfileCreateNestedManyWithoutBillerInput
  RequestedResellers: ResellerProfileCreateNestedManyWithoutRequestedBillerInput
  Notification: NotificationCreateNestedManyWithoutUserInput
  Fulfillment: FulfillmentCreateNestedManyWithoutDeliveryPersonnelInput
  BillerQuotation: QuotationCreateNestedManyWithoutBillerInput
  ResellerQuotation: QuotationCreateNestedManyWithoutResellerInput
  PurchaseRequisition: PurchaseRequisitionCreateNestedManyWithoutRequestedByInput
  Supplier: SupplierCreateNestedManyWithoutUserInput
}

input SalesReturnCreateNestedManyWithoutReceivedByInput {
  create: [SalesReturnCreateWithoutReceivedByInput!]
  connectOrCreate: [SalesReturnCreateOrConnectWithoutReceivedByInput!]
  createMany: SalesReturnCreateManyReceivedByInputEnvelope
  connect: [SalesReturnWhereUniqueInput!]
}

input SalesReturnCreateWithoutReceivedByInput {
  id: String
  type: SaleType!
  status: ReturnStatus!
  returnLocation: ReturnLocation!
  isApprovedLate: Boolean
  createdAt: DateTime
  updatedAt: DateTime
  consumerSale: ConsumerSaleCreateNestedOneWithoutSalesReturnInput
  resellerSale: ResellerSaleCreateNestedOneWithoutSalesReturnInput
  returnedBy: UserCreateNestedOneWithoutSalesReturnRequestersInput!
  approvedBy: UserCreateNestedOneWithoutSalesReturnInput
  store: StoreCreateNestedOneWithoutSalesReturnsInput!
  items: SalesReturnItemCreateNestedManyWithoutReturnInput
}

input UserCreateNestedOneWithoutSalesReturnRequestersInput {
  create: UserCreateWithoutSalesReturnRequestersInput
  connectOrCreate: UserCreateOrConnectWithoutSalesReturnRequestersInput
  connect: UserWhereUniqueInput
}

input UserCreateWithoutSalesReturnRequestersInput {
  id: String
  email: String!
  passwordHash: String!
  tier: UserTier
  referralCode: String
  referredBy: String
  createdAt: DateTime
  updatedAt: DateTime
  isEmailVerified: Boolean
  emailVerificationToken: String
  emailVerificationTokenExpiry: DateTime
  role: RoleCreateNestedOneWithoutUsersInput!
  resellerProfile: ResellerProfileCreateNestedOneWithoutUserInput
  customerProfile: CustomerProfileCreateNestedOneWithoutUserInput
  resellerPaymentsMade: ResellerPaymentCreateNestedManyWithoutResellerInput
  resellerPaymentsReceived: ResellerPaymentCreateNestedManyWithoutReceivedByInput
  adminLogs: AdminActionLogCreateNestedManyWithoutAdminInput
  supportMessages: SupportMessageCreateNestedManyWithoutUserInput
  ConsumerSale: ConsumerSaleCreateNestedManyWithoutBillerInput
  ConsumerSaleAdjustedBys: ConsumerSaleCreateNestedManyWithoutAdjustedByInput
  StockReceiptBatchReceivedBys: StockReceiptBatchCreateNestedManyWithoutReceivedByInput
  StockReceiptBatchConfirmedBys: StockReceiptBatchCreateNestedManyWithoutConfirmedByInput
  StockTransferRequests: StockTransferCreateNestedManyWithoutRequestedByInput
  StockTransferApprovals: StockTransferCreateNestedManyWithoutApprovedByInput
  Store: StoreCreateNestedManyWithoutManagerInput
  ConsumerReceipt: ConsumerReceiptCreateNestedManyWithoutIssuedByInput
  ResellerSales: ResellerSaleCreateNestedManyWithoutResellerInput
  BillerResellerSale: ResellerSaleCreateNestedManyWithoutBillerInput
  ResellerSale: ResellerSaleCreateNestedManyWithoutApprovedByInput
  SalesReturnReceivers: SalesReturnCreateNestedManyWithoutReceivedByInput
  SalesReturn: SalesReturnCreateNestedManyWithoutApprovedByInput
  PurchaseReturnInitiators: PurchaseReturnCreateNestedManyWithoutInitiatedByInput
  PurchaseReturnApprovers: PurchaseReturnCreateNestedManyWithoutApprovedByInput
  Payment: PaymentCreateNestedManyWithoutReceivedByInput
  ResellerTierHistory: ResellerTierHistoryCreateNestedManyWithoutUserInput
  ResellerTierHistoryChangedBys: ResellerTierHistoryCreateNestedManyWithoutAdminInput
  ResellerProfile: ResellerProfileCreateNestedManyWithoutBillerInput
  RequestedResellers: ResellerProfileCreateNestedManyWithoutRequestedBillerInput
  Notification: NotificationCreateNestedManyWithoutUserInput
  Fulfillment: FulfillmentCreateNestedManyWithoutDeliveryPersonnelInput
  BillerQuotation: QuotationCreateNestedManyWithoutBillerInput
  ResellerQuotation: QuotationCreateNestedManyWithoutResellerInput
  PurchaseRequisition: PurchaseRequisitionCreateNestedManyWithoutRequestedByInput
  Supplier: SupplierCreateNestedManyWithoutUserInput
}

input SalesReturnCreateNestedManyWithoutApprovedByInput {
  create: [SalesReturnCreateWithoutApprovedByInput!]
  connectOrCreate: [SalesReturnCreateOrConnectWithoutApprovedByInput!]
  createMany: SalesReturnCreateManyApprovedByInputEnvelope
  connect: [SalesReturnWhereUniqueInput!]
}

input SalesReturnCreateWithoutApprovedByInput {
  id: String
  type: SaleType!
  status: ReturnStatus!
  returnLocation: ReturnLocation!
  isApprovedLate: Boolean
  createdAt: DateTime
  updatedAt: DateTime
  consumerSale: ConsumerSaleCreateNestedOneWithoutSalesReturnInput
  resellerSale: ResellerSaleCreateNestedOneWithoutSalesReturnInput
  returnedBy: UserCreateNestedOneWithoutSalesReturnRequestersInput!
  receivedBy: UserCreateNestedOneWithoutSalesReturnReceiversInput!
  store: StoreCreateNestedOneWithoutSalesReturnsInput!
  items: SalesReturnItemCreateNestedManyWithoutReturnInput
}

input UserCreateNestedOneWithoutSalesReturnReceiversInput {
  create: UserCreateWithoutSalesReturnReceiversInput
  connectOrCreate: UserCreateOrConnectWithoutSalesReturnReceiversInput
  connect: UserWhereUniqueInput
}

input UserCreateWithoutSalesReturnReceiversInput {
  id: String
  email: String!
  passwordHash: String!
  tier: UserTier
  referralCode: String
  referredBy: String
  createdAt: DateTime
  updatedAt: DateTime
  isEmailVerified: Boolean
  emailVerificationToken: String
  emailVerificationTokenExpiry: DateTime
  role: RoleCreateNestedOneWithoutUsersInput!
  resellerProfile: ResellerProfileCreateNestedOneWithoutUserInput
  customerProfile: CustomerProfileCreateNestedOneWithoutUserInput
  resellerPaymentsMade: ResellerPaymentCreateNestedManyWithoutResellerInput
  resellerPaymentsReceived: ResellerPaymentCreateNestedManyWithoutReceivedByInput
  adminLogs: AdminActionLogCreateNestedManyWithoutAdminInput
  supportMessages: SupportMessageCreateNestedManyWithoutUserInput
  ConsumerSale: ConsumerSaleCreateNestedManyWithoutBillerInput
  ConsumerSaleAdjustedBys: ConsumerSaleCreateNestedManyWithoutAdjustedByInput
  StockReceiptBatchReceivedBys: StockReceiptBatchCreateNestedManyWithoutReceivedByInput
  StockReceiptBatchConfirmedBys: StockReceiptBatchCreateNestedManyWithoutConfirmedByInput
  StockTransferRequests: StockTransferCreateNestedManyWithoutRequestedByInput
  StockTransferApprovals: StockTransferCreateNestedManyWithoutApprovedByInput
  Store: StoreCreateNestedManyWithoutManagerInput
  ConsumerReceipt: ConsumerReceiptCreateNestedManyWithoutIssuedByInput
  ResellerSales: ResellerSaleCreateNestedManyWithoutResellerInput
  BillerResellerSale: ResellerSaleCreateNestedManyWithoutBillerInput
  ResellerSale: ResellerSaleCreateNestedManyWithoutApprovedByInput
  SalesReturnRequesters: SalesReturnCreateNestedManyWithoutReturnedByInput
  SalesReturn: SalesReturnCreateNestedManyWithoutApprovedByInput
  PurchaseReturnInitiators: PurchaseReturnCreateNestedManyWithoutInitiatedByInput
  PurchaseReturnApprovers: PurchaseReturnCreateNestedManyWithoutApprovedByInput
  Payment: PaymentCreateNestedManyWithoutReceivedByInput
  ResellerTierHistory: ResellerTierHistoryCreateNestedManyWithoutUserInput
  ResellerTierHistoryChangedBys: ResellerTierHistoryCreateNestedManyWithoutAdminInput
  ResellerProfile: ResellerProfileCreateNestedManyWithoutBillerInput
  RequestedResellers: ResellerProfileCreateNestedManyWithoutRequestedBillerInput
  Notification: NotificationCreateNestedManyWithoutUserInput
  Fulfillment: FulfillmentCreateNestedManyWithoutDeliveryPersonnelInput
  BillerQuotation: QuotationCreateNestedManyWithoutBillerInput
  ResellerQuotation: QuotationCreateNestedManyWithoutResellerInput
  PurchaseRequisition: PurchaseRequisitionCreateNestedManyWithoutRequestedByInput
  Supplier: SupplierCreateNestedManyWithoutUserInput
}

input SalesReturnCreateNestedManyWithoutReturnedByInput {
  create: [SalesReturnCreateWithoutReturnedByInput!]
  connectOrCreate: [SalesReturnCreateOrConnectWithoutReturnedByInput!]
  createMany: SalesReturnCreateManyReturnedByInputEnvelope
  connect: [SalesReturnWhereUniqueInput!]
}

input SalesReturnCreateWithoutReturnedByInput {
  id: String
  type: SaleType!
  status: ReturnStatus!
  returnLocation: ReturnLocation!
  isApprovedLate: Boolean
  createdAt: DateTime
  updatedAt: DateTime
  consumerSale: ConsumerSaleCreateNestedOneWithoutSalesReturnInput
  resellerSale: ResellerSaleCreateNestedOneWithoutSalesReturnInput
  receivedBy: UserCreateNestedOneWithoutSalesReturnReceiversInput!
  approvedBy: UserCreateNestedOneWithoutSalesReturnInput
  store: StoreCreateNestedOneWithoutSalesReturnsInput!
  items: SalesReturnItemCreateNestedManyWithoutReturnInput
}

input UserCreateNestedOneWithoutSalesReturnInput {
  create: UserCreateWithoutSalesReturnInput
  connectOrCreate: UserCreateOrConnectWithoutSalesReturnInput
  connect: UserWhereUniqueInput
}

input UserCreateWithoutSalesReturnInput {
  id: String
  email: String!
  passwordHash: String!
  tier: UserTier
  referralCode: String
  referredBy: String
  createdAt: DateTime
  updatedAt: DateTime
  isEmailVerified: Boolean
  emailVerificationToken: String
  emailVerificationTokenExpiry: DateTime
  role: RoleCreateNestedOneWithoutUsersInput!
  resellerProfile: ResellerProfileCreateNestedOneWithoutUserInput
  customerProfile: CustomerProfileCreateNestedOneWithoutUserInput
  resellerPaymentsMade: ResellerPaymentCreateNestedManyWithoutResellerInput
  resellerPaymentsReceived: ResellerPaymentCreateNestedManyWithoutReceivedByInput
  adminLogs: AdminActionLogCreateNestedManyWithoutAdminInput
  supportMessages: SupportMessageCreateNestedManyWithoutUserInput
  ConsumerSale: ConsumerSaleCreateNestedManyWithoutBillerInput
  ConsumerSaleAdjustedBys: ConsumerSaleCreateNestedManyWithoutAdjustedByInput
  StockReceiptBatchReceivedBys: StockReceiptBatchCreateNestedManyWithoutReceivedByInput
  StockReceiptBatchConfirmedBys: StockReceiptBatchCreateNestedManyWithoutConfirmedByInput
  StockTransferRequests: StockTransferCreateNestedManyWithoutRequestedByInput
  StockTransferApprovals: StockTransferCreateNestedManyWithoutApprovedByInput
  Store: StoreCreateNestedManyWithoutManagerInput
  ConsumerReceipt: ConsumerReceiptCreateNestedManyWithoutIssuedByInput
  ResellerSales: ResellerSaleCreateNestedManyWithoutResellerInput
  BillerResellerSale: ResellerSaleCreateNestedManyWithoutBillerInput
  ResellerSale: ResellerSaleCreateNestedManyWithoutApprovedByInput
  SalesReturnReceivers: SalesReturnCreateNestedManyWithoutReceivedByInput
  SalesReturnRequesters: SalesReturnCreateNestedManyWithoutReturnedByInput
  PurchaseReturnInitiators: PurchaseReturnCreateNestedManyWithoutInitiatedByInput
  PurchaseReturnApprovers: PurchaseReturnCreateNestedManyWithoutApprovedByInput
  Payment: PaymentCreateNestedManyWithoutReceivedByInput
  ResellerTierHistory: ResellerTierHistoryCreateNestedManyWithoutUserInput
  ResellerTierHistoryChangedBys: ResellerTierHistoryCreateNestedManyWithoutAdminInput
  ResellerProfile: ResellerProfileCreateNestedManyWithoutBillerInput
  RequestedResellers: ResellerProfileCreateNestedManyWithoutRequestedBillerInput
  Notification: NotificationCreateNestedManyWithoutUserInput
  Fulfillment: FulfillmentCreateNestedManyWithoutDeliveryPersonnelInput
  BillerQuotation: QuotationCreateNestedManyWithoutBillerInput
  ResellerQuotation: QuotationCreateNestedManyWithoutResellerInput
  PurchaseRequisition: PurchaseRequisitionCreateNestedManyWithoutRequestedByInput
  Supplier: SupplierCreateNestedManyWithoutUserInput
}

input PurchaseReturnCreateNestedManyWithoutInitiatedByInput {
  create: [PurchaseReturnCreateWithoutInitiatedByInput!]
  connectOrCreate: [PurchaseReturnCreateOrConnectWithoutInitiatedByInput!]
  createMany: PurchaseReturnCreateManyInitiatedByInputEnvelope
  connect: [PurchaseReturnWhereUniqueInput!]
}

input PurchaseReturnCreateWithoutInitiatedByInput {
  id: String
  status: ReturnStatus!
  reason: String
  createdAt: DateTime
  updatedAt: DateTime
  supplier: SupplierCreateNestedOneWithoutReturnsInput!
  approvedBy: UserCreateNestedOneWithoutPurchaseReturnApproversInput!
  items: PurchaseReturnItemCreateNestedManyWithoutReturnInput
}

input SupplierCreateNestedOneWithoutReturnsInput {
  create: SupplierCreateWithoutReturnsInput
  connectOrCreate: SupplierCreateOrConnectWithoutReturnsInput
  connect: SupplierWhereUniqueInput
}

input SupplierCreateWithoutReturnsInput {
  id: String
  name: String!
  contactInfo: JSON
  isFrequent: Boolean
  creditLimit: Float!
  currentBalance: Float
  paymentTerms: String
  notes: String
  createdAt: DateTime
  updatedAt: DateTime
  purchaseOrders: PurchaseOrderCreateNestedManyWithoutSupplierInput
  payments: SupplierPaymentCreateNestedManyWithoutSupplierInput
  catalogs: SupplierCatalogCreateNestedManyWithoutSupplierInput
  quotes: SupplierQuoteCreateNestedManyWithoutSupplierInput
  user: UserCreateNestedOneWithoutSupplierInput
}

input PurchaseOrderCreateNestedManyWithoutSupplierInput {
  create: [PurchaseOrderCreateWithoutSupplierInput!]
  connectOrCreate: [PurchaseOrderCreateOrConnectWithoutSupplierInput!]
  createMany: PurchaseOrderCreateManySupplierInputEnvelope
  connect: [PurchaseOrderWhereUniqueInput!]
}

input PurchaseOrderCreateWithoutSupplierInput {
  id: String
  invoiceNumber: String!
  status: PurchaseOrderStatus!
  phase: PurchasePhase
  dueDate: DateTime!
  totalAmount: Float!
  createdAt: DateTime
  updatedAt: DateTime
  store: StoreCreateNestedOneWithoutPurchaseOrdersInput
  items: PurchaseOrderItemCreateNestedManyWithoutPurchaseOrderInput
  receipts: StockReceiptBatchCreateNestedManyWithoutPurchaseOrderInput
  payments: SupplierPaymentCreateNestedManyWithoutPurchaseOrderInput
}

input StoreCreateNestedOneWithoutPurchaseOrdersInput {
  create: StoreCreateWithoutPurchaseOrdersInput
  connectOrCreate: StoreCreateOrConnectWithoutPurchaseOrdersInput
  connect: StoreWhereUniqueInput
}

input StoreCreateWithoutPurchaseOrdersInput {
  id: String
  name: String!
  location: String
  isMain: Boolean
  createdAt: DateTime
  updatedAt: DateTime
  manager: UserCreateNestedOneWithoutStoreInput!
  stocks: StockCreateNestedManyWithoutStoreInput
  receipts: StockReceiptBatchCreateNestedManyWithoutStoreInput
  transfersOut: StockTransferCreateNestedManyWithoutFromStoreInput
  transfersIn: StockTransferCreateNestedManyWithoutToStoreInput
  customerSales: ConsumerSaleCreateNestedManyWithoutStoreInput
  salesReturns: SalesReturnCreateNestedManyWithoutStoreInput
  resellerSales: ResellerSaleCreateNestedManyWithoutStoreInput
  movements: StockMovementCreateNestedManyWithoutStoreInput
  Customer: CustomerCreateNestedManyWithoutPreferredStoreInput
  CustomerProfile: CustomerProfileCreateNestedManyWithoutPreferredStoreInput
  Quotation: QuotationCreateNestedManyWithoutStoreInput
  PurchaseRequisition: PurchaseRequisitionCreateNestedManyWithoutStoreInput
  InvoiceImport: InvoiceImportCreateNestedManyWithoutStoreInput
}

input CustomerProfileCreateNestedManyWithoutPreferredStoreInput {
  create: [CustomerProfileCreateWithoutPreferredStoreInput!]
  connectOrCreate: [CustomerProfileCreateOrConnectWithoutPreferredStoreInput!]
  createMany: CustomerProfileCreateManyPreferredStoreInputEnvelope
  connect: [CustomerProfileWhereUniqueInput!]
}

input CustomerProfileCreateWithoutPreferredStoreInput {
  fullName: String!
  phone: String
  email: String
  gender: String
  birthday: DateTime
  profileStatus: ProfileStatus
  requestedAt: DateTime
  activatedAt: DateTime
  isPhoneVerified: Boolean
  phoneVerificationCode: String
  phoneVerificationCodeExpiry: DateTime
  user: UserCreateNestedOneWithoutCustomerProfileInput!
  referredBy: CustomerProfileCreateNestedOneWithoutReferralsInput
  referrals: CustomerProfileCreateNestedManyWithoutReferredByInput
  sales: ConsumerSaleCreateNestedManyWithoutCustomerProfileInput
  preferences: CustomerPreferenceProfileCreateNestedOneWithoutCustomerProfileInput
}

input CustomerProfileCreateNestedOneWithoutReferralsInput {
  create: CustomerProfileCreateWithoutReferralsInput
  connectOrCreate: CustomerProfileCreateOrConnectWithoutReferralsInput
  connect: CustomerProfileWhereUniqueInput
}

input CustomerProfileCreateWithoutReferralsInput {
  fullName: String!
  phone: String
  email: String
  gender: String
  birthday: DateTime
  profileStatus: ProfileStatus
  requestedAt: DateTime
  activatedAt: DateTime
  isPhoneVerified: Boolean
  phoneVerificationCode: String
  phoneVerificationCodeExpiry: DateTime
  user: UserCreateNestedOneWithoutCustomerProfileInput!
  preferredStore: StoreCreateNestedOneWithoutCustomerProfileInput
  referredBy: CustomerProfileCreateNestedOneWithoutReferralsInput
  sales: ConsumerSaleCreateNestedManyWithoutCustomerProfileInput
  preferences: CustomerPreferenceProfileCreateNestedOneWithoutCustomerProfileInput
}

input ConsumerSaleCreateNestedManyWithoutCustomerProfileInput {
  create: [ConsumerSaleCreateWithoutCustomerProfileInput!]
  connectOrCreate: [ConsumerSaleCreateOrConnectWithoutCustomerProfileInput!]
  connect: [ConsumerSaleWhereUniqueInput!]
}

input ConsumerSaleCreateWithoutCustomerProfileInput {
  id: String
  channel: SaleChannel!
  status: SaleStatus!
  totalAmount: Float!
  adjustmentType: AdjustmentType
  createdAt: DateTime
  updatedAt: DateTime
  customer: CustomerCreateNestedOneWithoutSalesInput
  store: StoreCreateNestedOneWithoutCustomerSalesInput!
  biller: UserCreateNestedOneWithoutConsumerSaleInput!
  adjustedBy: UserCreateNestedOneWithoutConsumerSaleAdjustedBysInput
  quotation: QuotationCreateNestedOneWithoutConsumerSaleInput
  items: ConsumerSaleItemCreateNestedManyWithoutSaleInput
  payments: ConsumerPaymentCreateNestedManyWithoutSaleInput
  receipt: ConsumerReceiptCreateNestedOneWithoutSaleInput
  SalesReturn: SalesReturnCreateNestedManyWithoutConsumerSaleInput
  SaleOrder: SaleOrderCreateNestedOneWithoutConsumerSaleInput!
}

input SalesReturnCreateNestedManyWithoutConsumerSaleInput {
  create: [SalesReturnCreateWithoutConsumerSaleInput!]
  connectOrCreate: [SalesReturnCreateOrConnectWithoutConsumerSaleInput!]
  createMany: SalesReturnCreateManyConsumerSaleInputEnvelope
  connect: [SalesReturnWhereUniqueInput!]
}

input SalesReturnCreateWithoutConsumerSaleInput {
  id: String
  type: SaleType!
  status: ReturnStatus!
  returnLocation: ReturnLocation!
  isApprovedLate: Boolean
  createdAt: DateTime
  updatedAt: DateTime
  resellerSale: ResellerSaleCreateNestedOneWithoutSalesReturnInput
  returnedBy: UserCreateNestedOneWithoutSalesReturnRequestersInput!
  receivedBy: UserCreateNestedOneWithoutSalesReturnReceiversInput!
  approvedBy: UserCreateNestedOneWithoutSalesReturnInput
  store: StoreCreateNestedOneWithoutSalesReturnsInput!
  items: SalesReturnItemCreateNestedManyWithoutReturnInput
}

input StoreCreateNestedOneWithoutSalesReturnsInput {
  create: StoreCreateWithoutSalesReturnsInput
  connectOrCreate: StoreCreateOrConnectWithoutSalesReturnsInput
  connect: StoreWhereUniqueInput
}

input StoreCreateWithoutSalesReturnsInput {
  id: String
  name: String!
  location: String
  isMain: Boolean
  createdAt: DateTime
  updatedAt: DateTime
  manager: UserCreateNestedOneWithoutStoreInput!
  stocks: StockCreateNestedManyWithoutStoreInput
  receipts: StockReceiptBatchCreateNestedManyWithoutStoreInput
  transfersOut: StockTransferCreateNestedManyWithoutFromStoreInput
  transfersIn: StockTransferCreateNestedManyWithoutToStoreInput
  customerSales: ConsumerSaleCreateNestedManyWithoutStoreInput
  resellerSales: ResellerSaleCreateNestedManyWithoutStoreInput
  movements: StockMovementCreateNestedManyWithoutStoreInput
  Customer: CustomerCreateNestedManyWithoutPreferredStoreInput
  CustomerProfile: CustomerProfileCreateNestedManyWithoutPreferredStoreInput
  Quotation: QuotationCreateNestedManyWithoutStoreInput
  PurchaseRequisition: PurchaseRequisitionCreateNestedManyWithoutStoreInput
  purchaseOrders: PurchaseOrderCreateNestedManyWithoutStoreInput
  InvoiceImport: InvoiceImportCreateNestedManyWithoutStoreInput
}

input QuotationCreateNestedManyWithoutStoreInput {
  create: [QuotationCreateWithoutStoreInput!]
  connectOrCreate: [QuotationCreateOrConnectWithoutStoreInput!]
  createMany: QuotationCreateManyStoreInputEnvelope
  connect: [QuotationWhereUniqueInput!]
}

input QuotationCreateWithoutStoreInput {
  id: String
  type: SaleType!
  channel: SaleChannel!
  status: QuotationStatus
  totalAmount: Float!
  createdAt: DateTime
  updatedAt: DateTime
  biller: UserCreateNestedOneWithoutBillerQuotationInput
  consumer: CustomerCreateNestedOneWithoutQuotationInput
  reseller: UserCreateNestedOneWithoutResellerQuotationInput
  items: QuotationItemCreateNestedManyWithoutQuotationInput
  sale: ResellerSaleCreateNestedOneWithoutQuotationInput
  SaleOrder: SaleOrderCreateNestedOneWithoutQuotationInput
  ConsumerSale: ConsumerSaleCreateNestedManyWithoutQuotationInput
}

input UserCreateNestedOneWithoutResellerQuotationInput {
  create: UserCreateWithoutResellerQuotationInput
  connectOrCreate: UserCreateOrConnectWithoutResellerQuotationInput
  connect: UserWhereUniqueInput
}

input UserCreateWithoutResellerQuotationInput {
  id: String
  email: String!
  passwordHash: String!
  tier: UserTier
  referralCode: String
  referredBy: String
  createdAt: DateTime
  updatedAt: DateTime
  isEmailVerified: Boolean
  emailVerificationToken: String
  emailVerificationTokenExpiry: DateTime
  role: RoleCreateNestedOneWithoutUsersInput!
  resellerProfile: ResellerProfileCreateNestedOneWithoutUserInput
  customerProfile: CustomerProfileCreateNestedOneWithoutUserInput
  resellerPaymentsMade: ResellerPaymentCreateNestedManyWithoutResellerInput
  resellerPaymentsReceived: ResellerPaymentCreateNestedManyWithoutReceivedByInput
  adminLogs: AdminActionLogCreateNestedManyWithoutAdminInput
  supportMessages: SupportMessageCreateNestedManyWithoutUserInput
  ConsumerSale: ConsumerSaleCreateNestedManyWithoutBillerInput
  ConsumerSaleAdjustedBys: ConsumerSaleCreateNestedManyWithoutAdjustedByInput
  StockReceiptBatchReceivedBys: StockReceiptBatchCreateNestedManyWithoutReceivedByInput
  StockReceiptBatchConfirmedBys: StockReceiptBatchCreateNestedManyWithoutConfirmedByInput
  StockTransferRequests: StockTransferCreateNestedManyWithoutRequestedByInput
  StockTransferApprovals: StockTransferCreateNestedManyWithoutApprovedByInput
  Store: StoreCreateNestedManyWithoutManagerInput
  ConsumerReceipt: ConsumerReceiptCreateNestedManyWithoutIssuedByInput
  ResellerSales: ResellerSaleCreateNestedManyWithoutResellerInput
  BillerResellerSale: ResellerSaleCreateNestedManyWithoutBillerInput
  ResellerSale: ResellerSaleCreateNestedManyWithoutApprovedByInput
  SalesReturnReceivers: SalesReturnCreateNestedManyWithoutReceivedByInput
  SalesReturnRequesters: SalesReturnCreateNestedManyWithoutReturnedByInput
  SalesReturn: SalesReturnCreateNestedManyWithoutApprovedByInput
  PurchaseReturnInitiators: PurchaseReturnCreateNestedManyWithoutInitiatedByInput
  PurchaseReturnApprovers: PurchaseReturnCreateNestedManyWithoutApprovedByInput
  Payment: PaymentCreateNestedManyWithoutReceivedByInput
  ResellerTierHistory: ResellerTierHistoryCreateNestedManyWithoutUserInput
  ResellerTierHistoryChangedBys: ResellerTierHistoryCreateNestedManyWithoutAdminInput
  ResellerProfile: ResellerProfileCreateNestedManyWithoutBillerInput
  RequestedResellers: ResellerProfileCreateNestedManyWithoutRequestedBillerInput
  Notification: NotificationCreateNestedManyWithoutUserInput
  Fulfillment: FulfillmentCreateNestedManyWithoutDeliveryPersonnelInput
  BillerQuotation: QuotationCreateNestedManyWithoutBillerInput
  PurchaseRequisition: PurchaseRequisitionCreateNestedManyWithoutRequestedByInput
  Supplier: SupplierCreateNestedManyWithoutUserInput
}

input PurchaseReturnCreateNestedManyWithoutApprovedByInput {
  create: [PurchaseReturnCreateWithoutApprovedByInput!]
  connectOrCreate: [PurchaseReturnCreateOrConnectWithoutApprovedByInput!]
  createMany: PurchaseReturnCreateManyApprovedByInputEnvelope
  connect: [PurchaseReturnWhereUniqueInput!]
}

input PurchaseReturnCreateWithoutApprovedByInput {
  id: String
  status: ReturnStatus!
  reason: String
  createdAt: DateTime
  updatedAt: DateTime
  supplier: SupplierCreateNestedOneWithoutReturnsInput!
  initiatedBy: UserCreateNestedOneWithoutPurchaseReturnInitiatorsInput!
  items: PurchaseReturnItemCreateNestedManyWithoutReturnInput
}

input UserCreateNestedOneWithoutPurchaseReturnInitiatorsInput {
  create: UserCreateWithoutPurchaseReturnInitiatorsInput
  connectOrCreate: UserCreateOrConnectWithoutPurchaseReturnInitiatorsInput
  connect: UserWhereUniqueInput
}

input UserCreateWithoutPurchaseReturnInitiatorsInput {
  id: String
  email: String!
  passwordHash: String!
  tier: UserTier
  referralCode: String
  referredBy: String
  createdAt: DateTime
  updatedAt: DateTime
  isEmailVerified: Boolean
  emailVerificationToken: String
  emailVerificationTokenExpiry: DateTime
  role: RoleCreateNestedOneWithoutUsersInput!
  resellerProfile: ResellerProfileCreateNestedOneWithoutUserInput
  customerProfile: CustomerProfileCreateNestedOneWithoutUserInput
  resellerPaymentsMade: ResellerPaymentCreateNestedManyWithoutResellerInput
  resellerPaymentsReceived: ResellerPaymentCreateNestedManyWithoutReceivedByInput
  adminLogs: AdminActionLogCreateNestedManyWithoutAdminInput
  supportMessages: SupportMessageCreateNestedManyWithoutUserInput
  ConsumerSale: ConsumerSaleCreateNestedManyWithoutBillerInput
  ConsumerSaleAdjustedBys: ConsumerSaleCreateNestedManyWithoutAdjustedByInput
  StockReceiptBatchReceivedBys: StockReceiptBatchCreateNestedManyWithoutReceivedByInput
  StockReceiptBatchConfirmedBys: StockReceiptBatchCreateNestedManyWithoutConfirmedByInput
  StockTransferRequests: StockTransferCreateNestedManyWithoutRequestedByInput
  StockTransferApprovals: StockTransferCreateNestedManyWithoutApprovedByInput
  Store: StoreCreateNestedManyWithoutManagerInput
  ConsumerReceipt: ConsumerReceiptCreateNestedManyWithoutIssuedByInput
  ResellerSales: ResellerSaleCreateNestedManyWithoutResellerInput
  BillerResellerSale: ResellerSaleCreateNestedManyWithoutBillerInput
  ResellerSale: ResellerSaleCreateNestedManyWithoutApprovedByInput
  SalesReturnReceivers: SalesReturnCreateNestedManyWithoutReceivedByInput
  SalesReturnRequesters: SalesReturnCreateNestedManyWithoutReturnedByInput
  SalesReturn: SalesReturnCreateNestedManyWithoutApprovedByInput
  PurchaseReturnApprovers: PurchaseReturnCreateNestedManyWithoutApprovedByInput
  Payment: PaymentCreateNestedManyWithoutReceivedByInput
  ResellerTierHistory: ResellerTierHistoryCreateNestedManyWithoutUserInput
  ResellerTierHistoryChangedBys: ResellerTierHistoryCreateNestedManyWithoutAdminInput
  ResellerProfile: ResellerProfileCreateNestedManyWithoutBillerInput
  RequestedResellers: ResellerProfileCreateNestedManyWithoutRequestedBillerInput
  Notification: NotificationCreateNestedManyWithoutUserInput
  Fulfillment: FulfillmentCreateNestedManyWithoutDeliveryPersonnelInput
  BillerQuotation: QuotationCreateNestedManyWithoutBillerInput
  ResellerQuotation: QuotationCreateNestedManyWithoutResellerInput
  PurchaseRequisition: PurchaseRequisitionCreateNestedManyWithoutRequestedByInput
  Supplier: SupplierCreateNestedManyWithoutUserInput
}

input PaymentCreateNestedManyWithoutReceivedByInput {
  create: [PaymentCreateWithoutReceivedByInput!]
  connectOrCreate: [PaymentCreateOrConnectWithoutReceivedByInput!]
  createMany: PaymentCreateManyReceivedByInputEnvelope
  connect: [PaymentWhereUniqueInput!]
}

input PaymentCreateWithoutReceivedByInput {
  id: String
  type: PaymentType!
  sourceId: String!
  referenceEntity: String!
  referenceId: String!
  amount: Float!
  method: PaymentMethod!
  receivedAt: DateTime
}

input PaymentCreateOrConnectWithoutReceivedByInput {
  where: PaymentWhereUniqueInput!
  create: PaymentCreateWithoutReceivedByInput!
}

input PaymentWhereUniqueInput {
  id: String
  AND: [PaymentWhereInput!]
  OR: [PaymentWhereInput!]
  NOT: [PaymentWhereInput!]
  type: EnumPaymentTypeFilter
  sourceId: StringFilter
  referenceEntity: StringFilter
  referenceId: StringFilter
  amount: FloatFilter
  method: EnumPaymentMethodFilter
  receivedAt: DateTimeFilter
  receivedById: StringFilter
  receivedBy: UserScalarRelationFilter
}

input PaymentCreateManyReceivedByInputEnvelope {
  data: [PaymentCreateManyReceivedByInput!]!
  skipDuplicates: Boolean
}

input PaymentCreateManyReceivedByInput {
  id: String
  type: PaymentType!
  sourceId: String!
  referenceEntity: String!
  referenceId: String!
  amount: Float!
  method: PaymentMethod!
  receivedAt: DateTime
}

input ResellerTierHistoryCreateNestedManyWithoutUserInput {
  create: [ResellerTierHistoryCreateWithoutUserInput!]
  connectOrCreate: [ResellerTierHistoryCreateOrConnectWithoutUserInput!]
  createMany: ResellerTierHistoryCreateManyUserInputEnvelope
  connect: [ResellerTierHistoryWhereUniqueInput!]
}

input ResellerTierHistoryCreateWithoutUserInput {
  id: String
  fromTier: UserTier!
  toTier: UserTier!
  changedAt: DateTime
  admin: UserCreateNestedOneWithoutResellerTierHistoryChangedBysInput!
}

input UserCreateNestedOneWithoutResellerTierHistoryChangedBysInput {
  create: UserCreateWithoutResellerTierHistoryChangedBysInput
  connectOrCreate: UserCreateOrConnectWithoutResellerTierHistoryChangedBysInput
  connect: UserWhereUniqueInput
}

input UserCreateWithoutResellerTierHistoryChangedBysInput {
  id: String
  email: String!
  passwordHash: String!
  tier: UserTier
  referralCode: String
  referredBy: String
  createdAt: DateTime
  updatedAt: DateTime
  isEmailVerified: Boolean
  emailVerificationToken: String
  emailVerificationTokenExpiry: DateTime
  role: RoleCreateNestedOneWithoutUsersInput!
  resellerProfile: ResellerProfileCreateNestedOneWithoutUserInput
  customerProfile: CustomerProfileCreateNestedOneWithoutUserInput
  resellerPaymentsMade: ResellerPaymentCreateNestedManyWithoutResellerInput
  resellerPaymentsReceived: ResellerPaymentCreateNestedManyWithoutReceivedByInput
  adminLogs: AdminActionLogCreateNestedManyWithoutAdminInput
  supportMessages: SupportMessageCreateNestedManyWithoutUserInput
  ConsumerSale: ConsumerSaleCreateNestedManyWithoutBillerInput
  ConsumerSaleAdjustedBys: ConsumerSaleCreateNestedManyWithoutAdjustedByInput
  StockReceiptBatchReceivedBys: StockReceiptBatchCreateNestedManyWithoutReceivedByInput
  StockReceiptBatchConfirmedBys: StockReceiptBatchCreateNestedManyWithoutConfirmedByInput
  StockTransferRequests: StockTransferCreateNestedManyWithoutRequestedByInput
  StockTransferApprovals: StockTransferCreateNestedManyWithoutApprovedByInput
  Store: StoreCreateNestedManyWithoutManagerInput
  ConsumerReceipt: ConsumerReceiptCreateNestedManyWithoutIssuedByInput
  ResellerSales: ResellerSaleCreateNestedManyWithoutResellerInput
  BillerResellerSale: ResellerSaleCreateNestedManyWithoutBillerInput
  ResellerSale: ResellerSaleCreateNestedManyWithoutApprovedByInput
  SalesReturnReceivers: SalesReturnCreateNestedManyWithoutReceivedByInput
  SalesReturnRequesters: SalesReturnCreateNestedManyWithoutReturnedByInput
  SalesReturn: SalesReturnCreateNestedManyWithoutApprovedByInput
  PurchaseReturnInitiators: PurchaseReturnCreateNestedManyWithoutInitiatedByInput
  PurchaseReturnApprovers: PurchaseReturnCreateNestedManyWithoutApprovedByInput
  Payment: PaymentCreateNestedManyWithoutReceivedByInput
  ResellerTierHistory: ResellerTierHistoryCreateNestedManyWithoutUserInput
  ResellerProfile: ResellerProfileCreateNestedManyWithoutBillerInput
  RequestedResellers: ResellerProfileCreateNestedManyWithoutRequestedBillerInput
  Notification: NotificationCreateNestedManyWithoutUserInput
  Fulfillment: FulfillmentCreateNestedManyWithoutDeliveryPersonnelInput
  BillerQuotation: QuotationCreateNestedManyWithoutBillerInput
  ResellerQuotation: QuotationCreateNestedManyWithoutResellerInput
  PurchaseRequisition: PurchaseRequisitionCreateNestedManyWithoutRequestedByInput
  Supplier: SupplierCreateNestedManyWithoutUserInput
}

input ResellerProfileCreateNestedManyWithoutBillerInput {
  create: [ResellerProfileCreateWithoutBillerInput!]
  connectOrCreate: [ResellerProfileCreateOrConnectWithoutBillerInput!]
  createMany: ResellerProfileCreateManyBillerInputEnvelope
  connect: [ResellerProfileWhereUniqueInput!]
}

input ResellerProfileCreateWithoutBillerInput {
  tier: UserTier!
  creditLimit: Float!
  outstandingBalance: Float
  isActive: Boolean
  profileStatus: ProfileStatus
  requestedAt: DateTime
  activatedAt: DateTime
  rejectedAt: DateTime
  rejectionReason: String
  user: UserCreateNestedOneWithoutResellerProfileInput!
  requestedBiller: UserCreateNestedOneWithoutRequestedResellersInput
}

input UserCreateNestedOneWithoutRequestedResellersInput {
  create: UserCreateWithoutRequestedResellersInput
  connectOrCreate: UserCreateOrConnectWithoutRequestedResellersInput
  connect: UserWhereUniqueInput
}

input UserCreateWithoutRequestedResellersInput {
  id: String
  email: String!
  passwordHash: String!
  tier: UserTier
  referralCode: String
  referredBy: String
  createdAt: DateTime
  updatedAt: DateTime
  isEmailVerified: Boolean
  emailVerificationToken: String
  emailVerificationTokenExpiry: DateTime
  role: RoleCreateNestedOneWithoutUsersInput!
  resellerProfile: ResellerProfileCreateNestedOneWithoutUserInput
  customerProfile: CustomerProfileCreateNestedOneWithoutUserInput
  resellerPaymentsMade: ResellerPaymentCreateNestedManyWithoutResellerInput
  resellerPaymentsReceived: ResellerPaymentCreateNestedManyWithoutReceivedByInput
  adminLogs: AdminActionLogCreateNestedManyWithoutAdminInput
  supportMessages: SupportMessageCreateNestedManyWithoutUserInput
  ConsumerSale: ConsumerSaleCreateNestedManyWithoutBillerInput
  ConsumerSaleAdjustedBys: ConsumerSaleCreateNestedManyWithoutAdjustedByInput
  StockReceiptBatchReceivedBys: StockReceiptBatchCreateNestedManyWithoutReceivedByInput
  StockReceiptBatchConfirmedBys: StockReceiptBatchCreateNestedManyWithoutConfirmedByInput
  StockTransferRequests: StockTransferCreateNestedManyWithoutRequestedByInput
  StockTransferApprovals: StockTransferCreateNestedManyWithoutApprovedByInput
  Store: StoreCreateNestedManyWithoutManagerInput
  ConsumerReceipt: ConsumerReceiptCreateNestedManyWithoutIssuedByInput
  ResellerSales: ResellerSaleCreateNestedManyWithoutResellerInput
  BillerResellerSale: ResellerSaleCreateNestedManyWithoutBillerInput
  ResellerSale: ResellerSaleCreateNestedManyWithoutApprovedByInput
  SalesReturnReceivers: SalesReturnCreateNestedManyWithoutReceivedByInput
  SalesReturnRequesters: SalesReturnCreateNestedManyWithoutReturnedByInput
  SalesReturn: SalesReturnCreateNestedManyWithoutApprovedByInput
  PurchaseReturnInitiators: PurchaseReturnCreateNestedManyWithoutInitiatedByInput
  PurchaseReturnApprovers: PurchaseReturnCreateNestedManyWithoutApprovedByInput
  Payment: PaymentCreateNestedManyWithoutReceivedByInput
  ResellerTierHistory: ResellerTierHistoryCreateNestedManyWithoutUserInput
  ResellerTierHistoryChangedBys: ResellerTierHistoryCreateNestedManyWithoutAdminInput
  ResellerProfile: ResellerProfileCreateNestedManyWithoutBillerInput
  Notification: NotificationCreateNestedManyWithoutUserInput
  Fulfillment: FulfillmentCreateNestedManyWithoutDeliveryPersonnelInput
  BillerQuotation: QuotationCreateNestedManyWithoutBillerInput
  ResellerQuotation: QuotationCreateNestedManyWithoutResellerInput
  PurchaseRequisition: PurchaseRequisitionCreateNestedManyWithoutRequestedByInput
  Supplier: SupplierCreateNestedManyWithoutUserInput
}

input ResellerTierHistoryCreateNestedManyWithoutAdminInput {
  create: [ResellerTierHistoryCreateWithoutAdminInput!]
  connectOrCreate: [ResellerTierHistoryCreateOrConnectWithoutAdminInput!]
  createMany: ResellerTierHistoryCreateManyAdminInputEnvelope
  connect: [ResellerTierHistoryWhereUniqueInput!]
}

input ResellerTierHistoryCreateWithoutAdminInput {
  id: String
  fromTier: UserTier!
  toTier: UserTier!
  changedAt: DateTime
  user: UserCreateNestedOneWithoutResellerTierHistoryInput!
}

input UserCreateNestedOneWithoutResellerTierHistoryInput {
  create: UserCreateWithoutResellerTierHistoryInput
  connectOrCreate: UserCreateOrConnectWithoutResellerTierHistoryInput
  connect: UserWhereUniqueInput
}

input UserCreateWithoutResellerTierHistoryInput {
  id: String
  email: String!
  passwordHash: String!
  tier: UserTier
  referralCode: String
  referredBy: String
  createdAt: DateTime
  updatedAt: DateTime
  isEmailVerified: Boolean
  emailVerificationToken: String
  emailVerificationTokenExpiry: DateTime
  role: RoleCreateNestedOneWithoutUsersInput!
  resellerProfile: ResellerProfileCreateNestedOneWithoutUserInput
  customerProfile: CustomerProfileCreateNestedOneWithoutUserInput
  resellerPaymentsMade: ResellerPaymentCreateNestedManyWithoutResellerInput
  resellerPaymentsReceived: ResellerPaymentCreateNestedManyWithoutReceivedByInput
  adminLogs: AdminActionLogCreateNestedManyWithoutAdminInput
  supportMessages: SupportMessageCreateNestedManyWithoutUserInput
  ConsumerSale: ConsumerSaleCreateNestedManyWithoutBillerInput
  ConsumerSaleAdjustedBys: ConsumerSaleCreateNestedManyWithoutAdjustedByInput
  StockReceiptBatchReceivedBys: StockReceiptBatchCreateNestedManyWithoutReceivedByInput
  StockReceiptBatchConfirmedBys: StockReceiptBatchCreateNestedManyWithoutConfirmedByInput
  StockTransferRequests: StockTransferCreateNestedManyWithoutRequestedByInput
  StockTransferApprovals: StockTransferCreateNestedManyWithoutApprovedByInput
  Store: StoreCreateNestedManyWithoutManagerInput
  ConsumerReceipt: ConsumerReceiptCreateNestedManyWithoutIssuedByInput
  ResellerSales: ResellerSaleCreateNestedManyWithoutResellerInput
  BillerResellerSale: ResellerSaleCreateNestedManyWithoutBillerInput
  ResellerSale: ResellerSaleCreateNestedManyWithoutApprovedByInput
  SalesReturnReceivers: SalesReturnCreateNestedManyWithoutReceivedByInput
  SalesReturnRequesters: SalesReturnCreateNestedManyWithoutReturnedByInput
  SalesReturn: SalesReturnCreateNestedManyWithoutApprovedByInput
  PurchaseReturnInitiators: PurchaseReturnCreateNestedManyWithoutInitiatedByInput
  PurchaseReturnApprovers: PurchaseReturnCreateNestedManyWithoutApprovedByInput
  Payment: PaymentCreateNestedManyWithoutReceivedByInput
  ResellerTierHistoryChangedBys: ResellerTierHistoryCreateNestedManyWithoutAdminInput
  ResellerProfile: ResellerProfileCreateNestedManyWithoutBillerInput
  RequestedResellers: ResellerProfileCreateNestedManyWithoutRequestedBillerInput
  Notification: NotificationCreateNestedManyWithoutUserInput
  Fulfillment: FulfillmentCreateNestedManyWithoutDeliveryPersonnelInput
  BillerQuotation: QuotationCreateNestedManyWithoutBillerInput
  ResellerQuotation: QuotationCreateNestedManyWithoutResellerInput
  PurchaseRequisition: PurchaseRequisitionCreateNestedManyWithoutRequestedByInput
  Supplier: SupplierCreateNestedManyWithoutUserInput
}

input ResellerProfileCreateNestedManyWithoutRequestedBillerInput {
  create: [ResellerProfileCreateWithoutRequestedBillerInput!]
  connectOrCreate: [ResellerProfileCreateOrConnectWithoutRequestedBillerInput!]
  createMany: ResellerProfileCreateManyRequestedBillerInputEnvelope
  connect: [ResellerProfileWhereUniqueInput!]
}

input ResellerProfileCreateWithoutRequestedBillerInput {
  tier: UserTier!
  creditLimit: Float!
  outstandingBalance: Float
  isActive: Boolean
  profileStatus: ProfileStatus
  requestedAt: DateTime
  activatedAt: DateTime
  rejectedAt: DateTime
  rejectionReason: String
  user: UserCreateNestedOneWithoutResellerProfileInput!
  biller: UserCreateNestedOneWithoutResellerProfileInput
}

input ResellerProfileCreateOrConnectWithoutRequestedBillerInput {
  where: ResellerProfileWhereUniqueInput!
  create: ResellerProfileCreateWithoutRequestedBillerInput!
}

input ResellerProfileWhereUniqueInput {
  userId: String
  AND: [ResellerProfileWhereInput!]
  OR: [ResellerProfileWhereInput!]
  NOT: [ResellerProfileWhereInput!]
  billerId: StringNullableFilter
  requestedBillerId: StringNullableFilter
  tier: EnumUserTierFilter
  creditLimit: FloatFilter
  outstandingBalance: FloatFilter
  isActive: BoolFilter
  profileStatus: EnumProfileStatusFilter
  requestedAt: DateTimeFilter
  activatedAt: DateTimeNullableFilter
  rejectedAt: DateTimeNullableFilter
  rejectionReason: StringNullableFilter
  user: UserScalarRelationFilter
  biller: UserNullableScalarRelationFilter
  requestedBiller: UserNullableScalarRelationFilter
}

input ResellerProfileCreateManyRequestedBillerInputEnvelope {
  data: [ResellerProfileCreateManyRequestedBillerInput!]!
  skipDuplicates: Boolean
}

input ResellerProfileCreateManyRequestedBillerInput {
  userId: String!
  billerId: String
  tier: UserTier!
  creditLimit: Float!
  outstandingBalance: Float
  isActive: Boolean
  profileStatus: ProfileStatus
  requestedAt: DateTime
  activatedAt: DateTime
  rejectedAt: DateTime
  rejectionReason: String
}

input NotificationCreateNestedManyWithoutUserInput {
  create: [NotificationCreateWithoutUserInput!]
  connectOrCreate: [NotificationCreateOrConnectWithoutUserInput!]
  createMany: NotificationCreateManyUserInputEnvelope
  connect: [NotificationWhereUniqueInput!]
}

input NotificationCreateWithoutUserInput {
  id: String
  type: String!
  message: String!
  isRead: Boolean
  createdAt: DateTime
}

input NotificationCreateOrConnectWithoutUserInput {
  where: NotificationWhereUniqueInput!
  create: NotificationCreateWithoutUserInput!
}

input NotificationWhereUniqueInput {
  id: String
  AND: [NotificationWhereInput!]
  OR: [NotificationWhereInput!]
  NOT: [NotificationWhereInput!]
  userId: StringFilter
  type: StringFilter
  message: StringFilter
  isRead: BoolFilter
  createdAt: DateTimeFilter
  user: UserScalarRelationFilter
}

input NotificationCreateManyUserInputEnvelope {
  data: [NotificationCreateManyUserInput!]!
  skipDuplicates: Boolean
}

input NotificationCreateManyUserInput {
  id: String
  type: String!
  message: String!
  isRead: Boolean
  createdAt: DateTime
}

input FulfillmentCreateNestedManyWithoutDeliveryPersonnelInput {
  create: [FulfillmentCreateWithoutDeliveryPersonnelInput!]
  connectOrCreate: [FulfillmentCreateOrConnectWithoutDeliveryPersonnelInput!]
  createMany: FulfillmentCreateManyDeliveryPersonnelInputEnvelope
  connect: [FulfillmentWhereUniqueInput!]
}

input FulfillmentCreateWithoutDeliveryPersonnelInput {
  id: String
  type: FulfillmentType!
  deliveryAddress: String
  status: FulfillmentStatus
  cost: Float
  confirmationPin: String
  createdAt: DateTime
  updatedAt: DateTime
  saleOrder: SaleOrderCreateNestedOneWithoutFulfillmentInput!
}

input SaleOrderCreateNestedOneWithoutFulfillmentInput {
  create: SaleOrderCreateWithoutFulfillmentInput
  connectOrCreate: SaleOrderCreateOrConnectWithoutFulfillmentInput
  connect: SaleOrderWhereUniqueInput
}

input SaleOrderCreateWithoutFulfillmentInput {
  id: String
  storeId: String!
  billerId: String!
  type: SaleType!
  status: SaleStatus
  phase: OrderPhase
  totalAmount: Float!
  createdAt: DateTime
  updatedAt: DateTime
  resellerSaleid: String
  consumerSale: ConsumerSaleCreateNestedOneWithoutSaleOrderInput
  resellerSale: ResellerSaleCreateNestedOneWithoutSaleOrderInput
  quotation: QuotationCreateNestedOneWithoutSaleOrderInput
  ConsumerPayment: ConsumerPaymentCreateNestedManyWithoutSaleOrderInput
  ResellerPayment: ResellerPaymentCreateNestedManyWithoutSaleOrderInput
}

input QuotationCreateNestedOneWithoutSaleOrderInput {
  create: QuotationCreateWithoutSaleOrderInput
  connectOrCreate: QuotationCreateOrConnectWithoutSaleOrderInput
  connect: QuotationWhereUniqueInput
}

input QuotationCreateWithoutSaleOrderInput {
  id: String
  type: SaleType!
  channel: SaleChannel!
  status: QuotationStatus
  totalAmount: Float!
  createdAt: DateTime
  updatedAt: DateTime
  store: StoreCreateNestedOneWithoutQuotationInput!
  biller: UserCreateNestedOneWithoutBillerQuotationInput
  consumer: CustomerCreateNestedOneWithoutQuotationInput
  reseller: UserCreateNestedOneWithoutResellerQuotationInput
  items: QuotationItemCreateNestedManyWithoutQuotationInput
  sale: ResellerSaleCreateNestedOneWithoutQuotationInput
  ConsumerSale: ConsumerSaleCreateNestedManyWithoutQuotationInput
}

input QuotationItemCreateNestedManyWithoutQuotationInput {
  create: [QuotationItemCreateWithoutQuotationInput!]
  connectOrCreate: [QuotationItemCreateOrConnectWithoutQuotationInput!]
  createMany: QuotationItemCreateManyQuotationInputEnvelope
  connect: [QuotationItemWhereUniqueInput!]
}

input QuotationItemCreateWithoutQuotationInput {
  id: String
  quantity: Int!
  unitPrice: Float!
  productVariant: ProductVariantCreateNestedOneWithoutQuotationItemsInput!
}

input ProductVariantCreateNestedOneWithoutQuotationItemsInput {
  create: ProductVariantCreateWithoutQuotationItemsInput
  connectOrCreate: ProductVariantCreateOrConnectWithoutQuotationItemsInput
  connect: ProductVariantWhereUniqueInput
}

input ProductVariantCreateWithoutQuotationItemsInput {
  id: String
  name: String
  size: String!
  concentration: String!
  packaging: String!
  barcode: String
  price: Float!
  resellerPrice: Float!
  createdAt: DateTime
  updatedAt: DateTime
  product: ProductCreateNestedOneWithoutVariantsInput
  stockItems: StockCreateNestedManyWithoutProductVariantInput
  receiptItems: StockReceiptBatchItemCreateNestedManyWithoutProductVariantInput
  resellerItems: ResellerSaleItemCreateNestedManyWithoutProductVariantInput
  consumerItems: ConsumerSaleItemCreateNestedManyWithoutProductVariantInput
  returnItems: SalesReturnItemCreateNestedManyWithoutProductVariantInput
  purchaseReturnItems: PurchaseReturnItemCreateNestedManyWithoutProductVariantInput
  transferItems: StockTransferItemCreateNestedManyWithoutProductVariantInput
  stats: ProductSalesStatsCreateNestedOneWithoutProductVariantInput
  PurchaseOrderItem: PurchaseOrderItemCreateNestedManyWithoutProductVariantInput
  StockMovementItem: StockMovementItemCreateNestedManyWithoutProductVariantInput
  PurchaseRequisitionItem: PurchaseRequisitionItemCreateNestedManyWithoutProductVariantInput
  SupplierCatalog: SupplierCatalogCreateNestedManyWithoutProductVariantInput
  SupplierQuoteItem: SupplierQuoteItemCreateNestedManyWithoutProductVariantInput
  ProductVariantTierPrice: ProductVariantTierPriceCreateNestedManyWithoutVariantInput
  facets: VariantFacetValueCreateNestedManyWithoutVariantInput
}

input PurchaseReturnItemCreateNestedManyWithoutProductVariantInput {
  create: [PurchaseReturnItemCreateWithoutProductVariantInput!]
  connectOrCreate: [PurchaseReturnItemCreateOrConnectWithoutProductVariantInput!]
  createMany: PurchaseReturnItemCreateManyProductVariantInputEnvelope
  connect: [PurchaseReturnItemWhereUniqueInput!]
}

input PurchaseReturnItemCreateWithoutProductVariantInput {
  id: String
  quantity: Int!
  return: PurchaseReturnCreateNestedOneWithoutItemsInput!
  batch: StockReceiptBatchCreateNestedOneWithoutPurchaseReturnsInput!
}

input PurchaseReturnCreateNestedOneWithoutItemsInput {
  create: PurchaseReturnCreateWithoutItemsInput
  connectOrCreate: PurchaseReturnCreateOrConnectWithoutItemsInput
  connect: PurchaseReturnWhereUniqueInput
}

input PurchaseReturnCreateWithoutItemsInput {
  id: String
  status: ReturnStatus!
  reason: String
  createdAt: DateTime
  updatedAt: DateTime
  supplier: SupplierCreateNestedOneWithoutReturnsInput!
  initiatedBy: UserCreateNestedOneWithoutPurchaseReturnInitiatorsInput!
  approvedBy: UserCreateNestedOneWithoutPurchaseReturnApproversInput!
}

input UserCreateNestedOneWithoutPurchaseReturnApproversInput {
  create: UserCreateWithoutPurchaseReturnApproversInput
  connectOrCreate: UserCreateOrConnectWithoutPurchaseReturnApproversInput
  connect: UserWhereUniqueInput
}

input UserCreateWithoutPurchaseReturnApproversInput {
  id: String
  email: String!
  passwordHash: String!
  tier: UserTier
  referralCode: String
  referredBy: String
  createdAt: DateTime
  updatedAt: DateTime
  isEmailVerified: Boolean
  emailVerificationToken: String
  emailVerificationTokenExpiry: DateTime
  role: RoleCreateNestedOneWithoutUsersInput!
  resellerProfile: ResellerProfileCreateNestedOneWithoutUserInput
  customerProfile: CustomerProfileCreateNestedOneWithoutUserInput
  resellerPaymentsMade: ResellerPaymentCreateNestedManyWithoutResellerInput
  resellerPaymentsReceived: ResellerPaymentCreateNestedManyWithoutReceivedByInput
  adminLogs: AdminActionLogCreateNestedManyWithoutAdminInput
  supportMessages: SupportMessageCreateNestedManyWithoutUserInput
  ConsumerSale: ConsumerSaleCreateNestedManyWithoutBillerInput
  ConsumerSaleAdjustedBys: ConsumerSaleCreateNestedManyWithoutAdjustedByInput
  StockReceiptBatchReceivedBys: StockReceiptBatchCreateNestedManyWithoutReceivedByInput
  StockReceiptBatchConfirmedBys: StockReceiptBatchCreateNestedManyWithoutConfirmedByInput
  StockTransferRequests: StockTransferCreateNestedManyWithoutRequestedByInput
  StockTransferApprovals: StockTransferCreateNestedManyWithoutApprovedByInput
  Store: StoreCreateNestedManyWithoutManagerInput
  ConsumerReceipt: ConsumerReceiptCreateNestedManyWithoutIssuedByInput
  ResellerSales: ResellerSaleCreateNestedManyWithoutResellerInput
  BillerResellerSale: ResellerSaleCreateNestedManyWithoutBillerInput
  ResellerSale: ResellerSaleCreateNestedManyWithoutApprovedByInput
  SalesReturnReceivers: SalesReturnCreateNestedManyWithoutReceivedByInput
  SalesReturnRequesters: SalesReturnCreateNestedManyWithoutReturnedByInput
  SalesReturn: SalesReturnCreateNestedManyWithoutApprovedByInput
  PurchaseReturnInitiators: PurchaseReturnCreateNestedManyWithoutInitiatedByInput
  Payment: PaymentCreateNestedManyWithoutReceivedByInput
  ResellerTierHistory: ResellerTierHistoryCreateNestedManyWithoutUserInput
  ResellerTierHistoryChangedBys: ResellerTierHistoryCreateNestedManyWithoutAdminInput
  ResellerProfile: ResellerProfileCreateNestedManyWithoutBillerInput
  RequestedResellers: ResellerProfileCreateNestedManyWithoutRequestedBillerInput
  Notification: NotificationCreateNestedManyWithoutUserInput
  Fulfillment: FulfillmentCreateNestedManyWithoutDeliveryPersonnelInput
  BillerQuotation: QuotationCreateNestedManyWithoutBillerInput
  ResellerQuotation: QuotationCreateNestedManyWithoutResellerInput
  PurchaseRequisition: PurchaseRequisitionCreateNestedManyWithoutRequestedByInput
  Supplier: SupplierCreateNestedManyWithoutUserInput
}

input QuotationCreateNestedManyWithoutBillerInput {
  create: [QuotationCreateWithoutBillerInput!]
  connectOrCreate: [QuotationCreateOrConnectWithoutBillerInput!]
  createMany: QuotationCreateManyBillerInputEnvelope
  connect: [QuotationWhereUniqueInput!]
}

input QuotationCreateWithoutBillerInput {
  id: String
  type: SaleType!
  channel: SaleChannel!
  status: QuotationStatus
  totalAmount: Float!
  createdAt: DateTime
  updatedAt: DateTime
  store: StoreCreateNestedOneWithoutQuotationInput!
  consumer: CustomerCreateNestedOneWithoutQuotationInput
  reseller: UserCreateNestedOneWithoutResellerQuotationInput
  items: QuotationItemCreateNestedManyWithoutQuotationInput
  sale: ResellerSaleCreateNestedOneWithoutQuotationInput
  SaleOrder: SaleOrderCreateNestedOneWithoutQuotationInput
  ConsumerSale: ConsumerSaleCreateNestedManyWithoutQuotationInput
}

input ResellerSaleCreateNestedOneWithoutQuotationInput {
  create: ResellerSaleCreateWithoutQuotationInput
  connectOrCreate: ResellerSaleCreateOrConnectWithoutQuotationInput
  connect: ResellerSaleWhereUniqueInput
}

input ResellerSaleCreateWithoutQuotationInput {
  id: String
  status: SaleStatus!
  totalAmount: Float!
  approvedAt: DateTime
  createdAt: DateTime
  updatedAt: DateTime
  reseller: UserCreateNestedOneWithoutResellerSalesInput!
  biller: UserCreateNestedOneWithoutBillerResellerSaleInput!
  approvedBy: UserCreateNestedOneWithoutResellerSaleInput
  store: StoreCreateNestedOneWithoutResellerSalesInput!
  items: ResellerSaleItemCreateNestedManyWithoutSaleInput
  payments: ResellerPaymentCreateNestedManyWithoutSaleInput
  SalesReturn: SalesReturnCreateNestedManyWithoutResellerSaleInput
  SaleOrder: SaleOrderCreateNestedOneWithoutResellerSaleInput!
}

input SalesReturnCreateNestedManyWithoutResellerSaleInput {
  create: [SalesReturnCreateWithoutResellerSaleInput!]
  connectOrCreate: [SalesReturnCreateOrConnectWithoutResellerSaleInput!]
  createMany: SalesReturnCreateManyResellerSaleInputEnvelope
  connect: [SalesReturnWhereUniqueInput!]
}

input SalesReturnCreateWithoutResellerSaleInput {
  id: String
  type: SaleType!
  status: ReturnStatus!
  returnLocation: ReturnLocation!
  isApprovedLate: Boolean
  createdAt: DateTime
  updatedAt: DateTime
  consumerSale: ConsumerSaleCreateNestedOneWithoutSalesReturnInput
  returnedBy: UserCreateNestedOneWithoutSalesReturnRequestersInput!
  receivedBy: UserCreateNestedOneWithoutSalesReturnReceiversInput!
  approvedBy: UserCreateNestedOneWithoutSalesReturnInput
  store: StoreCreateNestedOneWithoutSalesReturnsInput!
  items: SalesReturnItemCreateNestedManyWithoutReturnInput
}

input SalesReturnItemCreateNestedManyWithoutReturnInput {
  create: [SalesReturnItemCreateWithoutReturnInput!]
  connectOrCreate: [SalesReturnItemCreateOrConnectWithoutReturnInput!]
  createMany: SalesReturnItemCreateManyReturnInputEnvelope
  connect: [SalesReturnItemWhereUniqueInput!]
}

input SalesReturnItemCreateWithoutReturnInput {
  id: String
  quantity: Int!
  condition: String!
  productVariant: ProductVariantCreateNestedOneWithoutReturnItemsInput!
}

input ProductVariantCreateNestedOneWithoutReturnItemsInput {
  create: ProductVariantCreateWithoutReturnItemsInput
  connectOrCreate: ProductVariantCreateOrConnectWithoutReturnItemsInput
  connect: ProductVariantWhereUniqueInput
}

input ProductVariantCreateWithoutReturnItemsInput {
  id: String
  name: String
  size: String!
  concentration: String!
  packaging: String!
  barcode: String
  price: Float!
  resellerPrice: Float!
  createdAt: DateTime
  updatedAt: DateTime
  product: ProductCreateNestedOneWithoutVariantsInput
  stockItems: StockCreateNestedManyWithoutProductVariantInput
  receiptItems: StockReceiptBatchItemCreateNestedManyWithoutProductVariantInput
  quotationItems: QuotationItemCreateNestedManyWithoutProductVariantInput
  resellerItems: ResellerSaleItemCreateNestedManyWithoutProductVariantInput
  consumerItems: ConsumerSaleItemCreateNestedManyWithoutProductVariantInput
  purchaseReturnItems: PurchaseReturnItemCreateNestedManyWithoutProductVariantInput
  transferItems: StockTransferItemCreateNestedManyWithoutProductVariantInput
  stats: ProductSalesStatsCreateNestedOneWithoutProductVariantInput
  PurchaseOrderItem: PurchaseOrderItemCreateNestedManyWithoutProductVariantInput
  StockMovementItem: StockMovementItemCreateNestedManyWithoutProductVariantInput
  PurchaseRequisitionItem: PurchaseRequisitionItemCreateNestedManyWithoutProductVariantInput
  SupplierCatalog: SupplierCatalogCreateNestedManyWithoutProductVariantInput
  SupplierQuoteItem: SupplierQuoteItemCreateNestedManyWithoutProductVariantInput
  ProductVariantTierPrice: ProductVariantTierPriceCreateNestedManyWithoutVariantInput
  facets: VariantFacetValueCreateNestedManyWithoutVariantInput
}

input StockTransferItemCreateNestedManyWithoutProductVariantInput {
  create: [StockTransferItemCreateWithoutProductVariantInput!]
  connectOrCreate: [StockTransferItemCreateOrConnectWithoutProductVariantInput!]
  createMany: StockTransferItemCreateManyProductVariantInputEnvelope
  connect: [StockTransferItemWhereUniqueInput!]
}

input StockTransferItemCreateWithoutProductVariantInput {
  id: String
  quantity: Int!
  transfer: StockTransferCreateNestedOneWithoutItemsInput!
}

input StockTransferCreateNestedOneWithoutItemsInput {
  create: StockTransferCreateWithoutItemsInput
  connectOrCreate: StockTransferCreateOrConnectWithoutItemsInput
  connect: StockTransferWhereUniqueInput
}

input StockTransferCreateWithoutItemsInput {
  id: String
  status: TransferStatus!
  createdAt: DateTime
  fromStore: StoreCreateNestedOneWithoutTransfersOutInput!
  toStore: StoreCreateNestedOneWithoutTransfersInInput!
  requestedBy: UserCreateNestedOneWithoutStockTransferRequestsInput!
  approvedBy: UserCreateNestedOneWithoutStockTransferApprovalsInput!
}

input StockTransferCreateOrConnectWithoutItemsInput {
  where: StockTransferWhereUniqueInput!
  create: StockTransferCreateWithoutItemsInput!
}

input StockTransferWhereUniqueInput {
  id: String
  AND: [StockTransferWhereInput!]
  OR: [StockTransferWhereInput!]
  NOT: [StockTransferWhereInput!]
  fromStoreId: StringFilter
  toStoreId: StringFilter
  requestedById: StringFilter
  approvedById: StringFilter
  status: EnumTransferStatusFilter
  createdAt: DateTimeFilter
  fromStore: StoreScalarRelationFilter
  toStore: StoreScalarRelationFilter
  requestedBy: UserScalarRelationFilter
  approvedBy: UserScalarRelationFilter
  items: StockTransferItemListRelationFilter
}

input StockTransferItemCreateOrConnectWithoutProductVariantInput {
  where: StockTransferItemWhereUniqueInput!
  create: StockTransferItemCreateWithoutProductVariantInput!
}

input StockTransferItemWhereUniqueInput {
  id: String
  AND: [StockTransferItemWhereInput!]
  OR: [StockTransferItemWhereInput!]
  NOT: [StockTransferItemWhereInput!]
  stockTransferId: StringFilter
  productVariantId: StringFilter
  quantity: IntFilter
  transfer: StockTransferScalarRelationFilter
  productVariant: ProductVariantScalarRelationFilter
}

input StockTransferItemCreateManyProductVariantInputEnvelope {
  data: [StockTransferItemCreateManyProductVariantInput!]!
  skipDuplicates: Boolean
}

input StockTransferItemCreateManyProductVariantInput {
  id: String
  stockTransferId: String!
  quantity: Int!
}

input ProductSalesStatsCreateNestedOneWithoutProductVariantInput {
  create: ProductSalesStatsCreateWithoutProductVariantInput
  connectOrCreate: ProductSalesStatsCreateOrConnectWithoutProductVariantInput
  connect: ProductSalesStatsWhereUniqueInput
}

input ProductSalesStatsCreateWithoutProductVariantInput {
  id: String
  totalSold: Int
  totalReturned: Int
  lastSoldAt: DateTime
  monthlySales: JSON!
}

input ProductSalesStatsCreateOrConnectWithoutProductVariantInput {
  where: ProductSalesStatsWhereUniqueInput!
  create: ProductSalesStatsCreateWithoutProductVariantInput!
}

input ProductSalesStatsWhereUniqueInput {
  id: String
  productVariantId: String
  AND: [ProductSalesStatsWhereInput!]
  OR: [ProductSalesStatsWhereInput!]
  NOT: [ProductSalesStatsWhereInput!]
  totalSold: IntFilter
  totalReturned: IntFilter
  lastSoldAt: DateTimeNullableFilter
  monthlySales: JsonFilter
  productVariant: ProductVariantScalarRelationFilter
}

input PurchaseOrderItemCreateNestedManyWithoutProductVariantInput {
  create: [PurchaseOrderItemCreateWithoutProductVariantInput!]
  connectOrCreate: [PurchaseOrderItemCreateOrConnectWithoutProductVariantInput!]
  createMany: PurchaseOrderItemCreateManyProductVariantInputEnvelope
  connect: [PurchaseOrderItemWhereUniqueInput!]
}

input PurchaseOrderItemCreateWithoutProductVariantInput {
  id: String
  quantity: Int!
  unitCost: Float!
  purchaseOrder: PurchaseOrderCreateNestedOneWithoutItemsInput!
}

input PurchaseOrderCreateNestedOneWithoutItemsInput {
  create: PurchaseOrderCreateWithoutItemsInput
  connectOrCreate: PurchaseOrderCreateOrConnectWithoutItemsInput
  connect: PurchaseOrderWhereUniqueInput
}

input PurchaseOrderCreateWithoutItemsInput {
  id: String
  invoiceNumber: String!
  status: PurchaseOrderStatus!
  phase: PurchasePhase
  dueDate: DateTime!
  totalAmount: Float!
  createdAt: DateTime
  updatedAt: DateTime
  supplier: SupplierCreateNestedOneWithoutPurchaseOrdersInput!
  store: StoreCreateNestedOneWithoutPurchaseOrdersInput
  receipts: StockReceiptBatchCreateNestedManyWithoutPurchaseOrderInput
  payments: SupplierPaymentCreateNestedManyWithoutPurchaseOrderInput
}

input SupplierCreateNestedOneWithoutPurchaseOrdersInput {
  create: SupplierCreateWithoutPurchaseOrdersInput
  connectOrCreate: SupplierCreateOrConnectWithoutPurchaseOrdersInput
  connect: SupplierWhereUniqueInput
}

input SupplierCreateWithoutPurchaseOrdersInput {
  id: String
  name: String!
  contactInfo: JSON
  isFrequent: Boolean
  creditLimit: Float!
  currentBalance: Float
  paymentTerms: String
  notes: String
  createdAt: DateTime
  updatedAt: DateTime
  payments: SupplierPaymentCreateNestedManyWithoutSupplierInput
  returns: PurchaseReturnCreateNestedManyWithoutSupplierInput
  catalogs: SupplierCatalogCreateNestedManyWithoutSupplierInput
  quotes: SupplierQuoteCreateNestedManyWithoutSupplierInput
  user: UserCreateNestedOneWithoutSupplierInput
}

input SupplierPaymentCreateNestedManyWithoutSupplierInput {
  create: [SupplierPaymentCreateWithoutSupplierInput!]
  connectOrCreate: [SupplierPaymentCreateOrConnectWithoutSupplierInput!]
  createMany: SupplierPaymentCreateManySupplierInputEnvelope
  connect: [SupplierPaymentWhereUniqueInput!]
}

input SupplierPaymentCreateWithoutSupplierInput {
  id: String
  amount: Float!
  paymentDate: DateTime!
  method: String!
  notes: String
  purchaseOrder: PurchaseOrderCreateNestedOneWithoutPaymentsInput
}

input PurchaseOrderCreateNestedOneWithoutPaymentsInput {
  create: PurchaseOrderCreateWithoutPaymentsInput
  connectOrCreate: PurchaseOrderCreateOrConnectWithoutPaymentsInput
  connect: PurchaseOrderWhereUniqueInput
}

input PurchaseOrderCreateWithoutPaymentsInput {
  id: String
  invoiceNumber: String!
  status: PurchaseOrderStatus!
  phase: PurchasePhase
  dueDate: DateTime!
  totalAmount: Float!
  createdAt: DateTime
  updatedAt: DateTime
  supplier: SupplierCreateNestedOneWithoutPurchaseOrdersInput!
  store: StoreCreateNestedOneWithoutPurchaseOrdersInput
  items: PurchaseOrderItemCreateNestedManyWithoutPurchaseOrderInput
  receipts: StockReceiptBatchCreateNestedManyWithoutPurchaseOrderInput
}

input PurchaseOrderItemCreateNestedManyWithoutPurchaseOrderInput {
  create: [PurchaseOrderItemCreateWithoutPurchaseOrderInput!]
  connectOrCreate: [PurchaseOrderItemCreateOrConnectWithoutPurchaseOrderInput!]
  createMany: PurchaseOrderItemCreateManyPurchaseOrderInputEnvelope
  connect: [PurchaseOrderItemWhereUniqueInput!]
}

input PurchaseOrderItemCreateWithoutPurchaseOrderInput {
  id: String
  quantity: Int!
  unitCost: Float!
  productVariant: ProductVariantCreateNestedOneWithoutPurchaseOrderItemInput!
}

input ProductVariantCreateNestedOneWithoutPurchaseOrderItemInput {
  create: ProductVariantCreateWithoutPurchaseOrderItemInput
  connectOrCreate: ProductVariantCreateOrConnectWithoutPurchaseOrderItemInput
  connect: ProductVariantWhereUniqueInput
}

input ProductVariantCreateWithoutPurchaseOrderItemInput {
  id: String
  name: String
  size: String!
  concentration: String!
  packaging: String!
  barcode: String
  price: Float!
  resellerPrice: Float!
  createdAt: DateTime
  updatedAt: DateTime
  product: ProductCreateNestedOneWithoutVariantsInput
  stockItems: StockCreateNestedManyWithoutProductVariantInput
  receiptItems: StockReceiptBatchItemCreateNestedManyWithoutProductVariantInput
  quotationItems: QuotationItemCreateNestedManyWithoutProductVariantInput
  resellerItems: ResellerSaleItemCreateNestedManyWithoutProductVariantInput
  consumerItems: ConsumerSaleItemCreateNestedManyWithoutProductVariantInput
  returnItems: SalesReturnItemCreateNestedManyWithoutProductVariantInput
  purchaseReturnItems: PurchaseReturnItemCreateNestedManyWithoutProductVariantInput
  transferItems: StockTransferItemCreateNestedManyWithoutProductVariantInput
  stats: ProductSalesStatsCreateNestedOneWithoutProductVariantInput
  StockMovementItem: StockMovementItemCreateNestedManyWithoutProductVariantInput
  PurchaseRequisitionItem: PurchaseRequisitionItemCreateNestedManyWithoutProductVariantInput
  SupplierCatalog: SupplierCatalogCreateNestedManyWithoutProductVariantInput
  SupplierQuoteItem: SupplierQuoteItemCreateNestedManyWithoutProductVariantInput
  ProductVariantTierPrice: ProductVariantTierPriceCreateNestedManyWithoutVariantInput
  facets: VariantFacetValueCreateNestedManyWithoutVariantInput
}

input StockMovementItemCreateNestedManyWithoutProductVariantInput {
  create: [StockMovementItemCreateWithoutProductVariantInput!]
  connectOrCreate: [StockMovementItemCreateOrConnectWithoutProductVariantInput!]
  createMany: StockMovementItemCreateManyProductVariantInputEnvelope
  connect: [StockMovementItemWhereUniqueInput!]
}

input StockMovementItemCreateWithoutProductVariantInput {
  id: String
  quantity: Int!
  movement: StockMovementCreateNestedOneWithoutItemsInput!
}

input StockMovementCreateNestedOneWithoutItemsInput {
  create: StockMovementCreateWithoutItemsInput
  connectOrCreate: StockMovementCreateOrConnectWithoutItemsInput
  connect: StockMovementWhereUniqueInput
}

input StockMovementCreateWithoutItemsInput {
  id: String
  direction: MovementDirection!
  movementType: MovementType!
  referenceEntity: String!
  referenceId: String!
  createdAt: DateTime
  store: StoreCreateNestedOneWithoutMovementsInput!
}

input StoreCreateNestedOneWithoutMovementsInput {
  create: StoreCreateWithoutMovementsInput
  connectOrCreate: StoreCreateOrConnectWithoutMovementsInput
  connect: StoreWhereUniqueInput
}

input StoreCreateWithoutMovementsInput {
  id: String
  name: String!
  location: String
  isMain: Boolean
  createdAt: DateTime
  updatedAt: DateTime
  manager: UserCreateNestedOneWithoutStoreInput!
  stocks: StockCreateNestedManyWithoutStoreInput
  receipts: StockReceiptBatchCreateNestedManyWithoutStoreInput
  transfersOut: StockTransferCreateNestedManyWithoutFromStoreInput
  transfersIn: StockTransferCreateNestedManyWithoutToStoreInput
  customerSales: ConsumerSaleCreateNestedManyWithoutStoreInput
  salesReturns: SalesReturnCreateNestedManyWithoutStoreInput
  resellerSales: ResellerSaleCreateNestedManyWithoutStoreInput
  Customer: CustomerCreateNestedManyWithoutPreferredStoreInput
  CustomerProfile: CustomerProfileCreateNestedManyWithoutPreferredStoreInput
  Quotation: QuotationCreateNestedManyWithoutStoreInput
  PurchaseRequisition: PurchaseRequisitionCreateNestedManyWithoutStoreInput
  purchaseOrders: PurchaseOrderCreateNestedManyWithoutStoreInput
  InvoiceImport: InvoiceImportCreateNestedManyWithoutStoreInput
}

input PurchaseRequisitionCreateNestedManyWithoutStoreInput {
  create: [PurchaseRequisitionCreateWithoutStoreInput!]
  connectOrCreate: [PurchaseRequisitionCreateOrConnectWithoutStoreInput!]
  createMany: PurchaseRequisitionCreateManyStoreInputEnvelope
  connect: [PurchaseRequisitionWhereUniqueInput!]
}

input PurchaseRequisitionCreateWithoutStoreInput {
  id: String
  status: PurchaseRequisitionStatus
  createdAt: DateTime
  updatedAt: DateTime
  requestedBy: UserCreateNestedOneWithoutPurchaseRequisitionInput!
  items: PurchaseRequisitionItemCreateNestedManyWithoutRequisitionInput
  quotes: SupplierQuoteCreateNestedManyWithoutRequisitionInput
}

input UserCreateNestedOneWithoutPurchaseRequisitionInput {
  create: UserCreateWithoutPurchaseRequisitionInput
  connectOrCreate: UserCreateOrConnectWithoutPurchaseRequisitionInput
  connect: UserWhereUniqueInput
}

input UserCreateWithoutPurchaseRequisitionInput {
  id: String
  email: String!
  passwordHash: String!
  tier: UserTier
  referralCode: String
  referredBy: String
  createdAt: DateTime
  updatedAt: DateTime
  isEmailVerified: Boolean
  emailVerificationToken: String
  emailVerificationTokenExpiry: DateTime
  role: RoleCreateNestedOneWithoutUsersInput!
  resellerProfile: ResellerProfileCreateNestedOneWithoutUserInput
  customerProfile: CustomerProfileCreateNestedOneWithoutUserInput
  resellerPaymentsMade: ResellerPaymentCreateNestedManyWithoutResellerInput
  resellerPaymentsReceived: ResellerPaymentCreateNestedManyWithoutReceivedByInput
  adminLogs: AdminActionLogCreateNestedManyWithoutAdminInput
  supportMessages: SupportMessageCreateNestedManyWithoutUserInput
  ConsumerSale: ConsumerSaleCreateNestedManyWithoutBillerInput
  ConsumerSaleAdjustedBys: ConsumerSaleCreateNestedManyWithoutAdjustedByInput
  StockReceiptBatchReceivedBys: StockReceiptBatchCreateNestedManyWithoutReceivedByInput
  StockReceiptBatchConfirmedBys: StockReceiptBatchCreateNestedManyWithoutConfirmedByInput
  StockTransferRequests: StockTransferCreateNestedManyWithoutRequestedByInput
  StockTransferApprovals: StockTransferCreateNestedManyWithoutApprovedByInput
  Store: StoreCreateNestedManyWithoutManagerInput
  ConsumerReceipt: ConsumerReceiptCreateNestedManyWithoutIssuedByInput
  ResellerSales: ResellerSaleCreateNestedManyWithoutResellerInput
  BillerResellerSale: ResellerSaleCreateNestedManyWithoutBillerInput
  ResellerSale: ResellerSaleCreateNestedManyWithoutApprovedByInput
  SalesReturnReceivers: SalesReturnCreateNestedManyWithoutReceivedByInput
  SalesReturnRequesters: SalesReturnCreateNestedManyWithoutReturnedByInput
  SalesReturn: SalesReturnCreateNestedManyWithoutApprovedByInput
  PurchaseReturnInitiators: PurchaseReturnCreateNestedManyWithoutInitiatedByInput
  PurchaseReturnApprovers: PurchaseReturnCreateNestedManyWithoutApprovedByInput
  Payment: PaymentCreateNestedManyWithoutReceivedByInput
  ResellerTierHistory: ResellerTierHistoryCreateNestedManyWithoutUserInput
  ResellerTierHistoryChangedBys: ResellerTierHistoryCreateNestedManyWithoutAdminInput
  ResellerProfile: ResellerProfileCreateNestedManyWithoutBillerInput
  RequestedResellers: ResellerProfileCreateNestedManyWithoutRequestedBillerInput
  Notification: NotificationCreateNestedManyWithoutUserInput
  Fulfillment: FulfillmentCreateNestedManyWithoutDeliveryPersonnelInput
  BillerQuotation: QuotationCreateNestedManyWithoutBillerInput
  ResellerQuotation: QuotationCreateNestedManyWithoutResellerInput
  Supplier: SupplierCreateNestedManyWithoutUserInput
}

input QuotationCreateNestedManyWithoutResellerInput {
  create: [QuotationCreateWithoutResellerInput!]
  connectOrCreate: [QuotationCreateOrConnectWithoutResellerInput!]
  createMany: QuotationCreateManyResellerInputEnvelope
  connect: [QuotationWhereUniqueInput!]
}

input QuotationCreateWithoutResellerInput {
  id: String
  type: SaleType!
  channel: SaleChannel!
  status: QuotationStatus
  totalAmount: Float!
  createdAt: DateTime
  updatedAt: DateTime
  store: StoreCreateNestedOneWithoutQuotationInput!
  biller: UserCreateNestedOneWithoutBillerQuotationInput
  consumer: CustomerCreateNestedOneWithoutQuotationInput
  items: QuotationItemCreateNestedManyWithoutQuotationInput
  sale: ResellerSaleCreateNestedOneWithoutQuotationInput
  SaleOrder: SaleOrderCreateNestedOneWithoutQuotationInput
  ConsumerSale: ConsumerSaleCreateNestedManyWithoutQuotationInput
}

input SaleOrderCreateNestedOneWithoutQuotationInput {
  create: SaleOrderCreateWithoutQuotationInput
  connectOrCreate: SaleOrderCreateOrConnectWithoutQuotationInput
  connect: SaleOrderWhereUniqueInput
}

input SaleOrderCreateWithoutQuotationInput {
  id: String
  storeId: String!
  billerId: String!
  type: SaleType!
  status: SaleStatus
  phase: OrderPhase
  totalAmount: Float!
  createdAt: DateTime
  updatedAt: DateTime
  resellerSaleid: String
  consumerSale: ConsumerSaleCreateNestedOneWithoutSaleOrderInput
  resellerSale: ResellerSaleCreateNestedOneWithoutSaleOrderInput
  fulfillment: FulfillmentCreateNestedOneWithoutSaleOrderInput
  ConsumerPayment: ConsumerPaymentCreateNestedManyWithoutSaleOrderInput
  ResellerPayment: ResellerPaymentCreateNestedManyWithoutSaleOrderInput
}

input FulfillmentCreateNestedOneWithoutSaleOrderInput {
  create: FulfillmentCreateWithoutSaleOrderInput
  connectOrCreate: FulfillmentCreateOrConnectWithoutSaleOrderInput
  connect: FulfillmentWhereUniqueInput
}

input FulfillmentCreateWithoutSaleOrderInput {
  id: String
  type: FulfillmentType!
  deliveryAddress: String
  status: FulfillmentStatus
  cost: Float
  confirmationPin: String
  createdAt: DateTime
  updatedAt: DateTime
  deliveryPersonnel: UserCreateNestedOneWithoutFulfillmentInput
}

input UserCreateNestedOneWithoutFulfillmentInput {
  create: UserCreateWithoutFulfillmentInput
  connectOrCreate: UserCreateOrConnectWithoutFulfillmentInput
  connect: UserWhereUniqueInput
}

input UserCreateWithoutFulfillmentInput {
  id: String
  email: String!
  passwordHash: String!
  tier: UserTier
  referralCode: String
  referredBy: String
  createdAt: DateTime
  updatedAt: DateTime
  isEmailVerified: Boolean
  emailVerificationToken: String
  emailVerificationTokenExpiry: DateTime
  role: RoleCreateNestedOneWithoutUsersInput!
  resellerProfile: ResellerProfileCreateNestedOneWithoutUserInput
  customerProfile: CustomerProfileCreateNestedOneWithoutUserInput
  resellerPaymentsMade: ResellerPaymentCreateNestedManyWithoutResellerInput
  resellerPaymentsReceived: ResellerPaymentCreateNestedManyWithoutReceivedByInput
  adminLogs: AdminActionLogCreateNestedManyWithoutAdminInput
  supportMessages: SupportMessageCreateNestedManyWithoutUserInput
  ConsumerSale: ConsumerSaleCreateNestedManyWithoutBillerInput
  ConsumerSaleAdjustedBys: ConsumerSaleCreateNestedManyWithoutAdjustedByInput
  StockReceiptBatchReceivedBys: StockReceiptBatchCreateNestedManyWithoutReceivedByInput
  StockReceiptBatchConfirmedBys: StockReceiptBatchCreateNestedManyWithoutConfirmedByInput
  StockTransferRequests: StockTransferCreateNestedManyWithoutRequestedByInput
  StockTransferApprovals: StockTransferCreateNestedManyWithoutApprovedByInput
  Store: StoreCreateNestedManyWithoutManagerInput
  ConsumerReceipt: ConsumerReceiptCreateNestedManyWithoutIssuedByInput
  ResellerSales: ResellerSaleCreateNestedManyWithoutResellerInput
  BillerResellerSale: ResellerSaleCreateNestedManyWithoutBillerInput
  ResellerSale: ResellerSaleCreateNestedManyWithoutApprovedByInput
  SalesReturnReceivers: SalesReturnCreateNestedManyWithoutReceivedByInput
  SalesReturnRequesters: SalesReturnCreateNestedManyWithoutReturnedByInput
  SalesReturn: SalesReturnCreateNestedManyWithoutApprovedByInput
  PurchaseReturnInitiators: PurchaseReturnCreateNestedManyWithoutInitiatedByInput
  PurchaseReturnApprovers: PurchaseReturnCreateNestedManyWithoutApprovedByInput
  Payment: PaymentCreateNestedManyWithoutReceivedByInput
  ResellerTierHistory: ResellerTierHistoryCreateNestedManyWithoutUserInput
  ResellerTierHistoryChangedBys: ResellerTierHistoryCreateNestedManyWithoutAdminInput
  ResellerProfile: ResellerProfileCreateNestedManyWithoutBillerInput
  RequestedResellers: ResellerProfileCreateNestedManyWithoutRequestedBillerInput
  Notification: NotificationCreateNestedManyWithoutUserInput
  BillerQuotation: QuotationCreateNestedManyWithoutBillerInput
  ResellerQuotation: QuotationCreateNestedManyWithoutResellerInput
  PurchaseRequisition: PurchaseRequisitionCreateNestedManyWithoutRequestedByInput
  Supplier: SupplierCreateNestedManyWithoutUserInput
}

input PurchaseRequisitionCreateNestedManyWithoutRequestedByInput {
  create: [PurchaseRequisitionCreateWithoutRequestedByInput!]
  connectOrCreate: [PurchaseRequisitionCreateOrConnectWithoutRequestedByInput!]
  createMany: PurchaseRequisitionCreateManyRequestedByInputEnvelope
  connect: [PurchaseRequisitionWhereUniqueInput!]
}

input PurchaseRequisitionCreateWithoutRequestedByInput {
  id: String
  status: PurchaseRequisitionStatus
  createdAt: DateTime
  updatedAt: DateTime
  store: StoreCreateNestedOneWithoutPurchaseRequisitionInput!
  items: PurchaseRequisitionItemCreateNestedManyWithoutRequisitionInput
  quotes: SupplierQuoteCreateNestedManyWithoutRequisitionInput
}

input StoreCreateNestedOneWithoutPurchaseRequisitionInput {
  create: StoreCreateWithoutPurchaseRequisitionInput
  connectOrCreate: StoreCreateOrConnectWithoutPurchaseRequisitionInput
  connect: StoreWhereUniqueInput
}

input StoreCreateWithoutPurchaseRequisitionInput {
  id: String
  name: String!
  location: String
  isMain: Boolean
  createdAt: DateTime
  updatedAt: DateTime
  manager: UserCreateNestedOneWithoutStoreInput!
  stocks: StockCreateNestedManyWithoutStoreInput
  receipts: StockReceiptBatchCreateNestedManyWithoutStoreInput
  transfersOut: StockTransferCreateNestedManyWithoutFromStoreInput
  transfersIn: StockTransferCreateNestedManyWithoutToStoreInput
  customerSales: ConsumerSaleCreateNestedManyWithoutStoreInput
  salesReturns: SalesReturnCreateNestedManyWithoutStoreInput
  resellerSales: ResellerSaleCreateNestedManyWithoutStoreInput
  movements: StockMovementCreateNestedManyWithoutStoreInput
  Customer: CustomerCreateNestedManyWithoutPreferredStoreInput
  CustomerProfile: CustomerProfileCreateNestedManyWithoutPreferredStoreInput
  Quotation: QuotationCreateNestedManyWithoutStoreInput
  purchaseOrders: PurchaseOrderCreateNestedManyWithoutStoreInput
  InvoiceImport: InvoiceImportCreateNestedManyWithoutStoreInput
}

input PurchaseOrderCreateNestedManyWithoutStoreInput {
  create: [PurchaseOrderCreateWithoutStoreInput!]
  connectOrCreate: [PurchaseOrderCreateOrConnectWithoutStoreInput!]
  createMany: PurchaseOrderCreateManyStoreInputEnvelope
  connect: [PurchaseOrderWhereUniqueInput!]
}

input PurchaseOrderCreateWithoutStoreInput {
  id: String
  invoiceNumber: String!
  status: PurchaseOrderStatus!
  phase: PurchasePhase
  dueDate: DateTime!
  totalAmount: Float!
  createdAt: DateTime
  updatedAt: DateTime
  supplier: SupplierCreateNestedOneWithoutPurchaseOrdersInput!
  items: PurchaseOrderItemCreateNestedManyWithoutPurchaseOrderInput
  receipts: StockReceiptBatchCreateNestedManyWithoutPurchaseOrderInput
  payments: SupplierPaymentCreateNestedManyWithoutPurchaseOrderInput
}

input StockReceiptBatchCreateNestedManyWithoutPurchaseOrderInput {
  create: [StockReceiptBatchCreateWithoutPurchaseOrderInput!]
  connectOrCreate: [StockReceiptBatchCreateOrConnectWithoutPurchaseOrderInput!]
  connect: [StockReceiptBatchWhereUniqueInput!]
}

input StockReceiptBatchCreateWithoutPurchaseOrderInput {
  id: String
  purchaseOrderId: String!
  waybillUrl: String
  receivedAt: DateTime
  store: StoreCreateNestedOneWithoutReceiptsInput!
  receivedBy: UserCreateNestedOneWithoutStockReceiptBatchReceivedBysInput!
  confirmedBy: UserCreateNestedOneWithoutStockReceiptBatchConfirmedBysInput!
  items: StockReceiptBatchItemCreateNestedManyWithoutBatchInput
  purchaseReturns: PurchaseReturnItemCreateNestedManyWithoutBatchInput
}

input PurchaseReturnItemCreateNestedManyWithoutBatchInput {
  create: [PurchaseReturnItemCreateWithoutBatchInput!]
  connectOrCreate: [PurchaseReturnItemCreateOrConnectWithoutBatchInput!]
  createMany: PurchaseReturnItemCreateManyBatchInputEnvelope
  connect: [PurchaseReturnItemWhereUniqueInput!]
}

input PurchaseReturnItemCreateWithoutBatchInput {
  id: String
  quantity: Int!
  return: PurchaseReturnCreateNestedOneWithoutItemsInput!
  productVariant: ProductVariantCreateNestedOneWithoutPurchaseReturnItemsInput!
}

input ProductVariantCreateNestedOneWithoutPurchaseReturnItemsInput {
  create: ProductVariantCreateWithoutPurchaseReturnItemsInput
  connectOrCreate: ProductVariantCreateOrConnectWithoutPurchaseReturnItemsInput
  connect: ProductVariantWhereUniqueInput
}

input ProductVariantCreateWithoutPurchaseReturnItemsInput {
  id: String
  name: String
  size: String!
  concentration: String!
  packaging: String!
  barcode: String
  price: Float!
  resellerPrice: Float!
  createdAt: DateTime
  updatedAt: DateTime
  product: ProductCreateNestedOneWithoutVariantsInput
  stockItems: StockCreateNestedManyWithoutProductVariantInput
  receiptItems: StockReceiptBatchItemCreateNestedManyWithoutProductVariantInput
  quotationItems: QuotationItemCreateNestedManyWithoutProductVariantInput
  resellerItems: ResellerSaleItemCreateNestedManyWithoutProductVariantInput
  consumerItems: ConsumerSaleItemCreateNestedManyWithoutProductVariantInput
  returnItems: SalesReturnItemCreateNestedManyWithoutProductVariantInput
  transferItems: StockTransferItemCreateNestedManyWithoutProductVariantInput
  stats: ProductSalesStatsCreateNestedOneWithoutProductVariantInput
  PurchaseOrderItem: PurchaseOrderItemCreateNestedManyWithoutProductVariantInput
  StockMovementItem: StockMovementItemCreateNestedManyWithoutProductVariantInput
  PurchaseRequisitionItem: PurchaseRequisitionItemCreateNestedManyWithoutProductVariantInput
  SupplierCatalog: SupplierCatalogCreateNestedManyWithoutProductVariantInput
  SupplierQuoteItem: SupplierQuoteItemCreateNestedManyWithoutProductVariantInput
  ProductVariantTierPrice: ProductVariantTierPriceCreateNestedManyWithoutVariantInput
  facets: VariantFacetValueCreateNestedManyWithoutVariantInput
}

input PurchaseRequisitionItemCreateNestedManyWithoutProductVariantInput {
  create: [PurchaseRequisitionItemCreateWithoutProductVariantInput!]
  connectOrCreate: [PurchaseRequisitionItemCreateOrConnectWithoutProductVariantInput!]
  createMany: PurchaseRequisitionItemCreateManyProductVariantInputEnvelope
  connect: [PurchaseRequisitionItemWhereUniqueInput!]
}

input PurchaseRequisitionItemCreateWithoutProductVariantInput {
  id: String
  requestedQty: Int!
  notes: String
  requisition: PurchaseRequisitionCreateNestedOneWithoutItemsInput!
}

input PurchaseRequisitionCreateNestedOneWithoutItemsInput {
  create: PurchaseRequisitionCreateWithoutItemsInput
  connectOrCreate: PurchaseRequisitionCreateOrConnectWithoutItemsInput
  connect: PurchaseRequisitionWhereUniqueInput
}

input PurchaseRequisitionCreateWithoutItemsInput {
  id: String
  status: PurchaseRequisitionStatus
  createdAt: DateTime
  updatedAt: DateTime
  store: StoreCreateNestedOneWithoutPurchaseRequisitionInput!
  requestedBy: UserCreateNestedOneWithoutPurchaseRequisitionInput!
  quotes: SupplierQuoteCreateNestedManyWithoutRequisitionInput
}

input SupplierQuoteCreateNestedManyWithoutRequisitionInput {
  create: [SupplierQuoteCreateWithoutRequisitionInput!]
  connectOrCreate: [SupplierQuoteCreateOrConnectWithoutRequisitionInput!]
  createMany: SupplierQuoteCreateManyRequisitionInputEnvelope
  connect: [SupplierQuoteWhereUniqueInput!]
}

input SupplierQuoteCreateWithoutRequisitionInput {
  id: String
  status: SupplierQuoteStatus
  validUntil: DateTime
  notes: String
  createdAt: DateTime
  updatedAt: DateTime
  supplier: SupplierCreateNestedOneWithoutQuotesInput!
  items: SupplierQuoteItemCreateNestedManyWithoutQuoteInput
}

input SupplierCreateNestedOneWithoutQuotesInput {
  create: SupplierCreateWithoutQuotesInput
  connectOrCreate: SupplierCreateOrConnectWithoutQuotesInput
  connect: SupplierWhereUniqueInput
}

input SupplierCreateWithoutQuotesInput {
  id: String
  name: String!
  contactInfo: JSON
  isFrequent: Boolean
  creditLimit: Float!
  currentBalance: Float
  paymentTerms: String
  notes: String
  createdAt: DateTime
  updatedAt: DateTime
  purchaseOrders: PurchaseOrderCreateNestedManyWithoutSupplierInput
  payments: SupplierPaymentCreateNestedManyWithoutSupplierInput
  returns: PurchaseReturnCreateNestedManyWithoutSupplierInput
  catalogs: SupplierCatalogCreateNestedManyWithoutSupplierInput
  user: UserCreateNestedOneWithoutSupplierInput
}

input PurchaseReturnCreateNestedManyWithoutSupplierInput {
  create: [PurchaseReturnCreateWithoutSupplierInput!]
  connectOrCreate: [PurchaseReturnCreateOrConnectWithoutSupplierInput!]
  createMany: PurchaseReturnCreateManySupplierInputEnvelope
  connect: [PurchaseReturnWhereUniqueInput!]
}

input PurchaseReturnCreateWithoutSupplierInput {
  id: String
  status: ReturnStatus!
  reason: String
  createdAt: DateTime
  updatedAt: DateTime
  initiatedBy: UserCreateNestedOneWithoutPurchaseReturnInitiatorsInput!
  approvedBy: UserCreateNestedOneWithoutPurchaseReturnApproversInput!
  items: PurchaseReturnItemCreateNestedManyWithoutReturnInput
}

input PurchaseReturnItemCreateNestedManyWithoutReturnInput {
  create: [PurchaseReturnItemCreateWithoutReturnInput!]
  connectOrCreate: [PurchaseReturnItemCreateOrConnectWithoutReturnInput!]
  createMany: PurchaseReturnItemCreateManyReturnInputEnvelope
  connect: [PurchaseReturnItemWhereUniqueInput!]
}

input PurchaseReturnItemCreateWithoutReturnInput {
  id: String
  quantity: Int!
  productVariant: ProductVariantCreateNestedOneWithoutPurchaseReturnItemsInput!
  batch: StockReceiptBatchCreateNestedOneWithoutPurchaseReturnsInput!
}

input StockReceiptBatchCreateNestedOneWithoutPurchaseReturnsInput {
  create: StockReceiptBatchCreateWithoutPurchaseReturnsInput
  connectOrCreate: StockReceiptBatchCreateOrConnectWithoutPurchaseReturnsInput
  connect: StockReceiptBatchWhereUniqueInput
}

input StockReceiptBatchCreateWithoutPurchaseReturnsInput {
  id: String
  purchaseOrderId: String!
  waybillUrl: String
  receivedAt: DateTime
  store: StoreCreateNestedOneWithoutReceiptsInput!
  receivedBy: UserCreateNestedOneWithoutStockReceiptBatchReceivedBysInput!
  confirmedBy: UserCreateNestedOneWithoutStockReceiptBatchConfirmedBysInput!
  items: StockReceiptBatchItemCreateNestedManyWithoutBatchInput
  PurchaseOrder: PurchaseOrderCreateNestedManyWithoutReceiptsInput
}

input PurchaseOrderCreateNestedManyWithoutReceiptsInput {
  create: [PurchaseOrderCreateWithoutReceiptsInput!]
  connectOrCreate: [PurchaseOrderCreateOrConnectWithoutReceiptsInput!]
  connect: [PurchaseOrderWhereUniqueInput!]
}

input PurchaseOrderCreateWithoutReceiptsInput {
  id: String
  invoiceNumber: String!
  status: PurchaseOrderStatus!
  phase: PurchasePhase
  dueDate: DateTime!
  totalAmount: Float!
  createdAt: DateTime
  updatedAt: DateTime
  supplier: SupplierCreateNestedOneWithoutPurchaseOrdersInput!
  store: StoreCreateNestedOneWithoutPurchaseOrdersInput
  items: PurchaseOrderItemCreateNestedManyWithoutPurchaseOrderInput
  payments: SupplierPaymentCreateNestedManyWithoutPurchaseOrderInput
}

input SupplierPaymentCreateNestedManyWithoutPurchaseOrderInput {
  create: [SupplierPaymentCreateWithoutPurchaseOrderInput!]
  connectOrCreate: [SupplierPaymentCreateOrConnectWithoutPurchaseOrderInput!]
  createMany: SupplierPaymentCreateManyPurchaseOrderInputEnvelope
  connect: [SupplierPaymentWhereUniqueInput!]
}

input SupplierPaymentCreateWithoutPurchaseOrderInput {
  id: String
  amount: Float!
  paymentDate: DateTime!
  method: String!
  notes: String
  supplier: SupplierCreateNestedOneWithoutPaymentsInput!
}

input SupplierCreateNestedOneWithoutPaymentsInput {
  create: SupplierCreateWithoutPaymentsInput
  connectOrCreate: SupplierCreateOrConnectWithoutPaymentsInput
  connect: SupplierWhereUniqueInput
}

input SupplierCreateWithoutPaymentsInput {
  id: String
  name: String!
  contactInfo: JSON
  isFrequent: Boolean
  creditLimit: Float!
  currentBalance: Float
  paymentTerms: String
  notes: String
  createdAt: DateTime
  updatedAt: DateTime
  purchaseOrders: PurchaseOrderCreateNestedManyWithoutSupplierInput
  returns: PurchaseReturnCreateNestedManyWithoutSupplierInput
  catalogs: SupplierCatalogCreateNestedManyWithoutSupplierInput
  quotes: SupplierQuoteCreateNestedManyWithoutSupplierInput
  user: UserCreateNestedOneWithoutSupplierInput
}

input SupplierCatalogCreateNestedManyWithoutSupplierInput {
  create: [SupplierCatalogCreateWithoutSupplierInput!]
  connectOrCreate: [SupplierCatalogCreateOrConnectWithoutSupplierInput!]
  createMany: SupplierCatalogCreateManySupplierInputEnvelope
  connect: [SupplierCatalogWhereUniqueInput!]
}

input SupplierCatalogCreateWithoutSupplierInput {
  id: String
  defaultCost: Float!
  leadTimeDays: Int
  isPreferred: Boolean
  productVariant: ProductVariantCreateNestedOneWithoutSupplierCatalogInput!
}

input ProductVariantCreateNestedOneWithoutSupplierCatalogInput {
  create: ProductVariantCreateWithoutSupplierCatalogInput
  connectOrCreate: ProductVariantCreateOrConnectWithoutSupplierCatalogInput
  connect: ProductVariantWhereUniqueInput
}

input ProductVariantCreateWithoutSupplierCatalogInput {
  id: String
  name: String
  size: String!
  concentration: String!
  packaging: String!
  barcode: String
  price: Float!
  resellerPrice: Float!
  createdAt: DateTime
  updatedAt: DateTime
  product: ProductCreateNestedOneWithoutVariantsInput
  stockItems: StockCreateNestedManyWithoutProductVariantInput
  receiptItems: StockReceiptBatchItemCreateNestedManyWithoutProductVariantInput
  quotationItems: QuotationItemCreateNestedManyWithoutProductVariantInput
  resellerItems: ResellerSaleItemCreateNestedManyWithoutProductVariantInput
  consumerItems: ConsumerSaleItemCreateNestedManyWithoutProductVariantInput
  returnItems: SalesReturnItemCreateNestedManyWithoutProductVariantInput
  purchaseReturnItems: PurchaseReturnItemCreateNestedManyWithoutProductVariantInput
  transferItems: StockTransferItemCreateNestedManyWithoutProductVariantInput
  stats: ProductSalesStatsCreateNestedOneWithoutProductVariantInput
  PurchaseOrderItem: PurchaseOrderItemCreateNestedManyWithoutProductVariantInput
  StockMovementItem: StockMovementItemCreateNestedManyWithoutProductVariantInput
  PurchaseRequisitionItem: PurchaseRequisitionItemCreateNestedManyWithoutProductVariantInput
  SupplierQuoteItem: SupplierQuoteItemCreateNestedManyWithoutProductVariantInput
  ProductVariantTierPrice: ProductVariantTierPriceCreateNestedManyWithoutVariantInput
  facets: VariantFacetValueCreateNestedManyWithoutVariantInput
}

input SupplierQuoteItemCreateNestedManyWithoutProductVariantInput {
  create: [SupplierQuoteItemCreateWithoutProductVariantInput!]
  connectOrCreate: [SupplierQuoteItemCreateOrConnectWithoutProductVariantInput!]
  createMany: SupplierQuoteItemCreateManyProductVariantInputEnvelope
  connect: [SupplierQuoteItemWhereUniqueInput!]
}

input SupplierQuoteItemCreateWithoutProductVariantInput {
  id: String
  unitCost: Float!
  minQty: Int
  leadTimeDays: Int
  quote: SupplierQuoteCreateNestedOneWithoutItemsInput!
}

input SupplierQuoteCreateNestedOneWithoutItemsInput {
  create: SupplierQuoteCreateWithoutItemsInput
  connectOrCreate: SupplierQuoteCreateOrConnectWithoutItemsInput
  connect: SupplierQuoteWhereUniqueInput
}

input SupplierQuoteCreateWithoutItemsInput {
  id: String
  status: SupplierQuoteStatus
  validUntil: DateTime
  notes: String
  createdAt: DateTime
  updatedAt: DateTime
  requisition: PurchaseRequisitionCreateNestedOneWithoutQuotesInput!
  supplier: SupplierCreateNestedOneWithoutQuotesInput!
}

input PurchaseRequisitionCreateNestedOneWithoutQuotesInput {
  create: PurchaseRequisitionCreateWithoutQuotesInput
  connectOrCreate: PurchaseRequisitionCreateOrConnectWithoutQuotesInput
  connect: PurchaseRequisitionWhereUniqueInput
}

input PurchaseRequisitionCreateWithoutQuotesInput {
  id: String
  status: PurchaseRequisitionStatus
  createdAt: DateTime
  updatedAt: DateTime
  store: StoreCreateNestedOneWithoutPurchaseRequisitionInput!
  requestedBy: UserCreateNestedOneWithoutPurchaseRequisitionInput!
  items: PurchaseRequisitionItemCreateNestedManyWithoutRequisitionInput
}

input PurchaseRequisitionItemCreateNestedManyWithoutRequisitionInput {
  create: [PurchaseRequisitionItemCreateWithoutRequisitionInput!]
  connectOrCreate: [PurchaseRequisitionItemCreateOrConnectWithoutRequisitionInput!]
  createMany: PurchaseRequisitionItemCreateManyRequisitionInputEnvelope
  connect: [PurchaseRequisitionItemWhereUniqueInput!]
}

input PurchaseRequisitionItemCreateWithoutRequisitionInput {
  id: String
  requestedQty: Int!
  notes: String
  productVariant: ProductVariantCreateNestedOneWithoutPurchaseRequisitionItemInput!
}

input ProductVariantCreateNestedOneWithoutPurchaseRequisitionItemInput {
  create: ProductVariantCreateWithoutPurchaseRequisitionItemInput
  connectOrCreate: ProductVariantCreateOrConnectWithoutPurchaseRequisitionItemInput
  connect: ProductVariantWhereUniqueInput
}

input ProductVariantCreateWithoutPurchaseRequisitionItemInput {
  id: String
  name: String
  size: String!
  concentration: String!
  packaging: String!
  barcode: String
  price: Float!
  resellerPrice: Float!
  createdAt: DateTime
  updatedAt: DateTime
  product: ProductCreateNestedOneWithoutVariantsInput
  stockItems: StockCreateNestedManyWithoutProductVariantInput
  receiptItems: StockReceiptBatchItemCreateNestedManyWithoutProductVariantInput
  quotationItems: QuotationItemCreateNestedManyWithoutProductVariantInput
  resellerItems: ResellerSaleItemCreateNestedManyWithoutProductVariantInput
  consumerItems: ConsumerSaleItemCreateNestedManyWithoutProductVariantInput
  returnItems: SalesReturnItemCreateNestedManyWithoutProductVariantInput
  purchaseReturnItems: PurchaseReturnItemCreateNestedManyWithoutProductVariantInput
  transferItems: StockTransferItemCreateNestedManyWithoutProductVariantInput
  stats: ProductSalesStatsCreateNestedOneWithoutProductVariantInput
  PurchaseOrderItem: PurchaseOrderItemCreateNestedManyWithoutProductVariantInput
  StockMovementItem: StockMovementItemCreateNestedManyWithoutProductVariantInput
  SupplierCatalog: SupplierCatalogCreateNestedManyWithoutProductVariantInput
  SupplierQuoteItem: SupplierQuoteItemCreateNestedManyWithoutProductVariantInput
  ProductVariantTierPrice: ProductVariantTierPriceCreateNestedManyWithoutVariantInput
  facets: VariantFacetValueCreateNestedManyWithoutVariantInput
}

input SupplierCatalogCreateNestedManyWithoutProductVariantInput {
  create: [SupplierCatalogCreateWithoutProductVariantInput!]
  connectOrCreate: [SupplierCatalogCreateOrConnectWithoutProductVariantInput!]
  createMany: SupplierCatalogCreateManyProductVariantInputEnvelope
  connect: [SupplierCatalogWhereUniqueInput!]
}

input SupplierCatalogCreateWithoutProductVariantInput {
  id: String
  defaultCost: Float!
  leadTimeDays: Int
  isPreferred: Boolean
  supplier: SupplierCreateNestedOneWithoutCatalogsInput!
}

input SupplierCreateNestedOneWithoutCatalogsInput {
  create: SupplierCreateWithoutCatalogsInput
  connectOrCreate: SupplierCreateOrConnectWithoutCatalogsInput
  connect: SupplierWhereUniqueInput
}

input SupplierCreateWithoutCatalogsInput {
  id: String
  name: String!
  contactInfo: JSON
  isFrequent: Boolean
  creditLimit: Float!
  currentBalance: Float
  paymentTerms: String
  notes: String
  createdAt: DateTime
  updatedAt: DateTime
  purchaseOrders: PurchaseOrderCreateNestedManyWithoutSupplierInput
  payments: SupplierPaymentCreateNestedManyWithoutSupplierInput
  returns: PurchaseReturnCreateNestedManyWithoutSupplierInput
  quotes: SupplierQuoteCreateNestedManyWithoutSupplierInput
  user: UserCreateNestedOneWithoutSupplierInput
}

input SupplierQuoteCreateNestedManyWithoutSupplierInput {
  create: [SupplierQuoteCreateWithoutSupplierInput!]
  connectOrCreate: [SupplierQuoteCreateOrConnectWithoutSupplierInput!]
  createMany: SupplierQuoteCreateManySupplierInputEnvelope
  connect: [SupplierQuoteWhereUniqueInput!]
}

input SupplierQuoteCreateWithoutSupplierInput {
  id: String
  status: SupplierQuoteStatus
  validUntil: DateTime
  notes: String
  createdAt: DateTime
  updatedAt: DateTime
  requisition: PurchaseRequisitionCreateNestedOneWithoutQuotesInput!
  items: SupplierQuoteItemCreateNestedManyWithoutQuoteInput
}

input SupplierQuoteItemCreateNestedManyWithoutQuoteInput {
  create: [SupplierQuoteItemCreateWithoutQuoteInput!]
  connectOrCreate: [SupplierQuoteItemCreateOrConnectWithoutQuoteInput!]
  createMany: SupplierQuoteItemCreateManyQuoteInputEnvelope
  connect: [SupplierQuoteItemWhereUniqueInput!]
}

input SupplierQuoteItemCreateWithoutQuoteInput {
  id: String
  unitCost: Float!
  minQty: Int
  leadTimeDays: Int
  productVariant: ProductVariantCreateNestedOneWithoutSupplierQuoteItemInput!
}

input ProductVariantCreateNestedOneWithoutSupplierQuoteItemInput {
  create: ProductVariantCreateWithoutSupplierQuoteItemInput
  connectOrCreate: ProductVariantCreateOrConnectWithoutSupplierQuoteItemInput
  connect: ProductVariantWhereUniqueInput
}

input ProductVariantCreateWithoutSupplierQuoteItemInput {
  id: String
  name: String
  size: String!
  concentration: String!
  packaging: String!
  barcode: String
  price: Float!
  resellerPrice: Float!
  createdAt: DateTime
  updatedAt: DateTime
  product: ProductCreateNestedOneWithoutVariantsInput
  stockItems: StockCreateNestedManyWithoutProductVariantInput
  receiptItems: StockReceiptBatchItemCreateNestedManyWithoutProductVariantInput
  quotationItems: QuotationItemCreateNestedManyWithoutProductVariantInput
  resellerItems: ResellerSaleItemCreateNestedManyWithoutProductVariantInput
  consumerItems: ConsumerSaleItemCreateNestedManyWithoutProductVariantInput
  returnItems: SalesReturnItemCreateNestedManyWithoutProductVariantInput
  purchaseReturnItems: PurchaseReturnItemCreateNestedManyWithoutProductVariantInput
  transferItems: StockTransferItemCreateNestedManyWithoutProductVariantInput
  stats: ProductSalesStatsCreateNestedOneWithoutProductVariantInput
  PurchaseOrderItem: PurchaseOrderItemCreateNestedManyWithoutProductVariantInput
  StockMovementItem: StockMovementItemCreateNestedManyWithoutProductVariantInput
  PurchaseRequisitionItem: PurchaseRequisitionItemCreateNestedManyWithoutProductVariantInput
  SupplierCatalog: SupplierCatalogCreateNestedManyWithoutProductVariantInput
  ProductVariantTierPrice: ProductVariantTierPriceCreateNestedManyWithoutVariantInput
  facets: VariantFacetValueCreateNestedManyWithoutVariantInput
}

input ProductVariantTierPriceCreateNestedManyWithoutVariantInput {
  create: [ProductVariantTierPriceCreateWithoutVariantInput!]
  connectOrCreate: [ProductVariantTierPriceCreateOrConnectWithoutVariantInput!]
  createMany: ProductVariantTierPriceCreateManyVariantInputEnvelope
  connect: [ProductVariantTierPriceWhereUniqueInput!]
}

input ProductVariantTierPriceCreateWithoutVariantInput {
  id: String
  tier: UserTier!
  price: Float!
}

input ProductVariantTierPriceCreateOrConnectWithoutVariantInput {
  where: ProductVariantTierPriceWhereUniqueInput!
  create: ProductVariantTierPriceCreateWithoutVariantInput!
}

input ProductVariantTierPriceWhereUniqueInput {
  id: String
  productVariantId_tier: ProductVariantTierPriceProductVariantIdTierCompoundUniqueInput
  AND: [ProductVariantTierPriceWhereInput!]
  OR: [ProductVariantTierPriceWhereInput!]
  NOT: [ProductVariantTierPriceWhereInput!]
  productVariantId: StringFilter
  tier: EnumUserTierFilter
  price: FloatFilter
  variant: ProductVariantScalarRelationFilter
}

input ProductVariantTierPriceProductVariantIdTierCompoundUniqueInput {
  productVariantId: String!
  tier: UserTier!
}

input ProductVariantTierPriceCreateManyVariantInputEnvelope {
  data: [ProductVariantTierPriceCreateManyVariantInput!]!
  skipDuplicates: Boolean
}

input ProductVariantTierPriceCreateManyVariantInput {
  id: String
  tier: UserTier!
  price: Float!
}

input VariantFacetValueCreateNestedManyWithoutVariantInput {
  create: [VariantFacetValueCreateWithoutVariantInput!]
  connectOrCreate: [VariantFacetValueCreateOrConnectWithoutVariantInput!]
  createMany: VariantFacetValueCreateManyVariantInputEnvelope
  connect: [VariantFacetValueWhereUniqueInput!]
}

input VariantFacetValueCreateWithoutVariantInput {
  id: String
  value: String!
  facet: FacetCreateNestedOneWithoutVariantsInput!
}

input FacetCreateNestedOneWithoutVariantsInput {
  create: FacetCreateWithoutVariantsInput
  connectOrCreate: FacetCreateOrConnectWithoutVariantsInput
  connect: FacetWhereUniqueInput
}

input FacetCreateWithoutVariantsInput {
  id: String
  name: String!
  code: String!
  isPrivate: Boolean
  values: FacetCreatevaluesInput
  createdAt: DateTime
  updatedAt: DateTime
  products: ProductFacetValueCreateNestedManyWithoutFacetInput
}

input ProductFacetValueCreateNestedManyWithoutFacetInput {
  create: [ProductFacetValueCreateWithoutFacetInput!]
  connectOrCreate: [ProductFacetValueCreateOrConnectWithoutFacetInput!]
  createMany: ProductFacetValueCreateManyFacetInputEnvelope
  connect: [ProductFacetValueWhereUniqueInput!]
}

input ProductFacetValueCreateWithoutFacetInput {
  id: String
  value: String!
  product: ProductCreateNestedOneWithoutFacetsInput!
}

input ProductCreateNestedOneWithoutFacetsInput {
  create: ProductCreateWithoutFacetsInput
  connectOrCreate: ProductCreateOrConnectWithoutFacetsInput
  connect: ProductWhereUniqueInput
}

input ProductCreateWithoutFacetsInput {
  id: String
  name: String!
  description: String
  barcode: String
  createdAt: DateTime
  updatedAt: DateTime
  variants: ProductVariantCreateNestedManyWithoutProductInput
}

input ProductCreateOrConnectWithoutFacetsInput {
  where: ProductWhereUniqueInput!
  create: ProductCreateWithoutFacetsInput!
}

input ProductFacetValueCreateOrConnectWithoutFacetInput {
  where: ProductFacetValueWhereUniqueInput!
  create: ProductFacetValueCreateWithoutFacetInput!
}

input ProductFacetValueWhereUniqueInput {
  id: String
  product_facet_value_unique: ProductFacetValueProduct_facet_value_uniqueCompoundUniqueInput
  AND: [ProductFacetValueWhereInput!]
  OR: [ProductFacetValueWhereInput!]
  NOT: [ProductFacetValueWhereInput!]
  productId: StringFilter
  facetId: StringFilter
  value: StringFilter
  product: ProductScalarRelationFilter
  facet: FacetScalarRelationFilter
}

input ProductFacetValueProduct_facet_value_uniqueCompoundUniqueInput {
  productId: String!
  facetId: String!
  value: String!
}

input ProductFacetValueCreateManyFacetInputEnvelope {
  data: [ProductFacetValueCreateManyFacetInput!]!
  skipDuplicates: Boolean
}

input ProductFacetValueCreateManyFacetInput {
  id: String
  productId: String!
  value: String!
}

input FacetCreateOrConnectWithoutVariantsInput {
  where: FacetWhereUniqueInput!
  create: FacetCreateWithoutVariantsInput!
}

input FacetWhereUniqueInput {
  id: String
  code: String
  AND: [FacetWhereInput!]
  OR: [FacetWhereInput!]
  NOT: [FacetWhereInput!]
  name: StringFilter
  isPrivate: BoolFilter
  values: StringNullableListFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
  products: ProductFacetValueListRelationFilter
  variants: VariantFacetValueListRelationFilter
}

input VariantFacetValueCreateOrConnectWithoutVariantInput {
  where: VariantFacetValueWhereUniqueInput!
  create: VariantFacetValueCreateWithoutVariantInput!
}

input VariantFacetValueWhereUniqueInput {
  id: String
  variant_facet_value_unique: VariantFacetValueVariant_facet_value_uniqueCompoundUniqueInput
  AND: [VariantFacetValueWhereInput!]
  OR: [VariantFacetValueWhereInput!]
  NOT: [VariantFacetValueWhereInput!]
  productVariantId: StringFilter
  facetId: StringFilter
  value: StringFilter
  variant: ProductVariantScalarRelationFilter
  facet: FacetScalarRelationFilter
}

input VariantFacetValueVariant_facet_value_uniqueCompoundUniqueInput {
  productVariantId: String!
  facetId: String!
  value: String!
}

input VariantFacetValueCreateManyVariantInputEnvelope {
  data: [VariantFacetValueCreateManyVariantInput!]!
  skipDuplicates: Boolean
}

input VariantFacetValueCreateManyVariantInput {
  id: String
  facetId: String!
  value: String!
}

input ProductVariantCreateOrConnectWithoutSupplierQuoteItemInput {
  where: ProductVariantWhereUniqueInput!
  create: ProductVariantCreateWithoutSupplierQuoteItemInput!
}

input SupplierQuoteItemCreateOrConnectWithoutQuoteInput {
  where: SupplierQuoteItemWhereUniqueInput!
  create: SupplierQuoteItemCreateWithoutQuoteInput!
}

input SupplierQuoteItemWhereUniqueInput {
  id: String
  AND: [SupplierQuoteItemWhereInput!]
  OR: [SupplierQuoteItemWhereInput!]
  NOT: [SupplierQuoteItemWhereInput!]
  quoteId: StringFilter
  productVariantId: StringFilter
  unitCost: FloatFilter
  minQty: IntNullableFilter
  leadTimeDays: IntNullableFilter
  quote: SupplierQuoteScalarRelationFilter
  productVariant: ProductVariantScalarRelationFilter
}

input SupplierQuoteItemCreateManyQuoteInputEnvelope {
  data: [SupplierQuoteItemCreateManyQuoteInput!]!
  skipDuplicates: Boolean
}

input SupplierQuoteItemCreateManyQuoteInput {
  id: String
  productVariantId: String!
  unitCost: Float!
  minQty: Int
  leadTimeDays: Int
}

input SupplierQuoteCreateOrConnectWithoutSupplierInput {
  where: SupplierQuoteWhereUniqueInput!
  create: SupplierQuoteCreateWithoutSupplierInput!
}

input SupplierQuoteWhereUniqueInput {
  id: String
  requisitionId_supplierId: SupplierQuoteRequisitionIdSupplierIdCompoundUniqueInput
  AND: [SupplierQuoteWhereInput!]
  OR: [SupplierQuoteWhereInput!]
  NOT: [SupplierQuoteWhereInput!]
  requisitionId: StringFilter
  supplierId: StringFilter
  status: EnumSupplierQuoteStatusFilter
  validUntil: DateTimeNullableFilter
  notes: StringNullableFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
  requisition: PurchaseRequisitionScalarRelationFilter
  supplier: SupplierScalarRelationFilter
  items: SupplierQuoteItemListRelationFilter
}

input SupplierQuoteRequisitionIdSupplierIdCompoundUniqueInput {
  requisitionId: String!
  supplierId: String!
}

input SupplierQuoteCreateManySupplierInputEnvelope {
  data: [SupplierQuoteCreateManySupplierInput!]!
  skipDuplicates: Boolean
}

input SupplierQuoteCreateManySupplierInput {
  id: String
  requisitionId: String!
  status: SupplierQuoteStatus
  validUntil: DateTime
  notes: String
  createdAt: DateTime
  updatedAt: DateTime
}

input UserCreateNestedOneWithoutSupplierInput {
  create: UserCreateWithoutSupplierInput
  connectOrCreate: UserCreateOrConnectWithoutSupplierInput
  connect: UserWhereUniqueInput
}

input UserCreateWithoutSupplierInput {
  id: String
  email: String!
  passwordHash: String!
  tier: UserTier
  referralCode: String
  referredBy: String
  createdAt: DateTime
  updatedAt: DateTime
  isEmailVerified: Boolean
  emailVerificationToken: String
  emailVerificationTokenExpiry: DateTime
  role: RoleCreateNestedOneWithoutUsersInput!
  resellerProfile: ResellerProfileCreateNestedOneWithoutUserInput
  customerProfile: CustomerProfileCreateNestedOneWithoutUserInput
  resellerPaymentsMade: ResellerPaymentCreateNestedManyWithoutResellerInput
  resellerPaymentsReceived: ResellerPaymentCreateNestedManyWithoutReceivedByInput
  adminLogs: AdminActionLogCreateNestedManyWithoutAdminInput
  supportMessages: SupportMessageCreateNestedManyWithoutUserInput
  ConsumerSale: ConsumerSaleCreateNestedManyWithoutBillerInput
  ConsumerSaleAdjustedBys: ConsumerSaleCreateNestedManyWithoutAdjustedByInput
  StockReceiptBatchReceivedBys: StockReceiptBatchCreateNestedManyWithoutReceivedByInput
  StockReceiptBatchConfirmedBys: StockReceiptBatchCreateNestedManyWithoutConfirmedByInput
  StockTransferRequests: StockTransferCreateNestedManyWithoutRequestedByInput
  StockTransferApprovals: StockTransferCreateNestedManyWithoutApprovedByInput
  Store: StoreCreateNestedManyWithoutManagerInput
  ConsumerReceipt: ConsumerReceiptCreateNestedManyWithoutIssuedByInput
  ResellerSales: ResellerSaleCreateNestedManyWithoutResellerInput
  BillerResellerSale: ResellerSaleCreateNestedManyWithoutBillerInput
  ResellerSale: ResellerSaleCreateNestedManyWithoutApprovedByInput
  SalesReturnReceivers: SalesReturnCreateNestedManyWithoutReceivedByInput
  SalesReturnRequesters: SalesReturnCreateNestedManyWithoutReturnedByInput
  SalesReturn: SalesReturnCreateNestedManyWithoutApprovedByInput
  PurchaseReturnInitiators: PurchaseReturnCreateNestedManyWithoutInitiatedByInput
  PurchaseReturnApprovers: PurchaseReturnCreateNestedManyWithoutApprovedByInput
  Payment: PaymentCreateNestedManyWithoutReceivedByInput
  ResellerTierHistory: ResellerTierHistoryCreateNestedManyWithoutUserInput
  ResellerTierHistoryChangedBys: ResellerTierHistoryCreateNestedManyWithoutAdminInput
  ResellerProfile: ResellerProfileCreateNestedManyWithoutBillerInput
  RequestedResellers: ResellerProfileCreateNestedManyWithoutRequestedBillerInput
  Notification: NotificationCreateNestedManyWithoutUserInput
  Fulfillment: FulfillmentCreateNestedManyWithoutDeliveryPersonnelInput
  BillerQuotation: QuotationCreateNestedManyWithoutBillerInput
  ResellerQuotation: QuotationCreateNestedManyWithoutResellerInput
  PurchaseRequisition: PurchaseRequisitionCreateNestedManyWithoutRequestedByInput
}

input UserCreateOrConnectWithoutSupplierInput {
  where: UserWhereUniqueInput!
  create: UserCreateWithoutSupplierInput!
}

input SupplierCreateOrConnectWithoutCatalogsInput {
  where: SupplierWhereUniqueInput!
  create: SupplierCreateWithoutCatalogsInput!
}

input SupplierWhereUniqueInput {
  id: String
  AND: [SupplierWhereInput!]
  OR: [SupplierWhereInput!]
  NOT: [SupplierWhereInput!]
  name: StringFilter
  contactInfo: JsonNullableFilter
  isFrequent: BoolFilter
  creditLimit: FloatFilter
  currentBalance: FloatFilter
  paymentTerms: StringNullableFilter
  notes: StringNullableFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
  userId: StringNullableFilter
  purchaseOrders: PurchaseOrderListRelationFilter
  payments: SupplierPaymentListRelationFilter
  returns: PurchaseReturnListRelationFilter
  catalogs: SupplierCatalogListRelationFilter
  quotes: SupplierQuoteListRelationFilter
  user: UserNullableScalarRelationFilter
}

input SupplierCatalogCreateOrConnectWithoutProductVariantInput {
  where: SupplierCatalogWhereUniqueInput!
  create: SupplierCatalogCreateWithoutProductVariantInput!
}

input SupplierCatalogWhereUniqueInput {
  id: String
  supplierId_productVariantId: SupplierCatalogSupplierIdProductVariantIdCompoundUniqueInput
  AND: [SupplierCatalogWhereInput!]
  OR: [SupplierCatalogWhereInput!]
  NOT: [SupplierCatalogWhereInput!]
  supplierId: StringFilter
  productVariantId: StringFilter
  defaultCost: FloatFilter
  leadTimeDays: IntNullableFilter
  isPreferred: BoolFilter
  supplier: SupplierScalarRelationFilter
  productVariant: ProductVariantScalarRelationFilter
}

input SupplierCatalogSupplierIdProductVariantIdCompoundUniqueInput {
  supplierId: String!
  productVariantId: String!
}

input SupplierCatalogCreateManyProductVariantInputEnvelope {
  data: [SupplierCatalogCreateManyProductVariantInput!]!
  skipDuplicates: Boolean
}

input SupplierCatalogCreateManyProductVariantInput {
  id: String
  supplierId: String!
  defaultCost: Float!
  leadTimeDays: Int
  isPreferred: Boolean
}

input ProductVariantCreateOrConnectWithoutPurchaseRequisitionItemInput {
  where: ProductVariantWhereUniqueInput!
  create: ProductVariantCreateWithoutPurchaseRequisitionItemInput!
}

input PurchaseRequisitionItemCreateOrConnectWithoutRequisitionInput {
  where: PurchaseRequisitionItemWhereUniqueInput!
  create: PurchaseRequisitionItemCreateWithoutRequisitionInput!
}

input PurchaseRequisitionItemWhereUniqueInput {
  id: String
  AND: [PurchaseRequisitionItemWhereInput!]
  OR: [PurchaseRequisitionItemWhereInput!]
  NOT: [PurchaseRequisitionItemWhereInput!]
  requisitionId: StringFilter
  productVariantId: StringFilter
  requestedQty: IntFilter
  notes: StringNullableFilter
  requisition: PurchaseRequisitionScalarRelationFilter
  productVariant: ProductVariantScalarRelationFilter
}

input PurchaseRequisitionItemCreateManyRequisitionInputEnvelope {
  data: [PurchaseRequisitionItemCreateManyRequisitionInput!]!
  skipDuplicates: Boolean
}

input PurchaseRequisitionItemCreateManyRequisitionInput {
  id: String
  productVariantId: String!
  requestedQty: Int!
  notes: String
}

input PurchaseRequisitionCreateOrConnectWithoutQuotesInput {
  where: PurchaseRequisitionWhereUniqueInput!
  create: PurchaseRequisitionCreateWithoutQuotesInput!
}

input PurchaseRequisitionWhereUniqueInput {
  id: String
  AND: [PurchaseRequisitionWhereInput!]
  OR: [PurchaseRequisitionWhereInput!]
  NOT: [PurchaseRequisitionWhereInput!]
  storeId: StringFilter
  requestedById: StringFilter
  status: EnumPurchaseRequisitionStatusFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
  store: StoreScalarRelationFilter
  requestedBy: UserScalarRelationFilter
  items: PurchaseRequisitionItemListRelationFilter
  quotes: SupplierQuoteListRelationFilter
}

input SupplierQuoteCreateOrConnectWithoutItemsInput {
  where: SupplierQuoteWhereUniqueInput!
  create: SupplierQuoteCreateWithoutItemsInput!
}

input SupplierQuoteItemCreateOrConnectWithoutProductVariantInput {
  where: SupplierQuoteItemWhereUniqueInput!
  create: SupplierQuoteItemCreateWithoutProductVariantInput!
}

input SupplierQuoteItemCreateManyProductVariantInputEnvelope {
  data: [SupplierQuoteItemCreateManyProductVariantInput!]!
  skipDuplicates: Boolean
}

input SupplierQuoteItemCreateManyProductVariantInput {
  id: String
  quoteId: String!
  unitCost: Float!
  minQty: Int
  leadTimeDays: Int
}

input ProductVariantCreateOrConnectWithoutSupplierCatalogInput {
  where: ProductVariantWhereUniqueInput!
  create: ProductVariantCreateWithoutSupplierCatalogInput!
}

input SupplierCatalogCreateOrConnectWithoutSupplierInput {
  where: SupplierCatalogWhereUniqueInput!
  create: SupplierCatalogCreateWithoutSupplierInput!
}

input SupplierCatalogCreateManySupplierInputEnvelope {
  data: [SupplierCatalogCreateManySupplierInput!]!
  skipDuplicates: Boolean
}

input SupplierCatalogCreateManySupplierInput {
  id: String
  productVariantId: String!
  defaultCost: Float!
  leadTimeDays: Int
  isPreferred: Boolean
}

input SupplierCreateOrConnectWithoutPaymentsInput {
  where: SupplierWhereUniqueInput!
  create: SupplierCreateWithoutPaymentsInput!
}

input SupplierPaymentCreateOrConnectWithoutPurchaseOrderInput {
  where: SupplierPaymentWhereUniqueInput!
  create: SupplierPaymentCreateWithoutPurchaseOrderInput!
}

input SupplierPaymentWhereUniqueInput {
  id: String
  AND: [SupplierPaymentWhereInput!]
  OR: [SupplierPaymentWhereInput!]
  NOT: [SupplierPaymentWhereInput!]
  supplierId: StringFilter
  purchaseOrderId: StringNullableFilter
  amount: FloatFilter
  paymentDate: DateTimeFilter
  method: StringFilter
  notes: StringNullableFilter
  supplier: SupplierScalarRelationFilter
  purchaseOrder: PurchaseOrderNullableScalarRelationFilter
}

input SupplierPaymentCreateManyPurchaseOrderInputEnvelope {
  data: [SupplierPaymentCreateManyPurchaseOrderInput!]!
  skipDuplicates: Boolean
}

input SupplierPaymentCreateManyPurchaseOrderInput {
  id: String
  supplierId: String!
  amount: Float!
  paymentDate: DateTime!
  method: String!
  notes: String
}

input PurchaseOrderCreateOrConnectWithoutReceiptsInput {
  where: PurchaseOrderWhereUniqueInput!
  create: PurchaseOrderCreateWithoutReceiptsInput!
}

input PurchaseOrderWhereUniqueInput {
  id: String
  AND: [PurchaseOrderWhereInput!]
  OR: [PurchaseOrderWhereInput!]
  NOT: [PurchaseOrderWhereInput!]
  supplierId: StringFilter
  storeId: StringNullableFilter
  invoiceNumber: StringFilter
  status: EnumPurchaseOrderStatusFilter
  phase: EnumPurchasePhaseFilter
  dueDate: DateTimeFilter
  totalAmount: FloatFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
  supplier: SupplierScalarRelationFilter
  store: StoreNullableScalarRelationFilter
  items: PurchaseOrderItemListRelationFilter
  receipts: StockReceiptBatchListRelationFilter
  payments: SupplierPaymentListRelationFilter
}

input StockReceiptBatchCreateOrConnectWithoutPurchaseReturnsInput {
  where: StockReceiptBatchWhereUniqueInput!
  create: StockReceiptBatchCreateWithoutPurchaseReturnsInput!
}

input StockReceiptBatchWhereUniqueInput {
  id: String
  AND: [StockReceiptBatchWhereInput!]
  OR: [StockReceiptBatchWhereInput!]
  NOT: [StockReceiptBatchWhereInput!]
  purchaseOrderId: StringFilter
  storeId: StringFilter
  receivedById: StringFilter
  confirmedById: StringFilter
  waybillUrl: StringNullableFilter
  receivedAt: DateTimeFilter
  store: StoreScalarRelationFilter
  receivedBy: UserScalarRelationFilter
  confirmedBy: UserScalarRelationFilter
  items: StockReceiptBatchItemListRelationFilter
  purchaseReturns: PurchaseReturnItemListRelationFilter
  PurchaseOrder: PurchaseOrderListRelationFilter
}

input PurchaseReturnItemCreateOrConnectWithoutReturnInput {
  where: PurchaseReturnItemWhereUniqueInput!
  create: PurchaseReturnItemCreateWithoutReturnInput!
}

input PurchaseReturnItemWhereUniqueInput {
  id: String
  AND: [PurchaseReturnItemWhereInput!]
  OR: [PurchaseReturnItemWhereInput!]
  NOT: [PurchaseReturnItemWhereInput!]
  purchaseReturnId: StringFilter
  productVariantId: StringFilter
  batchId: StringFilter
  quantity: IntFilter
  return: PurchaseReturnScalarRelationFilter
  productVariant: ProductVariantScalarRelationFilter
  batch: StockReceiptBatchScalarRelationFilter
}

input PurchaseReturnItemCreateManyReturnInputEnvelope {
  data: [PurchaseReturnItemCreateManyReturnInput!]!
  skipDuplicates: Boolean
}

input PurchaseReturnItemCreateManyReturnInput {
  id: String
  productVariantId: String!
  batchId: String!
  quantity: Int!
}

input PurchaseReturnCreateOrConnectWithoutSupplierInput {
  where: PurchaseReturnWhereUniqueInput!
  create: PurchaseReturnCreateWithoutSupplierInput!
}

input PurchaseReturnWhereUniqueInput {
  id: String
  AND: [PurchaseReturnWhereInput!]
  OR: [PurchaseReturnWhereInput!]
  NOT: [PurchaseReturnWhereInput!]
  supplierId: StringFilter
  initiatedById: StringFilter
  approvedById: StringFilter
  status: EnumReturnStatusFilter
  reason: StringNullableFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
  supplier: SupplierScalarRelationFilter
  initiatedBy: UserScalarRelationFilter
  approvedBy: UserScalarRelationFilter
  items: PurchaseReturnItemListRelationFilter
}

input PurchaseReturnCreateManySupplierInputEnvelope {
  data: [PurchaseReturnCreateManySupplierInput!]!
  skipDuplicates: Boolean
}

input PurchaseReturnCreateManySupplierInput {
  id: String
  initiatedById: String!
  approvedById: String!
  status: ReturnStatus!
  reason: String
  createdAt: DateTime
  updatedAt: DateTime
}

input SupplierCreateOrConnectWithoutQuotesInput {
  where: SupplierWhereUniqueInput!
  create: SupplierCreateWithoutQuotesInput!
}

input SupplierQuoteCreateOrConnectWithoutRequisitionInput {
  where: SupplierQuoteWhereUniqueInput!
  create: SupplierQuoteCreateWithoutRequisitionInput!
}

input SupplierQuoteCreateManyRequisitionInputEnvelope {
  data: [SupplierQuoteCreateManyRequisitionInput!]!
  skipDuplicates: Boolean
}

input SupplierQuoteCreateManyRequisitionInput {
  id: String
  supplierId: String!
  status: SupplierQuoteStatus
  validUntil: DateTime
  notes: String
  createdAt: DateTime
  updatedAt: DateTime
}

input PurchaseRequisitionCreateOrConnectWithoutItemsInput {
  where: PurchaseRequisitionWhereUniqueInput!
  create: PurchaseRequisitionCreateWithoutItemsInput!
}

input PurchaseRequisitionItemCreateOrConnectWithoutProductVariantInput {
  where: PurchaseRequisitionItemWhereUniqueInput!
  create: PurchaseRequisitionItemCreateWithoutProductVariantInput!
}

input PurchaseRequisitionItemCreateManyProductVariantInputEnvelope {
  data: [PurchaseRequisitionItemCreateManyProductVariantInput!]!
  skipDuplicates: Boolean
}

input PurchaseRequisitionItemCreateManyProductVariantInput {
  id: String
  requisitionId: String!
  requestedQty: Int!
  notes: String
}

input ProductVariantCreateOrConnectWithoutPurchaseReturnItemsInput {
  where: ProductVariantWhereUniqueInput!
  create: ProductVariantCreateWithoutPurchaseReturnItemsInput!
}

input PurchaseReturnItemCreateOrConnectWithoutBatchInput {
  where: PurchaseReturnItemWhereUniqueInput!
  create: PurchaseReturnItemCreateWithoutBatchInput!
}

input PurchaseReturnItemCreateManyBatchInputEnvelope {
  data: [PurchaseReturnItemCreateManyBatchInput!]!
  skipDuplicates: Boolean
}

input PurchaseReturnItemCreateManyBatchInput {
  id: String
  purchaseReturnId: String!
  productVariantId: String!
  quantity: Int!
}

input StockReceiptBatchCreateOrConnectWithoutPurchaseOrderInput {
  where: StockReceiptBatchWhereUniqueInput!
  create: StockReceiptBatchCreateWithoutPurchaseOrderInput!
}

input PurchaseOrderCreateOrConnectWithoutStoreInput {
  where: PurchaseOrderWhereUniqueInput!
  create: PurchaseOrderCreateWithoutStoreInput!
}

input PurchaseOrderCreateManyStoreInputEnvelope {
  data: [PurchaseOrderCreateManyStoreInput!]!
  skipDuplicates: Boolean
}

input PurchaseOrderCreateManyStoreInput {
  id: String
  supplierId: String!
  invoiceNumber: String!
  status: PurchaseOrderStatus!
  phase: PurchasePhase
  dueDate: DateTime!
  totalAmount: Float!
  createdAt: DateTime
  updatedAt: DateTime
}

input InvoiceImportCreateNestedManyWithoutStoreInput {
  create: [InvoiceImportCreateWithoutStoreInput!]
  connectOrCreate: [InvoiceImportCreateOrConnectWithoutStoreInput!]
  createMany: InvoiceImportCreateManyStoreInputEnvelope
  connect: [InvoiceImportWhereUniqueInput!]
}

input InvoiceImportCreateWithoutStoreInput {
  id: String
  url: String!
  supplierName: String
  status: InvoiceImportStatus
  parsed: JSON
  message: String
  createdAt: DateTime
  updatedAt: DateTime
}

input InvoiceImportCreateOrConnectWithoutStoreInput {
  where: InvoiceImportWhereUniqueInput!
  create: InvoiceImportCreateWithoutStoreInput!
}

input InvoiceImportWhereUniqueInput {
  id: String
  AND: [InvoiceImportWhereInput!]
  OR: [InvoiceImportWhereInput!]
  NOT: [InvoiceImportWhereInput!]
  url: StringFilter
  supplierName: StringNullableFilter
  storeId: StringNullableFilter
  status: EnumInvoiceImportStatusFilter
  parsed: JsonNullableFilter
  message: StringNullableFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
  store: StoreNullableScalarRelationFilter
}

input InvoiceImportCreateManyStoreInputEnvelope {
  data: [InvoiceImportCreateManyStoreInput!]!
  skipDuplicates: Boolean
}

input InvoiceImportCreateManyStoreInput {
  id: String
  url: String!
  supplierName: String
  status: InvoiceImportStatus
  parsed: JSON
  message: String
  createdAt: DateTime
  updatedAt: DateTime
}

input StoreCreateOrConnectWithoutPurchaseRequisitionInput {
  where: StoreWhereUniqueInput!
  create: StoreCreateWithoutPurchaseRequisitionInput!
}

input PurchaseRequisitionCreateOrConnectWithoutRequestedByInput {
  where: PurchaseRequisitionWhereUniqueInput!
  create: PurchaseRequisitionCreateWithoutRequestedByInput!
}

input PurchaseRequisitionCreateManyRequestedByInputEnvelope {
  data: [PurchaseRequisitionCreateManyRequestedByInput!]!
  skipDuplicates: Boolean
}

input PurchaseRequisitionCreateManyRequestedByInput {
  id: String
  storeId: String!
  status: PurchaseRequisitionStatus
  createdAt: DateTime
  updatedAt: DateTime
}

input SupplierCreateNestedManyWithoutUserInput {
  create: [SupplierCreateWithoutUserInput!]
  connectOrCreate: [SupplierCreateOrConnectWithoutUserInput!]
  createMany: SupplierCreateManyUserInputEnvelope
  connect: [SupplierWhereUniqueInput!]
}

input SupplierCreateWithoutUserInput {
  id: String
  name: String!
  contactInfo: JSON
  isFrequent: Boolean
  creditLimit: Float!
  currentBalance: Float
  paymentTerms: String
  notes: String
  createdAt: DateTime
  updatedAt: DateTime
  purchaseOrders: PurchaseOrderCreateNestedManyWithoutSupplierInput
  payments: SupplierPaymentCreateNestedManyWithoutSupplierInput
  returns: PurchaseReturnCreateNestedManyWithoutSupplierInput
  catalogs: SupplierCatalogCreateNestedManyWithoutSupplierInput
  quotes: SupplierQuoteCreateNestedManyWithoutSupplierInput
}

input SupplierCreateOrConnectWithoutUserInput {
  where: SupplierWhereUniqueInput!
  create: SupplierCreateWithoutUserInput!
}

input SupplierCreateManyUserInputEnvelope {
  data: [SupplierCreateManyUserInput!]!
  skipDuplicates: Boolean
}

input SupplierCreateManyUserInput {
  id: String
  name: String!
  contactInfo: JSON
  isFrequent: Boolean
  creditLimit: Float!
  currentBalance: Float
  paymentTerms: String
  notes: String
  createdAt: DateTime
  updatedAt: DateTime
}

input UserCreateOrConnectWithoutFulfillmentInput {
  where: UserWhereUniqueInput!
  create: UserCreateWithoutFulfillmentInput!
}

input FulfillmentCreateOrConnectWithoutSaleOrderInput {
  where: FulfillmentWhereUniqueInput!
  create: FulfillmentCreateWithoutSaleOrderInput!
}

input FulfillmentWhereUniqueInput {
  id: String
  saleOrderId: String
  AND: [FulfillmentWhereInput!]
  OR: [FulfillmentWhereInput!]
  NOT: [FulfillmentWhereInput!]
  type: EnumFulfillmentTypeFilter
  deliveryPersonnelId: StringNullableFilter
  deliveryAddress: StringNullableFilter
  status: EnumFulfillmentStatusFilter
  cost: FloatNullableFilter
  confirmationPin: StringNullableFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
  saleOrder: SaleOrderScalarRelationFilter
  deliveryPersonnel: UserNullableScalarRelationFilter
}

input ConsumerPaymentCreateNestedManyWithoutSaleOrderInput {
  create: [ConsumerPaymentCreateWithoutSaleOrderInput!]
  connectOrCreate: [ConsumerPaymentCreateOrConnectWithoutSaleOrderInput!]
  createMany: ConsumerPaymentCreateManySaleOrderInputEnvelope
  connect: [ConsumerPaymentWhereUniqueInput!]
}

input ConsumerPaymentCreateWithoutSaleOrderInput {
  id: String
  amount: Float!
  method: PaymentMethod!
  status: PaymentStatus
  receivedAt: DateTime
  reference: String
  sale: ConsumerSaleCreateNestedOneWithoutPaymentsInput!
}

input ConsumerSaleCreateNestedOneWithoutPaymentsInput {
  create: ConsumerSaleCreateWithoutPaymentsInput
  connectOrCreate: ConsumerSaleCreateOrConnectWithoutPaymentsInput
  connect: ConsumerSaleWhereUniqueInput
}

input ConsumerSaleCreateWithoutPaymentsInput {
  id: String
  channel: SaleChannel!
  status: SaleStatus!
  totalAmount: Float!
  adjustmentType: AdjustmentType
  createdAt: DateTime
  updatedAt: DateTime
  customer: CustomerCreateNestedOneWithoutSalesInput
  store: StoreCreateNestedOneWithoutCustomerSalesInput!
  biller: UserCreateNestedOneWithoutConsumerSaleInput!
  adjustedBy: UserCreateNestedOneWithoutConsumerSaleAdjustedBysInput
  quotation: QuotationCreateNestedOneWithoutConsumerSaleInput
  items: ConsumerSaleItemCreateNestedManyWithoutSaleInput
  receipt: ConsumerReceiptCreateNestedOneWithoutSaleInput
  SalesReturn: SalesReturnCreateNestedManyWithoutConsumerSaleInput
  CustomerProfile: CustomerProfileCreateNestedManyWithoutSalesInput
  SaleOrder: SaleOrderCreateNestedOneWithoutConsumerSaleInput!
}

input CustomerProfileCreateNestedManyWithoutSalesInput {
  create: [CustomerProfileCreateWithoutSalesInput!]
  connectOrCreate: [CustomerProfileCreateOrConnectWithoutSalesInput!]
  connect: [CustomerProfileWhereUniqueInput!]
}

input CustomerProfileCreateWithoutSalesInput {
  fullName: String!
  phone: String
  email: String
  gender: String
  birthday: DateTime
  profileStatus: ProfileStatus
  requestedAt: DateTime
  activatedAt: DateTime
  isPhoneVerified: Boolean
  phoneVerificationCode: String
  phoneVerificationCodeExpiry: DateTime
  user: UserCreateNestedOneWithoutCustomerProfileInput!
  preferredStore: StoreCreateNestedOneWithoutCustomerProfileInput
  referredBy: CustomerProfileCreateNestedOneWithoutReferralsInput
  referrals: CustomerProfileCreateNestedManyWithoutReferredByInput
  preferences: CustomerPreferenceProfileCreateNestedOneWithoutCustomerProfileInput
}

input CustomerProfileCreateNestedManyWithoutReferredByInput {
  create: [CustomerProfileCreateWithoutReferredByInput!]
  connectOrCreate: [CustomerProfileCreateOrConnectWithoutReferredByInput!]
  createMany: CustomerProfileCreateManyReferredByInputEnvelope
  connect: [CustomerProfileWhereUniqueInput!]
}

input CustomerProfileCreateWithoutReferredByInput {
  fullName: String!
  phone: String
  email: String
  gender: String
  birthday: DateTime
  profileStatus: ProfileStatus
  requestedAt: DateTime
  activatedAt: DateTime
  isPhoneVerified: Boolean
  phoneVerificationCode: String
  phoneVerificationCodeExpiry: DateTime
  user: UserCreateNestedOneWithoutCustomerProfileInput!
  preferredStore: StoreCreateNestedOneWithoutCustomerProfileInput
  referrals: CustomerProfileCreateNestedManyWithoutReferredByInput
  sales: ConsumerSaleCreateNestedManyWithoutCustomerProfileInput
  preferences: CustomerPreferenceProfileCreateNestedOneWithoutCustomerProfileInput
}

input CustomerPreferenceProfileCreateNestedOneWithoutCustomerProfileInput {
  create: CustomerPreferenceProfileCreateWithoutCustomerProfileInput
  connectOrCreate: CustomerPreferenceProfileCreateOrConnectWithoutCustomerProfileInput
  connect: CustomerPreferenceProfileWhereUniqueInput
}

input CustomerPreferenceProfileCreateWithoutCustomerProfileInput {
  id: String
  frequentlyBoughtVariants: JSON!
  lastPurchaseDate: DateTime
  eligibleForDiscounts: Boolean
  customer: CustomerCreateNestedOneWithoutCustomerPreferenceProfileInput!
}

input CustomerCreateNestedOneWithoutCustomerPreferenceProfileInput {
  create: CustomerCreateWithoutCustomerPreferenceProfileInput
  connectOrCreate: CustomerCreateOrConnectWithoutCustomerPreferenceProfileInput
  connect: CustomerWhereUniqueInput
}

input CustomerCreateWithoutCustomerPreferenceProfileInput {
  id: String
  fullName: String!
  phone: String
  email: String
  preferredStore: StoreCreateNestedOneWithoutCustomerInput
  sales: ConsumerSaleCreateNestedManyWithoutCustomerInput
  Quotation: QuotationCreateNestedManyWithoutConsumerInput
}

input QuotationCreateNestedManyWithoutConsumerInput {
  create: [QuotationCreateWithoutConsumerInput!]
  connectOrCreate: [QuotationCreateOrConnectWithoutConsumerInput!]
  createMany: QuotationCreateManyConsumerInputEnvelope
  connect: [QuotationWhereUniqueInput!]
}

input QuotationCreateWithoutConsumerInput {
  id: String
  type: SaleType!
  channel: SaleChannel!
  status: QuotationStatus
  totalAmount: Float!
  createdAt: DateTime
  updatedAt: DateTime
  store: StoreCreateNestedOneWithoutQuotationInput!
  biller: UserCreateNestedOneWithoutBillerQuotationInput
  reseller: UserCreateNestedOneWithoutResellerQuotationInput
  items: QuotationItemCreateNestedManyWithoutQuotationInput
  sale: ResellerSaleCreateNestedOneWithoutQuotationInput
  SaleOrder: SaleOrderCreateNestedOneWithoutQuotationInput
  ConsumerSale: ConsumerSaleCreateNestedManyWithoutQuotationInput
}

input ConsumerSaleCreateNestedManyWithoutQuotationInput {
  create: [ConsumerSaleCreateWithoutQuotationInput!]
  connectOrCreate: [ConsumerSaleCreateOrConnectWithoutQuotationInput!]
  createMany: ConsumerSaleCreateManyQuotationInputEnvelope
  connect: [ConsumerSaleWhereUniqueInput!]
}

input ConsumerSaleCreateWithoutQuotationInput {
  id: String
  channel: SaleChannel!
  status: SaleStatus!
  totalAmount: Float!
  adjustmentType: AdjustmentType
  createdAt: DateTime
  updatedAt: DateTime
  customer: CustomerCreateNestedOneWithoutSalesInput
  store: StoreCreateNestedOneWithoutCustomerSalesInput!
  biller: UserCreateNestedOneWithoutConsumerSaleInput!
  adjustedBy: UserCreateNestedOneWithoutConsumerSaleAdjustedBysInput
  items: ConsumerSaleItemCreateNestedManyWithoutSaleInput
  payments: ConsumerPaymentCreateNestedManyWithoutSaleInput
  receipt: ConsumerReceiptCreateNestedOneWithoutSaleInput
  SalesReturn: SalesReturnCreateNestedManyWithoutConsumerSaleInput
  CustomerProfile: CustomerProfileCreateNestedManyWithoutSalesInput
  SaleOrder: SaleOrderCreateNestedOneWithoutConsumerSaleInput!
}

input SaleOrderCreateNestedOneWithoutConsumerSaleInput {
  create: SaleOrderCreateWithoutConsumerSaleInput
  connectOrCreate: SaleOrderCreateOrConnectWithoutConsumerSaleInput
  connect: SaleOrderWhereUniqueInput
}

input SaleOrderCreateWithoutConsumerSaleInput {
  id: String
  storeId: String!
  billerId: String!
  type: SaleType!
  status: SaleStatus
  phase: OrderPhase
  totalAmount: Float!
  createdAt: DateTime
  updatedAt: DateTime
  resellerSaleid: String
  resellerSale: ResellerSaleCreateNestedOneWithoutSaleOrderInput
  fulfillment: FulfillmentCreateNestedOneWithoutSaleOrderInput
  quotation: QuotationCreateNestedOneWithoutSaleOrderInput
  ConsumerPayment: ConsumerPaymentCreateNestedManyWithoutSaleOrderInput
  ResellerPayment: ResellerPaymentCreateNestedManyWithoutSaleOrderInput
}

input ResellerPaymentCreateNestedManyWithoutSaleOrderInput {
  create: [ResellerPaymentCreateWithoutSaleOrderInput!]
  connectOrCreate: [ResellerPaymentCreateOrConnectWithoutSaleOrderInput!]
  createMany: ResellerPaymentCreateManySaleOrderInputEnvelope
  connect: [ResellerPaymentWhereUniqueInput!]
}

input ResellerPaymentCreateWithoutSaleOrderInput {
  id: String
  amount: Float!
  method: PaymentMethod!
  reference: String
  status: PaymentStatus
  receivedAt: DateTime
  reseller: UserCreateNestedOneWithoutResellerPaymentsMadeInput!
  sale: ResellerSaleCreateNestedOneWithoutPaymentsInput
  receivedBy: UserCreateNestedOneWithoutResellerPaymentsReceivedInput!
}

input ResellerSaleCreateNestedOneWithoutPaymentsInput {
  create: ResellerSaleCreateWithoutPaymentsInput
  connectOrCreate: ResellerSaleCreateOrConnectWithoutPaymentsInput
  connect: ResellerSaleWhereUniqueInput
}

input ResellerSaleCreateWithoutPaymentsInput {
  id: String
  status: SaleStatus!
  totalAmount: Float!
  approvedAt: DateTime
  createdAt: DateTime
  updatedAt: DateTime
  reseller: UserCreateNestedOneWithoutResellerSalesInput!
  biller: UserCreateNestedOneWithoutBillerResellerSaleInput!
  approvedBy: UserCreateNestedOneWithoutResellerSaleInput
  quotation: QuotationCreateNestedOneWithoutSaleInput
  store: StoreCreateNestedOneWithoutResellerSalesInput!
  items: ResellerSaleItemCreateNestedManyWithoutSaleInput
  SalesReturn: SalesReturnCreateNestedManyWithoutResellerSaleInput
  SaleOrder: SaleOrderCreateNestedOneWithoutResellerSaleInput!
}

input SaleOrderCreateNestedOneWithoutResellerSaleInput {
  create: SaleOrderCreateWithoutResellerSaleInput
  connectOrCreate: SaleOrderCreateOrConnectWithoutResellerSaleInput
  connect: SaleOrderWhereUniqueInput
}

input SaleOrderCreateWithoutResellerSaleInput {
  id: String
  storeId: String!
  billerId: String!
  type: SaleType!
  status: SaleStatus
  phase: OrderPhase
  totalAmount: Float!
  createdAt: DateTime
  updatedAt: DateTime
  resellerSaleid: String
  consumerSale: ConsumerSaleCreateNestedOneWithoutSaleOrderInput
  fulfillment: FulfillmentCreateNestedOneWithoutSaleOrderInput
  quotation: QuotationCreateNestedOneWithoutSaleOrderInput
  ConsumerPayment: ConsumerPaymentCreateNestedManyWithoutSaleOrderInput
  ResellerPayment: ResellerPaymentCreateNestedManyWithoutSaleOrderInput
}

input SaleOrderCreateOrConnectWithoutResellerSaleInput {
  where: SaleOrderWhereUniqueInput!
  create: SaleOrderCreateWithoutResellerSaleInput!
}

input SaleOrderWhereUniqueInput {
  id: String
  AND: [SaleOrderWhereInput!]
  OR: [SaleOrderWhereInput!]
  NOT: [SaleOrderWhereInput!]
  storeId: StringFilter
  billerId: StringFilter
  type: EnumSaleTypeFilter
  status: EnumSaleStatusFilter
  phase: EnumOrderPhaseFilter
  totalAmount: FloatFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
  resellerSaleid: StringNullableFilter
  consumerSale: ConsumerSaleNullableScalarRelationFilter
  resellerSale: ResellerSaleNullableScalarRelationFilter
  fulfillment: FulfillmentNullableScalarRelationFilter
  quotation: QuotationNullableScalarRelationFilter
  ConsumerPayment: ConsumerPaymentListRelationFilter
  ResellerPayment: ResellerPaymentListRelationFilter
}

input ResellerSaleCreateOrConnectWithoutPaymentsInput {
  where: ResellerSaleWhereUniqueInput!
  create: ResellerSaleCreateWithoutPaymentsInput!
}

input ResellerSaleWhereUniqueInput {
  id: String
  quotationId: String
  SaleOrderid: String
  AND: [ResellerSaleWhereInput!]
  OR: [ResellerSaleWhereInput!]
  NOT: [ResellerSaleWhereInput!]
  resellerId: StringFilter
  billerId: StringFilter
  storeId: StringFilter
  status: EnumSaleStatusFilter
  totalAmount: FloatFilter
  approvedById: StringNullableFilter
  approvedAt: DateTimeNullableFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
  reseller: UserScalarRelationFilter
  biller: UserScalarRelationFilter
  approvedBy: UserNullableScalarRelationFilter
  quotation: QuotationNullableScalarRelationFilter
  store: StoreScalarRelationFilter
  items: ResellerSaleItemListRelationFilter
  payments: ResellerPaymentListRelationFilter
  SalesReturn: SalesReturnListRelationFilter
  SaleOrder: SaleOrderScalarRelationFilter
}

input ResellerPaymentCreateOrConnectWithoutSaleOrderInput {
  where: ResellerPaymentWhereUniqueInput!
  create: ResellerPaymentCreateWithoutSaleOrderInput!
}

input ResellerPaymentWhereUniqueInput {
  id: String
  AND: [ResellerPaymentWhereInput!]
  OR: [ResellerPaymentWhereInput!]
  NOT: [ResellerPaymentWhereInput!]
  saleOrderId: StringFilter
  resellerId: StringFilter
  resellerSaleId: StringNullableFilter
  amount: FloatFilter
  method: EnumPaymentMethodFilter
  reference: StringNullableFilter
  status: EnumPaymentStatusFilter
  receivedAt: DateTimeFilter
  receivedById: StringFilter
  saleOrder: SaleOrderScalarRelationFilter
  reseller: UserScalarRelationFilter
  sale: ResellerSaleNullableScalarRelationFilter
  receivedBy: UserScalarRelationFilter
}

input ResellerPaymentCreateManySaleOrderInputEnvelope {
  data: [ResellerPaymentCreateManySaleOrderInput!]!
  skipDuplicates: Boolean
}

input ResellerPaymentCreateManySaleOrderInput {
  id: String
  resellerId: String!
  resellerSaleId: String
  amount: Float!
  method: PaymentMethod!
  reference: String
  status: PaymentStatus
  receivedAt: DateTime
  receivedById: String!
}

input SaleOrderCreateOrConnectWithoutConsumerSaleInput {
  where: SaleOrderWhereUniqueInput!
  create: SaleOrderCreateWithoutConsumerSaleInput!
}

input ConsumerSaleCreateOrConnectWithoutQuotationInput {
  where: ConsumerSaleWhereUniqueInput!
  create: ConsumerSaleCreateWithoutQuotationInput!
}

input ConsumerSaleWhereUniqueInput {
  id: String
  saleOrderId: String
  AND: [ConsumerSaleWhereInput!]
  OR: [ConsumerSaleWhereInput!]
  NOT: [ConsumerSaleWhereInput!]
  customerId: StringNullableFilter
  storeId: StringFilter
  billerId: StringFilter
  channel: EnumSaleChannelFilter
  quotationId: StringNullableFilter
  status: EnumSaleStatusFilter
  totalAmount: FloatFilter
  adjustmentType: EnumAdjustmentTypeNullableFilter
  adjustedById: StringNullableFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
  customer: CustomerNullableScalarRelationFilter
  store: StoreScalarRelationFilter
  biller: UserScalarRelationFilter
  adjustedBy: UserNullableScalarRelationFilter
  quotation: QuotationNullableScalarRelationFilter
  items: ConsumerSaleItemListRelationFilter
  payments: ConsumerPaymentListRelationFilter
  receipt: ConsumerReceiptNullableScalarRelationFilter
  SalesReturn: SalesReturnListRelationFilter
  CustomerProfile: CustomerProfileListRelationFilter
  SaleOrder: SaleOrderScalarRelationFilter
}

input ConsumerSaleCreateManyQuotationInputEnvelope {
  data: [ConsumerSaleCreateManyQuotationInput!]!
  skipDuplicates: Boolean
}

input ConsumerSaleCreateManyQuotationInput {
  id: String
  customerId: String
  storeId: String!
  billerId: String!
  channel: SaleChannel!
  saleOrderId: String!
  status: SaleStatus!
  totalAmount: Float!
  adjustmentType: AdjustmentType
  adjustedById: String
  createdAt: DateTime
  updatedAt: DateTime
}

input QuotationCreateOrConnectWithoutConsumerInput {
  where: QuotationWhereUniqueInput!
  create: QuotationCreateWithoutConsumerInput!
}

input QuotationWhereUniqueInput {
  id: String
  saleOrderId: String
  AND: [QuotationWhereInput!]
  OR: [QuotationWhereInput!]
  NOT: [QuotationWhereInput!]
  type: EnumSaleTypeFilter
  channel: EnumSaleChannelFilter
  storeId: StringFilter
  consumerId: StringNullableFilter
  resellerId: StringNullableFilter
  billerId: StringNullableFilter
  status: EnumQuotationStatusFilter
  totalAmount: FloatFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
  store: StoreScalarRelationFilter
  biller: UserNullableScalarRelationFilter
  consumer: CustomerNullableScalarRelationFilter
  reseller: UserNullableScalarRelationFilter
  items: QuotationItemListRelationFilter
  sale: ResellerSaleNullableScalarRelationFilter
  SaleOrder: SaleOrderNullableScalarRelationFilter
  ConsumerSale: ConsumerSaleListRelationFilter
}

input QuotationCreateManyConsumerInputEnvelope {
  data: [QuotationCreateManyConsumerInput!]!
  skipDuplicates: Boolean
}

input QuotationCreateManyConsumerInput {
  id: String
  type: SaleType!
  channel: SaleChannel!
  storeId: String!
  resellerId: String
  billerId: String
  status: QuotationStatus
  totalAmount: Float!
  saleOrderId: String
  createdAt: DateTime
  updatedAt: DateTime
}

input CustomerCreateOrConnectWithoutCustomerPreferenceProfileInput {
  where: CustomerWhereUniqueInput!
  create: CustomerCreateWithoutCustomerPreferenceProfileInput!
}

input CustomerWhereUniqueInput {
  id: String
  AND: [CustomerWhereInput!]
  OR: [CustomerWhereInput!]
  NOT: [CustomerWhereInput!]
  fullName: StringFilter
  phone: StringNullableFilter
  email: StringNullableFilter
  preferredStoreId: StringNullableFilter
  preferredStore: StoreNullableScalarRelationFilter
  sales: ConsumerSaleListRelationFilter
  CustomerPreferenceProfile: CustomerPreferenceProfileListRelationFilter
  Quotation: QuotationListRelationFilter
}

input CustomerPreferenceProfileCreateOrConnectWithoutCustomerProfileInput {
  where: CustomerPreferenceProfileWhereUniqueInput!
  create: CustomerPreferenceProfileCreateWithoutCustomerProfileInput!
}

input CustomerPreferenceProfileWhereUniqueInput {
  id: String
  customerId: String
  AND: [CustomerPreferenceProfileWhereInput!]
  OR: [CustomerPreferenceProfileWhereInput!]
  NOT: [CustomerPreferenceProfileWhereInput!]
  frequentlyBoughtVariants: JsonFilter
  lastPurchaseDate: DateTimeNullableFilter
  eligibleForDiscounts: BoolFilter
  customer: CustomerScalarRelationFilter
  CustomerProfile: CustomerProfileListRelationFilter
}

input CustomerProfileCreateOrConnectWithoutReferredByInput {
  where: CustomerProfileWhereUniqueInput!
  create: CustomerProfileCreateWithoutReferredByInput!
}

input CustomerProfileWhereUniqueInput {
  userId: String
  AND: [CustomerProfileWhereInput!]
  OR: [CustomerProfileWhereInput!]
  NOT: [CustomerProfileWhereInput!]
  fullName: StringFilter
  phone: StringNullableFilter
  email: StringNullableFilter
  gender: StringNullableFilter
  birthday: DateTimeNullableFilter
  referredById: StringNullableFilter
  preferredStoreId: StringNullableFilter
  preferencesid: StringNullableFilter
  profileStatus: EnumProfileStatusFilter
  requestedAt: DateTimeFilter
  activatedAt: DateTimeNullableFilter
  isPhoneVerified: BoolFilter
  phoneVerificationCode: StringNullableFilter
  phoneVerificationCodeExpiry: DateTimeNullableFilter
  user: UserScalarRelationFilter
  preferredStore: StoreNullableScalarRelationFilter
  referredBy: CustomerProfileNullableScalarRelationFilter
  referrals: CustomerProfileListRelationFilter
  sales: ConsumerSaleListRelationFilter
  preferences: CustomerPreferenceProfileNullableScalarRelationFilter
}

input CustomerProfileCreateManyReferredByInputEnvelope {
  data: [CustomerProfileCreateManyReferredByInput!]!
  skipDuplicates: Boolean
}

input CustomerProfileCreateManyReferredByInput {
  userId: String!
  fullName: String!
  phone: String
  email: String
  gender: String
  birthday: DateTime
  preferredStoreId: String
  preferencesid: String
  profileStatus: ProfileStatus
  requestedAt: DateTime
  activatedAt: DateTime
  isPhoneVerified: Boolean
  phoneVerificationCode: String
  phoneVerificationCodeExpiry: DateTime
}

input CustomerProfileCreateOrConnectWithoutSalesInput {
  where: CustomerProfileWhereUniqueInput!
  create: CustomerProfileCreateWithoutSalesInput!
}

input ConsumerSaleCreateOrConnectWithoutPaymentsInput {
  where: ConsumerSaleWhereUniqueInput!
  create: ConsumerSaleCreateWithoutPaymentsInput!
}

input ConsumerPaymentCreateOrConnectWithoutSaleOrderInput {
  where: ConsumerPaymentWhereUniqueInput!
  create: ConsumerPaymentCreateWithoutSaleOrderInput!
}

input ConsumerPaymentWhereUniqueInput {
  id: String
  AND: [ConsumerPaymentWhereInput!]
  OR: [ConsumerPaymentWhereInput!]
  NOT: [ConsumerPaymentWhereInput!]
  consumerSaleId: StringFilter
  saleOrderId: StringFilter
  amount: FloatFilter
  method: EnumPaymentMethodFilter
  status: EnumPaymentStatusFilter
  receivedAt: DateTimeFilter
  reference: StringNullableFilter
  saleOrder: SaleOrderScalarRelationFilter
  sale: ConsumerSaleScalarRelationFilter
}

input ConsumerPaymentCreateManySaleOrderInputEnvelope {
  data: [ConsumerPaymentCreateManySaleOrderInput!]!
  skipDuplicates: Boolean
}

input ConsumerPaymentCreateManySaleOrderInput {
  id: String
  consumerSaleId: String!
  amount: Float!
  method: PaymentMethod!
  status: PaymentStatus
  receivedAt: DateTime
  reference: String
}

input SaleOrderCreateOrConnectWithoutQuotationInput {
  where: SaleOrderWhereUniqueInput!
  create: SaleOrderCreateWithoutQuotationInput!
}

input QuotationCreateOrConnectWithoutResellerInput {
  where: QuotationWhereUniqueInput!
  create: QuotationCreateWithoutResellerInput!
}

input QuotationCreateManyResellerInputEnvelope {
  data: [QuotationCreateManyResellerInput!]!
  skipDuplicates: Boolean
}

input QuotationCreateManyResellerInput {
  id: String
  type: SaleType!
  channel: SaleChannel!
  storeId: String!
  consumerId: String
  billerId: String
  status: QuotationStatus
  totalAmount: Float!
  saleOrderId: String
  createdAt: DateTime
  updatedAt: DateTime
}

input UserCreateOrConnectWithoutPurchaseRequisitionInput {
  where: UserWhereUniqueInput!
  create: UserCreateWithoutPurchaseRequisitionInput!
}

input PurchaseRequisitionCreateOrConnectWithoutStoreInput {
  where: PurchaseRequisitionWhereUniqueInput!
  create: PurchaseRequisitionCreateWithoutStoreInput!
}

input PurchaseRequisitionCreateManyStoreInputEnvelope {
  data: [PurchaseRequisitionCreateManyStoreInput!]!
  skipDuplicates: Boolean
}

input PurchaseRequisitionCreateManyStoreInput {
  id: String
  requestedById: String!
  status: PurchaseRequisitionStatus
  createdAt: DateTime
  updatedAt: DateTime
}

input StoreCreateOrConnectWithoutMovementsInput {
  where: StoreWhereUniqueInput!
  create: StoreCreateWithoutMovementsInput!
}

input StockMovementCreateOrConnectWithoutItemsInput {
  where: StockMovementWhereUniqueInput!
  create: StockMovementCreateWithoutItemsInput!
}

input StockMovementWhereUniqueInput {
  id: String
  AND: [StockMovementWhereInput!]
  OR: [StockMovementWhereInput!]
  NOT: [StockMovementWhereInput!]
  storeId: StringFilter
  direction: EnumMovementDirectionFilter
  movementType: EnumMovementTypeFilter
  referenceEntity: StringFilter
  referenceId: StringFilter
  createdAt: DateTimeFilter
  store: StoreScalarRelationFilter
  items: StockMovementItemListRelationFilter
}

input StockMovementItemCreateOrConnectWithoutProductVariantInput {
  where: StockMovementItemWhereUniqueInput!
  create: StockMovementItemCreateWithoutProductVariantInput!
}

input StockMovementItemWhereUniqueInput {
  id: String
  AND: [StockMovementItemWhereInput!]
  OR: [StockMovementItemWhereInput!]
  NOT: [StockMovementItemWhereInput!]
  stockMovementId: StringFilter
  productVariantId: StringFilter
  quantity: IntFilter
  movement: StockMovementScalarRelationFilter
  productVariant: ProductVariantScalarRelationFilter
}

input StockMovementItemCreateManyProductVariantInputEnvelope {
  data: [StockMovementItemCreateManyProductVariantInput!]!
  skipDuplicates: Boolean
}

input StockMovementItemCreateManyProductVariantInput {
  id: String
  stockMovementId: String!
  quantity: Int!
}

input ProductVariantCreateOrConnectWithoutPurchaseOrderItemInput {
  where: ProductVariantWhereUniqueInput!
  create: ProductVariantCreateWithoutPurchaseOrderItemInput!
}

input PurchaseOrderItemCreateOrConnectWithoutPurchaseOrderInput {
  where: PurchaseOrderItemWhereUniqueInput!
  create: PurchaseOrderItemCreateWithoutPurchaseOrderInput!
}

input PurchaseOrderItemWhereUniqueInput {
  id: String
  AND: [PurchaseOrderItemWhereInput!]
  OR: [PurchaseOrderItemWhereInput!]
  NOT: [PurchaseOrderItemWhereInput!]
  purchaseOrderId: StringFilter
  productVariantId: StringFilter
  quantity: IntFilter
  unitCost: FloatFilter
  purchaseOrder: PurchaseOrderScalarRelationFilter
  productVariant: ProductVariantScalarRelationFilter
}

input PurchaseOrderItemCreateManyPurchaseOrderInputEnvelope {
  data: [PurchaseOrderItemCreateManyPurchaseOrderInput!]!
  skipDuplicates: Boolean
}

input PurchaseOrderItemCreateManyPurchaseOrderInput {
  id: String
  productVariantId: String!
  quantity: Int!
  unitCost: Float!
}

input PurchaseOrderCreateOrConnectWithoutPaymentsInput {
  where: PurchaseOrderWhereUniqueInput!
  create: PurchaseOrderCreateWithoutPaymentsInput!
}

input SupplierPaymentCreateOrConnectWithoutSupplierInput {
  where: SupplierPaymentWhereUniqueInput!
  create: SupplierPaymentCreateWithoutSupplierInput!
}

input SupplierPaymentCreateManySupplierInputEnvelope {
  data: [SupplierPaymentCreateManySupplierInput!]!
  skipDuplicates: Boolean
}

input SupplierPaymentCreateManySupplierInput {
  id: String
  purchaseOrderId: String
  amount: Float!
  paymentDate: DateTime!
  method: String!
  notes: String
}

input SupplierCreateOrConnectWithoutPurchaseOrdersInput {
  where: SupplierWhereUniqueInput!
  create: SupplierCreateWithoutPurchaseOrdersInput!
}

input PurchaseOrderCreateOrConnectWithoutItemsInput {
  where: PurchaseOrderWhereUniqueInput!
  create: PurchaseOrderCreateWithoutItemsInput!
}

input PurchaseOrderItemCreateOrConnectWithoutProductVariantInput {
  where: PurchaseOrderItemWhereUniqueInput!
  create: PurchaseOrderItemCreateWithoutProductVariantInput!
}

input PurchaseOrderItemCreateManyProductVariantInputEnvelope {
  data: [PurchaseOrderItemCreateManyProductVariantInput!]!
  skipDuplicates: Boolean
}

input PurchaseOrderItemCreateManyProductVariantInput {
  id: String
  purchaseOrderId: String!
  quantity: Int!
  unitCost: Float!
}

input ProductVariantCreateOrConnectWithoutReturnItemsInput {
  where: ProductVariantWhereUniqueInput!
  create: ProductVariantCreateWithoutReturnItemsInput!
}

input SalesReturnItemCreateOrConnectWithoutReturnInput {
  where: SalesReturnItemWhereUniqueInput!
  create: SalesReturnItemCreateWithoutReturnInput!
}

input SalesReturnItemWhereUniqueInput {
  id: String
  AND: [SalesReturnItemWhereInput!]
  OR: [SalesReturnItemWhereInput!]
  NOT: [SalesReturnItemWhereInput!]
  salesReturnId: StringFilter
  productVariantId: StringFilter
  quantity: IntFilter
  condition: StringFilter
  return: SalesReturnScalarRelationFilter
  productVariant: ProductVariantScalarRelationFilter
}

input SalesReturnItemCreateManyReturnInputEnvelope {
  data: [SalesReturnItemCreateManyReturnInput!]!
  skipDuplicates: Boolean
}

input SalesReturnItemCreateManyReturnInput {
  id: String
  productVariantId: String!
  quantity: Int!
  condition: String!
}

input SalesReturnCreateOrConnectWithoutResellerSaleInput {
  where: SalesReturnWhereUniqueInput!
  create: SalesReturnCreateWithoutResellerSaleInput!
}

input SalesReturnWhereUniqueInput {
  id: String
  AND: [SalesReturnWhereInput!]
  OR: [SalesReturnWhereInput!]
  NOT: [SalesReturnWhereInput!]
  type: EnumSaleTypeFilter
  consumerSaleId: StringNullableFilter
  resellerSaleId: StringNullableFilter
  returnedById: StringFilter
  receivedById: StringFilter
  storeId: StringFilter
  status: EnumReturnStatusFilter
  returnLocation: EnumReturnLocationFilter
  isApprovedLate: BoolFilter
  approvedById: StringNullableFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
  consumerSale: ConsumerSaleNullableScalarRelationFilter
  resellerSale: ResellerSaleNullableScalarRelationFilter
  returnedBy: UserScalarRelationFilter
  receivedBy: UserScalarRelationFilter
  approvedBy: UserNullableScalarRelationFilter
  store: StoreScalarRelationFilter
  items: SalesReturnItemListRelationFilter
}

input SalesReturnCreateManyResellerSaleInputEnvelope {
  data: [SalesReturnCreateManyResellerSaleInput!]!
  skipDuplicates: Boolean
}

input SalesReturnCreateManyResellerSaleInput {
  id: String
  type: SaleType!
  consumerSaleId: String
  returnedById: String!
  receivedById: String!
  storeId: String!
  status: ReturnStatus!
  returnLocation: ReturnLocation!
  isApprovedLate: Boolean
  approvedById: String
  createdAt: DateTime
  updatedAt: DateTime
}

input ResellerSaleCreateOrConnectWithoutQuotationInput {
  where: ResellerSaleWhereUniqueInput!
  create: ResellerSaleCreateWithoutQuotationInput!
}

input QuotationCreateOrConnectWithoutBillerInput {
  where: QuotationWhereUniqueInput!
  create: QuotationCreateWithoutBillerInput!
}

input QuotationCreateManyBillerInputEnvelope {
  data: [QuotationCreateManyBillerInput!]!
  skipDuplicates: Boolean
}

input QuotationCreateManyBillerInput {
  id: String
  type: SaleType!
  channel: SaleChannel!
  storeId: String!
  consumerId: String
  resellerId: String
  status: QuotationStatus
  totalAmount: Float!
  saleOrderId: String
  createdAt: DateTime
  updatedAt: DateTime
}

input UserCreateOrConnectWithoutPurchaseReturnApproversInput {
  where: UserWhereUniqueInput!
  create: UserCreateWithoutPurchaseReturnApproversInput!
}

input PurchaseReturnCreateOrConnectWithoutItemsInput {
  where: PurchaseReturnWhereUniqueInput!
  create: PurchaseReturnCreateWithoutItemsInput!
}

input PurchaseReturnItemCreateOrConnectWithoutProductVariantInput {
  where: PurchaseReturnItemWhereUniqueInput!
  create: PurchaseReturnItemCreateWithoutProductVariantInput!
}

input PurchaseReturnItemCreateManyProductVariantInputEnvelope {
  data: [PurchaseReturnItemCreateManyProductVariantInput!]!
  skipDuplicates: Boolean
}

input PurchaseReturnItemCreateManyProductVariantInput {
  id: String
  purchaseReturnId: String!
  batchId: String!
  quantity: Int!
}

input ProductVariantCreateOrConnectWithoutQuotationItemsInput {
  where: ProductVariantWhereUniqueInput!
  create: ProductVariantCreateWithoutQuotationItemsInput!
}

input QuotationItemCreateOrConnectWithoutQuotationInput {
  where: QuotationItemWhereUniqueInput!
  create: QuotationItemCreateWithoutQuotationInput!
}

input QuotationItemWhereUniqueInput {
  id: String
  AND: [QuotationItemWhereInput!]
  OR: [QuotationItemWhereInput!]
  NOT: [QuotationItemWhereInput!]
  quotationId: StringFilter
  productVariantId: StringFilter
  quantity: IntFilter
  unitPrice: FloatFilter
  quotation: QuotationScalarRelationFilter
  productVariant: ProductVariantScalarRelationFilter
}

input QuotationItemCreateManyQuotationInputEnvelope {
  data: [QuotationItemCreateManyQuotationInput!]!
  skipDuplicates: Boolean
}

input QuotationItemCreateManyQuotationInput {
  id: String
  productVariantId: String!
  quantity: Int!
  unitPrice: Float!
}

input QuotationCreateOrConnectWithoutSaleOrderInput {
  where: QuotationWhereUniqueInput!
  create: QuotationCreateWithoutSaleOrderInput!
}

input SaleOrderCreateOrConnectWithoutFulfillmentInput {
  where: SaleOrderWhereUniqueInput!
  create: SaleOrderCreateWithoutFulfillmentInput!
}

input FulfillmentCreateOrConnectWithoutDeliveryPersonnelInput {
  where: FulfillmentWhereUniqueInput!
  create: FulfillmentCreateWithoutDeliveryPersonnelInput!
}

input FulfillmentCreateManyDeliveryPersonnelInputEnvelope {
  data: [FulfillmentCreateManyDeliveryPersonnelInput!]!
  skipDuplicates: Boolean
}

input FulfillmentCreateManyDeliveryPersonnelInput {
  id: String
  saleOrderId: String!
  type: FulfillmentType!
  deliveryAddress: String
  status: FulfillmentStatus
  cost: Float
  confirmationPin: String
  createdAt: DateTime
  updatedAt: DateTime
}

input UserCreateOrConnectWithoutResellerTierHistoryInput {
  where: UserWhereUniqueInput!
  create: UserCreateWithoutResellerTierHistoryInput!
}

input ResellerTierHistoryCreateOrConnectWithoutAdminInput {
  where: ResellerTierHistoryWhereUniqueInput!
  create: ResellerTierHistoryCreateWithoutAdminInput!
}

input ResellerTierHistoryWhereUniqueInput {
  id: String
  AND: [ResellerTierHistoryWhereInput!]
  OR: [ResellerTierHistoryWhereInput!]
  NOT: [ResellerTierHistoryWhereInput!]
  userId: StringFilter
  fromTier: EnumUserTierFilter
  toTier: EnumUserTierFilter
  changedBy: StringFilter
  changedAt: DateTimeFilter
  user: UserScalarRelationFilter
  admin: UserScalarRelationFilter
}

input ResellerTierHistoryCreateManyAdminInputEnvelope {
  data: [ResellerTierHistoryCreateManyAdminInput!]!
  skipDuplicates: Boolean
}

input ResellerTierHistoryCreateManyAdminInput {
  id: String
  userId: String!
  fromTier: UserTier!
  toTier: UserTier!
  changedAt: DateTime
}

input UserCreateOrConnectWithoutRequestedResellersInput {
  where: UserWhereUniqueInput!
  create: UserCreateWithoutRequestedResellersInput!
}

input ResellerProfileCreateOrConnectWithoutBillerInput {
  where: ResellerProfileWhereUniqueInput!
  create: ResellerProfileCreateWithoutBillerInput!
}

input ResellerProfileCreateManyBillerInputEnvelope {
  data: [ResellerProfileCreateManyBillerInput!]!
  skipDuplicates: Boolean
}

input ResellerProfileCreateManyBillerInput {
  userId: String!
  requestedBillerId: String
  tier: UserTier!
  creditLimit: Float!
  outstandingBalance: Float
  isActive: Boolean
  profileStatus: ProfileStatus
  requestedAt: DateTime
  activatedAt: DateTime
  rejectedAt: DateTime
  rejectionReason: String
}

input UserCreateOrConnectWithoutResellerTierHistoryChangedBysInput {
  where: UserWhereUniqueInput!
  create: UserCreateWithoutResellerTierHistoryChangedBysInput!
}

input ResellerTierHistoryCreateOrConnectWithoutUserInput {
  where: ResellerTierHistoryWhereUniqueInput!
  create: ResellerTierHistoryCreateWithoutUserInput!
}

input ResellerTierHistoryCreateManyUserInputEnvelope {
  data: [ResellerTierHistoryCreateManyUserInput!]!
  skipDuplicates: Boolean
}

input ResellerTierHistoryCreateManyUserInput {
  id: String
  fromTier: UserTier!
  toTier: UserTier!
  changedBy: String!
  changedAt: DateTime
}

input UserCreateOrConnectWithoutPurchaseReturnInitiatorsInput {
  where: UserWhereUniqueInput!
  create: UserCreateWithoutPurchaseReturnInitiatorsInput!
}

input PurchaseReturnCreateOrConnectWithoutApprovedByInput {
  where: PurchaseReturnWhereUniqueInput!
  create: PurchaseReturnCreateWithoutApprovedByInput!
}

input PurchaseReturnCreateManyApprovedByInputEnvelope {
  data: [PurchaseReturnCreateManyApprovedByInput!]!
  skipDuplicates: Boolean
}

input PurchaseReturnCreateManyApprovedByInput {
  id: String
  supplierId: String!
  initiatedById: String!
  status: ReturnStatus!
  reason: String
  createdAt: DateTime
  updatedAt: DateTime
}

input UserCreateOrConnectWithoutResellerQuotationInput {
  where: UserWhereUniqueInput!
  create: UserCreateWithoutResellerQuotationInput!
}

input QuotationCreateOrConnectWithoutStoreInput {
  where: QuotationWhereUniqueInput!
  create: QuotationCreateWithoutStoreInput!
}

input QuotationCreateManyStoreInputEnvelope {
  data: [QuotationCreateManyStoreInput!]!
  skipDuplicates: Boolean
}

input QuotationCreateManyStoreInput {
  id: String
  type: SaleType!
  channel: SaleChannel!
  consumerId: String
  resellerId: String
  billerId: String
  status: QuotationStatus
  totalAmount: Float!
  saleOrderId: String
  createdAt: DateTime
  updatedAt: DateTime
}

input StoreCreateOrConnectWithoutSalesReturnsInput {
  where: StoreWhereUniqueInput!
  create: StoreCreateWithoutSalesReturnsInput!
}

input SalesReturnCreateOrConnectWithoutConsumerSaleInput {
  where: SalesReturnWhereUniqueInput!
  create: SalesReturnCreateWithoutConsumerSaleInput!
}

input SalesReturnCreateManyConsumerSaleInputEnvelope {
  data: [SalesReturnCreateManyConsumerSaleInput!]!
  skipDuplicates: Boolean
}

input SalesReturnCreateManyConsumerSaleInput {
  id: String
  type: SaleType!
  resellerSaleId: String
  returnedById: String!
  receivedById: String!
  storeId: String!
  status: ReturnStatus!
  returnLocation: ReturnLocation!
  isApprovedLate: Boolean
  approvedById: String
  createdAt: DateTime
  updatedAt: DateTime
}

input ConsumerSaleCreateOrConnectWithoutCustomerProfileInput {
  where: ConsumerSaleWhereUniqueInput!
  create: ConsumerSaleCreateWithoutCustomerProfileInput!
}

input CustomerProfileCreateOrConnectWithoutReferralsInput {
  where: CustomerProfileWhereUniqueInput!
  create: CustomerProfileCreateWithoutReferralsInput!
}

input CustomerProfileCreateOrConnectWithoutPreferredStoreInput {
  where: CustomerProfileWhereUniqueInput!
  create: CustomerProfileCreateWithoutPreferredStoreInput!
}

input CustomerProfileCreateManyPreferredStoreInputEnvelope {
  data: [CustomerProfileCreateManyPreferredStoreInput!]!
  skipDuplicates: Boolean
}

input CustomerProfileCreateManyPreferredStoreInput {
  userId: String!
  fullName: String!
  phone: String
  email: String
  gender: String
  birthday: DateTime
  referredById: String
  preferencesid: String
  profileStatus: ProfileStatus
  requestedAt: DateTime
  activatedAt: DateTime
  isPhoneVerified: Boolean
  phoneVerificationCode: String
  phoneVerificationCodeExpiry: DateTime
}

input StoreCreateOrConnectWithoutPurchaseOrdersInput {
  where: StoreWhereUniqueInput!
  create: StoreCreateWithoutPurchaseOrdersInput!
}

input PurchaseOrderCreateOrConnectWithoutSupplierInput {
  where: PurchaseOrderWhereUniqueInput!
  create: PurchaseOrderCreateWithoutSupplierInput!
}

input PurchaseOrderCreateManySupplierInputEnvelope {
  data: [PurchaseOrderCreateManySupplierInput!]!
  skipDuplicates: Boolean
}

input PurchaseOrderCreateManySupplierInput {
  id: String
  storeId: String
  invoiceNumber: String!
  status: PurchaseOrderStatus!
  phase: PurchasePhase
  dueDate: DateTime!
  totalAmount: Float!
  createdAt: DateTime
  updatedAt: DateTime
}

input SupplierCreateOrConnectWithoutReturnsInput {
  where: SupplierWhereUniqueInput!
  create: SupplierCreateWithoutReturnsInput!
}

input PurchaseReturnCreateOrConnectWithoutInitiatedByInput {
  where: PurchaseReturnWhereUniqueInput!
  create: PurchaseReturnCreateWithoutInitiatedByInput!
}

input PurchaseReturnCreateManyInitiatedByInputEnvelope {
  data: [PurchaseReturnCreateManyInitiatedByInput!]!
  skipDuplicates: Boolean
}

input PurchaseReturnCreateManyInitiatedByInput {
  id: String
  supplierId: String!
  approvedById: String!
  status: ReturnStatus!
  reason: String
  createdAt: DateTime
  updatedAt: DateTime
}

input UserCreateOrConnectWithoutSalesReturnInput {
  where: UserWhereUniqueInput!
  create: UserCreateWithoutSalesReturnInput!
}

input SalesReturnCreateOrConnectWithoutReturnedByInput {
  where: SalesReturnWhereUniqueInput!
  create: SalesReturnCreateWithoutReturnedByInput!
}

input SalesReturnCreateManyReturnedByInputEnvelope {
  data: [SalesReturnCreateManyReturnedByInput!]!
  skipDuplicates: Boolean
}

input SalesReturnCreateManyReturnedByInput {
  id: String
  type: SaleType!
  consumerSaleId: String
  resellerSaleId: String
  receivedById: String!
  storeId: String!
  status: ReturnStatus!
  returnLocation: ReturnLocation!
  isApprovedLate: Boolean
  approvedById: String
  createdAt: DateTime
  updatedAt: DateTime
}

input UserCreateOrConnectWithoutSalesReturnReceiversInput {
  where: UserWhereUniqueInput!
  create: UserCreateWithoutSalesReturnReceiversInput!
}

input SalesReturnCreateOrConnectWithoutApprovedByInput {
  where: SalesReturnWhereUniqueInput!
  create: SalesReturnCreateWithoutApprovedByInput!
}

input SalesReturnCreateManyApprovedByInputEnvelope {
  data: [SalesReturnCreateManyApprovedByInput!]!
  skipDuplicates: Boolean
}

input SalesReturnCreateManyApprovedByInput {
  id: String
  type: SaleType!
  consumerSaleId: String
  resellerSaleId: String
  returnedById: String!
  receivedById: String!
  storeId: String!
  status: ReturnStatus!
  returnLocation: ReturnLocation!
  isApprovedLate: Boolean
  createdAt: DateTime
  updatedAt: DateTime
}

input UserCreateOrConnectWithoutSalesReturnRequestersInput {
  where: UserWhereUniqueInput!
  create: UserCreateWithoutSalesReturnRequestersInput!
}

input SalesReturnCreateOrConnectWithoutReceivedByInput {
  where: SalesReturnWhereUniqueInput!
  create: SalesReturnCreateWithoutReceivedByInput!
}

input SalesReturnCreateManyReceivedByInputEnvelope {
  data: [SalesReturnCreateManyReceivedByInput!]!
  skipDuplicates: Boolean
}

input SalesReturnCreateManyReceivedByInput {
  id: String
  type: SaleType!
  consumerSaleId: String
  resellerSaleId: String
  returnedById: String!
  storeId: String!
  status: ReturnStatus!
  returnLocation: ReturnLocation!
  isApprovedLate: Boolean
  approvedById: String
  createdAt: DateTime
  updatedAt: DateTime
}

input UserCreateOrConnectWithoutResellerPaymentsReceivedInput {
  where: UserWhereUniqueInput!
  create: UserCreateWithoutResellerPaymentsReceivedInput!
}

input ResellerPaymentCreateOrConnectWithoutSaleInput {
  where: ResellerPaymentWhereUniqueInput!
  create: ResellerPaymentCreateWithoutSaleInput!
}

input ResellerPaymentCreateManySaleInputEnvelope {
  data: [ResellerPaymentCreateManySaleInput!]!
  skipDuplicates: Boolean
}

input ResellerPaymentCreateManySaleInput {
  id: String
  saleOrderId: String!
  resellerId: String!
  amount: Float!
  method: PaymentMethod!
  reference: String
  status: PaymentStatus
  receivedAt: DateTime
  receivedById: String!
}

input ResellerSaleCreateOrConnectWithoutApprovedByInput {
  where: ResellerSaleWhereUniqueInput!
  create: ResellerSaleCreateWithoutApprovedByInput!
}

input ResellerSaleCreateManyApprovedByInputEnvelope {
  data: [ResellerSaleCreateManyApprovedByInput!]!
  skipDuplicates: Boolean
}

input ResellerSaleCreateManyApprovedByInput {
  id: String
  resellerId: String!
  billerId: String!
  storeId: String!
  quotationId: String
  status: SaleStatus!
  totalAmount: Float!
  approvedAt: DateTime
  createdAt: DateTime
  updatedAt: DateTime
  SaleOrderid: String!
}

input UserCreateOrConnectWithoutConsumerReceiptInput {
  where: UserWhereUniqueInput!
  create: UserCreateWithoutConsumerReceiptInput!
}

input ConsumerReceiptCreateOrConnectWithoutSaleInput {
  where: ConsumerReceiptWhereUniqueInput!
  create: ConsumerReceiptCreateWithoutSaleInput!
}

input ConsumerReceiptWhereUniqueInput {
  id: String
  consumerSaleId: String
  AND: [ConsumerReceiptWhereInput!]
  OR: [ConsumerReceiptWhereInput!]
  NOT: [ConsumerReceiptWhereInput!]
  issuedById: StringFilter
  issuedAt: DateTimeFilter
  receiptUrl: StringNullableFilter
  sale: ConsumerSaleScalarRelationFilter
  issuedBy: UserScalarRelationFilter
}

input ConsumerSaleCreateOrConnectWithoutItemsInput {
  where: ConsumerSaleWhereUniqueInput!
  create: ConsumerSaleCreateWithoutItemsInput!
}

input ConsumerSaleItemCreateOrConnectWithoutProductVariantInput {
  where: ConsumerSaleItemWhereUniqueInput!
  create: ConsumerSaleItemCreateWithoutProductVariantInput!
}

input ConsumerSaleItemWhereUniqueInput {
  id: String
  AND: [ConsumerSaleItemWhereInput!]
  OR: [ConsumerSaleItemWhereInput!]
  NOT: [ConsumerSaleItemWhereInput!]
  consumerSaleId: StringFilter
  productVariantId: StringFilter
  quantity: IntFilter
  unitPrice: FloatFilter
  sale: ConsumerSaleScalarRelationFilter
  productVariant: ProductVariantScalarRelationFilter
}

input ConsumerSaleItemCreateManyProductVariantInputEnvelope {
  data: [ConsumerSaleItemCreateManyProductVariantInput!]!
  skipDuplicates: Boolean
}

input ConsumerSaleItemCreateManyProductVariantInput {
  id: String
  consumerSaleId: String!
  quantity: Int!
  unitPrice: Float!
}

input ProductVariantCreateOrConnectWithoutResellerItemsInput {
  where: ProductVariantWhereUniqueInput!
  create: ProductVariantCreateWithoutResellerItemsInput!
}

input ResellerSaleItemCreateOrConnectWithoutSaleInput {
  where: ResellerSaleItemWhereUniqueInput!
  create: ResellerSaleItemCreateWithoutSaleInput!
}

input ResellerSaleItemWhereUniqueInput {
  id: String
  AND: [ResellerSaleItemWhereInput!]
  OR: [ResellerSaleItemWhereInput!]
  NOT: [ResellerSaleItemWhereInput!]
  resellerSaleId: StringFilter
  productVariantId: StringFilter
  quantity: IntFilter
  unitPrice: FloatFilter
  sale: ResellerSaleScalarRelationFilter
  productVariant: ProductVariantScalarRelationFilter
}

input ResellerSaleItemCreateManySaleInputEnvelope {
  data: [ResellerSaleItemCreateManySaleInput!]!
  skipDuplicates: Boolean
}

input ResellerSaleItemCreateManySaleInput {
  id: String
  productVariantId: String!
  quantity: Int!
  unitPrice: Float!
}

input ResellerSaleCreateOrConnectWithoutBillerInput {
  where: ResellerSaleWhereUniqueInput!
  create: ResellerSaleCreateWithoutBillerInput!
}

input ResellerSaleCreateManyBillerInputEnvelope {
  data: [ResellerSaleCreateManyBillerInput!]!
  skipDuplicates: Boolean
}

input ResellerSaleCreateManyBillerInput {
  id: String
  resellerId: String!
  storeId: String!
  quotationId: String
  status: SaleStatus!
  totalAmount: Float!
  approvedById: String
  approvedAt: DateTime
  createdAt: DateTime
  updatedAt: DateTime
  SaleOrderid: String!
}

input UserCreateOrConnectWithoutCustomerProfileInput {
  where: UserWhereUniqueInput!
  create: UserCreateWithoutCustomerProfileInput!
}

input CustomerProfileCreateOrConnectWithoutPreferencesInput {
  where: CustomerProfileWhereUniqueInput!
  create: CustomerProfileCreateWithoutPreferencesInput!
}

input CustomerProfileCreateManyPreferencesInputEnvelope {
  data: [CustomerProfileCreateManyPreferencesInput!]!
  skipDuplicates: Boolean
}

input CustomerProfileCreateManyPreferencesInput {
  userId: String!
  fullName: String!
  phone: String
  email: String
  gender: String
  birthday: DateTime
  referredById: String
  preferredStoreId: String
  profileStatus: ProfileStatus
  requestedAt: DateTime
  activatedAt: DateTime
  isPhoneVerified: Boolean
  phoneVerificationCode: String
  phoneVerificationCodeExpiry: DateTime
}

input CustomerPreferenceProfileCreateOrConnectWithoutCustomerInput {
  where: CustomerPreferenceProfileWhereUniqueInput!
  create: CustomerPreferenceProfileCreateWithoutCustomerInput!
}

input CustomerPreferenceProfileCreateManyCustomerInputEnvelope {
  data: [CustomerPreferenceProfileCreateManyCustomerInput!]!
  skipDuplicates: Boolean
}

input CustomerPreferenceProfileCreateManyCustomerInput {
  id: String
  frequentlyBoughtVariants: JSON!
  lastPurchaseDate: DateTime
  eligibleForDiscounts: Boolean
}

input CustomerCreateOrConnectWithoutPreferredStoreInput {
  where: CustomerWhereUniqueInput!
  create: CustomerCreateWithoutPreferredStoreInput!
}

input CustomerCreateManyPreferredStoreInputEnvelope {
  data: [CustomerCreateManyPreferredStoreInput!]!
  skipDuplicates: Boolean
}

input CustomerCreateManyPreferredStoreInput {
  id: String
  fullName: String!
  phone: String
  email: String
}

input StoreCreateOrConnectWithoutResellerSalesInput {
  where: StoreWhereUniqueInput!
  create: StoreCreateWithoutResellerSalesInput!
}

input ResellerSaleCreateOrConnectWithoutSaleOrderInput {
  where: ResellerSaleWhereUniqueInput!
  create: ResellerSaleCreateWithoutSaleOrderInput!
}

input SaleOrderCreateOrConnectWithoutConsumerPaymentInput {
  where: SaleOrderWhereUniqueInput!
  create: SaleOrderCreateWithoutConsumerPaymentInput!
}

input ConsumerPaymentCreateOrConnectWithoutSaleInput {
  where: ConsumerPaymentWhereUniqueInput!
  create: ConsumerPaymentCreateWithoutSaleInput!
}

input ConsumerPaymentCreateManySaleInputEnvelope {
  data: [ConsumerPaymentCreateManySaleInput!]!
  skipDuplicates: Boolean
}

input ConsumerPaymentCreateManySaleInput {
  id: String
  saleOrderId: String!
  amount: Float!
  method: PaymentMethod!
  status: PaymentStatus
  receivedAt: DateTime
  reference: String
}

input ConsumerSaleCreateOrConnectWithoutCustomerInput {
  where: ConsumerSaleWhereUniqueInput!
  create: ConsumerSaleCreateWithoutCustomerInput!
}

input ConsumerSaleCreateManyCustomerInputEnvelope {
  data: [ConsumerSaleCreateManyCustomerInput!]!
  skipDuplicates: Boolean
}

input ConsumerSaleCreateManyCustomerInput {
  id: String
  storeId: String!
  billerId: String!
  channel: SaleChannel!
  saleOrderId: String!
  quotationId: String
  status: SaleStatus!
  totalAmount: Float!
  adjustmentType: AdjustmentType
  adjustedById: String
  createdAt: DateTime
  updatedAt: DateTime
}

input CustomerCreateOrConnectWithoutQuotationInput {
  where: CustomerWhereUniqueInput!
  create: CustomerCreateWithoutQuotationInput!
}

input QuotationCreateOrConnectWithoutSaleInput {
  where: QuotationWhereUniqueInput!
  create: QuotationCreateWithoutSaleInput!
}

input ResellerSaleCreateOrConnectWithoutResellerInput {
  where: ResellerSaleWhereUniqueInput!
  create: ResellerSaleCreateWithoutResellerInput!
}

input ResellerSaleCreateManyResellerInputEnvelope {
  data: [ResellerSaleCreateManyResellerInput!]!
  skipDuplicates: Boolean
}

input ResellerSaleCreateManyResellerInput {
  id: String
  billerId: String!
  storeId: String!
  quotationId: String
  status: SaleStatus!
  totalAmount: Float!
  approvedById: String
  approvedAt: DateTime
  createdAt: DateTime
  updatedAt: DateTime
  SaleOrderid: String!
}

input UserCreateOrConnectWithoutResellerSaleInput {
  where: UserWhereUniqueInput!
  create: UserCreateWithoutResellerSaleInput!
}

input ResellerSaleCreateOrConnectWithoutSalesReturnInput {
  where: ResellerSaleWhereUniqueInput!
  create: ResellerSaleCreateWithoutSalesReturnInput!
}

input SalesReturnCreateOrConnectWithoutItemsInput {
  where: SalesReturnWhereUniqueInput!
  create: SalesReturnCreateWithoutItemsInput!
}

input SalesReturnItemCreateOrConnectWithoutProductVariantInput {
  where: SalesReturnItemWhereUniqueInput!
  create: SalesReturnItemCreateWithoutProductVariantInput!
}

input SalesReturnItemCreateManyProductVariantInputEnvelope {
  data: [SalesReturnItemCreateManyProductVariantInput!]!
  skipDuplicates: Boolean
}

input SalesReturnItemCreateManyProductVariantInput {
  id: String
  salesReturnId: String!
  quantity: Int!
  condition: String!
}

input ProductVariantCreateOrConnectWithoutConsumerItemsInput {
  where: ProductVariantWhereUniqueInput!
  create: ProductVariantCreateWithoutConsumerItemsInput!
}

input ConsumerSaleItemCreateOrConnectWithoutSaleInput {
  where: ConsumerSaleItemWhereUniqueInput!
  create: ConsumerSaleItemCreateWithoutSaleInput!
}

input ConsumerSaleItemCreateManySaleInputEnvelope {
  data: [ConsumerSaleItemCreateManySaleInput!]!
  skipDuplicates: Boolean
}

input ConsumerSaleItemCreateManySaleInput {
  id: String
  productVariantId: String!
  quantity: Int!
  unitPrice: Float!
}

input ConsumerSaleCreateOrConnectWithoutReceiptInput {
  where: ConsumerSaleWhereUniqueInput!
  create: ConsumerSaleCreateWithoutReceiptInput!
}

input ConsumerReceiptCreateOrConnectWithoutIssuedByInput {
  where: ConsumerReceiptWhereUniqueInput!
  create: ConsumerReceiptCreateWithoutIssuedByInput!
}

input ConsumerReceiptCreateManyIssuedByInputEnvelope {
  data: [ConsumerReceiptCreateManyIssuedByInput!]!
  skipDuplicates: Boolean
}

input ConsumerReceiptCreateManyIssuedByInput {
  id: String
  consumerSaleId: String!
  issuedAt: DateTime
  receiptUrl: String
}

input UserCreateOrConnectWithoutStockTransferRequestsInput {
  where: UserWhereUniqueInput!
  create: UserCreateWithoutStockTransferRequestsInput!
}

input StockTransferItemCreateNestedManyWithoutTransferInput {
  create: [StockTransferItemCreateWithoutTransferInput!]
  connectOrCreate: [StockTransferItemCreateOrConnectWithoutTransferInput!]
  createMany: StockTransferItemCreateManyTransferInputEnvelope
  connect: [StockTransferItemWhereUniqueInput!]
}

input StockTransferItemCreateWithoutTransferInput {
  id: String
  quantity: Int!
  productVariant: ProductVariantCreateNestedOneWithoutTransferItemsInput!
}

input ProductVariantCreateNestedOneWithoutTransferItemsInput {
  create: ProductVariantCreateWithoutTransferItemsInput
  connectOrCreate: ProductVariantCreateOrConnectWithoutTransferItemsInput
  connect: ProductVariantWhereUniqueInput
}

input ProductVariantCreateWithoutTransferItemsInput {
  id: String
  name: String
  size: String!
  concentration: String!
  packaging: String!
  barcode: String
  price: Float!
  resellerPrice: Float!
  createdAt: DateTime
  updatedAt: DateTime
  product: ProductCreateNestedOneWithoutVariantsInput
  stockItems: StockCreateNestedManyWithoutProductVariantInput
  receiptItems: StockReceiptBatchItemCreateNestedManyWithoutProductVariantInput
  quotationItems: QuotationItemCreateNestedManyWithoutProductVariantInput
  resellerItems: ResellerSaleItemCreateNestedManyWithoutProductVariantInput
  consumerItems: ConsumerSaleItemCreateNestedManyWithoutProductVariantInput
  returnItems: SalesReturnItemCreateNestedManyWithoutProductVariantInput
  purchaseReturnItems: PurchaseReturnItemCreateNestedManyWithoutProductVariantInput
  stats: ProductSalesStatsCreateNestedOneWithoutProductVariantInput
  PurchaseOrderItem: PurchaseOrderItemCreateNestedManyWithoutProductVariantInput
  StockMovementItem: StockMovementItemCreateNestedManyWithoutProductVariantInput
  PurchaseRequisitionItem: PurchaseRequisitionItemCreateNestedManyWithoutProductVariantInput
  SupplierCatalog: SupplierCatalogCreateNestedManyWithoutProductVariantInput
  SupplierQuoteItem: SupplierQuoteItemCreateNestedManyWithoutProductVariantInput
  ProductVariantTierPrice: ProductVariantTierPriceCreateNestedManyWithoutVariantInput
  facets: VariantFacetValueCreateNestedManyWithoutVariantInput
}

input ProductVariantCreateOrConnectWithoutTransferItemsInput {
  where: ProductVariantWhereUniqueInput!
  create: ProductVariantCreateWithoutTransferItemsInput!
}

input StockTransferItemCreateOrConnectWithoutTransferInput {
  where: StockTransferItemWhereUniqueInput!
  create: StockTransferItemCreateWithoutTransferInput!
}

input StockTransferItemCreateManyTransferInputEnvelope {
  data: [StockTransferItemCreateManyTransferInput!]!
  skipDuplicates: Boolean
}

input StockTransferItemCreateManyTransferInput {
  id: String
  productVariantId: String!
  quantity: Int!
}

input StockTransferCreateOrConnectWithoutApprovedByInput {
  where: StockTransferWhereUniqueInput!
  create: StockTransferCreateWithoutApprovedByInput!
}

input StockTransferCreateManyApprovedByInputEnvelope {
  data: [StockTransferCreateManyApprovedByInput!]!
  skipDuplicates: Boolean
}

input StockTransferCreateManyApprovedByInput {
  id: String
  fromStoreId: String!
  toStoreId: String!
  requestedById: String!
  status: TransferStatus!
  createdAt: DateTime
}

input UserCreateOrConnectWithoutBillerResellerSaleInput {
  where: UserWhereUniqueInput!
  create: UserCreateWithoutBillerResellerSaleInput!
}

input ResellerSaleCreateOrConnectWithoutItemsInput {
  where: ResellerSaleWhereUniqueInput!
  create: ResellerSaleCreateWithoutItemsInput!
}

input ResellerSaleItemCreateOrConnectWithoutProductVariantInput {
  where: ResellerSaleItemWhereUniqueInput!
  create: ResellerSaleItemCreateWithoutProductVariantInput!
}

input ResellerSaleItemCreateManyProductVariantInputEnvelope {
  data: [ResellerSaleItemCreateManyProductVariantInput!]!
  skipDuplicates: Boolean
}

input ResellerSaleItemCreateManyProductVariantInput {
  id: String
  resellerSaleId: String!
  quantity: Int!
  unitPrice: Float!
}

input ProductVariantCreateOrConnectWithoutStockMovementItemInput {
  where: ProductVariantWhereUniqueInput!
  create: ProductVariantCreateWithoutStockMovementItemInput!
}

input StockMovementItemCreateOrConnectWithoutMovementInput {
  where: StockMovementItemWhereUniqueInput!
  create: StockMovementItemCreateWithoutMovementInput!
}

input StockMovementItemCreateManyMovementInputEnvelope {
  data: [StockMovementItemCreateManyMovementInput!]!
  skipDuplicates: Boolean
}

input StockMovementItemCreateManyMovementInput {
  id: String
  productVariantId: String!
  quantity: Int!
}

input StockMovementCreateOrConnectWithoutStoreInput {
  where: StockMovementWhereUniqueInput!
  create: StockMovementCreateWithoutStoreInput!
}

input StockMovementCreateManyStoreInputEnvelope {
  data: [StockMovementCreateManyStoreInput!]!
  skipDuplicates: Boolean
}

input StockMovementCreateManyStoreInput {
  id: String
  direction: MovementDirection!
  movementType: MovementType!
  referenceEntity: String!
  referenceId: String!
  createdAt: DateTime
}

input StoreCreateOrConnectWithoutManagerInput {
  where: StoreWhereUniqueInput!
  create: StoreCreateWithoutManagerInput!
}

input StoreCreateManyManagerInputEnvelope {
  data: [StoreCreateManyManagerInput!]!
  skipDuplicates: Boolean
}

input StoreCreateManyManagerInput {
  id: String
  name: String!
  location: String
  isMain: Boolean
  createdAt: DateTime
  updatedAt: DateTime
}

input UserCreateOrConnectWithoutStockTransferApprovalsInput {
  where: UserWhereUniqueInput!
  create: UserCreateWithoutStockTransferApprovalsInput!
}

input StockTransferCreateOrConnectWithoutRequestedByInput {
  where: StockTransferWhereUniqueInput!
  create: StockTransferCreateWithoutRequestedByInput!
}

input StockTransferCreateManyRequestedByInputEnvelope {
  data: [StockTransferCreateManyRequestedByInput!]!
  skipDuplicates: Boolean
}

input StockTransferCreateManyRequestedByInput {
  id: String
  fromStoreId: String!
  toStoreId: String!
  approvedById: String!
  status: TransferStatus!
  createdAt: DateTime
}

input UserCreateOrConnectWithoutBillerQuotationInput {
  where: UserWhereUniqueInput!
  create: UserCreateWithoutBillerQuotationInput!
}

input QuotationCreateOrConnectWithoutItemsInput {
  where: QuotationWhereUniqueInput!
  create: QuotationCreateWithoutItemsInput!
}

input QuotationItemCreateOrConnectWithoutProductVariantInput {
  where: QuotationItemWhereUniqueInput!
  create: QuotationItemCreateWithoutProductVariantInput!
}

input QuotationItemCreateManyProductVariantInputEnvelope {
  data: [QuotationItemCreateManyProductVariantInput!]!
  skipDuplicates: Boolean
}

input QuotationItemCreateManyProductVariantInput {
  id: String
  quotationId: String!
  quantity: Int!
  unitPrice: Float!
}

input ProductVariantCreateOrConnectWithoutReceiptItemsInput {
  where: ProductVariantWhereUniqueInput!
  create: ProductVariantCreateWithoutReceiptItemsInput!
}

input StockReceiptBatchItemCreateOrConnectWithoutBatchInput {
  where: StockReceiptBatchItemWhereUniqueInput!
  create: StockReceiptBatchItemCreateWithoutBatchInput!
}

input StockReceiptBatchItemWhereUniqueInput {
  id: String
  AND: [StockReceiptBatchItemWhereInput!]
  OR: [StockReceiptBatchItemWhereInput!]
  NOT: [StockReceiptBatchItemWhereInput!]
  stockReceiptBatchId: StringFilter
  productVariantId: StringFilter
  quantity: IntFilter
  batch: StockReceiptBatchScalarRelationFilter
  productVariant: ProductVariantScalarRelationFilter
}

input StockReceiptBatchItemCreateManyBatchInputEnvelope {
  data: [StockReceiptBatchItemCreateManyBatchInput!]!
  skipDuplicates: Boolean
}

input StockReceiptBatchItemCreateManyBatchInput {
  id: String
  productVariantId: String!
  quantity: Int!
}

input StockReceiptBatchCreateOrConnectWithoutConfirmedByInput {
  where: StockReceiptBatchWhereUniqueInput!
  create: StockReceiptBatchCreateWithoutConfirmedByInput!
}

input StockReceiptBatchCreateManyConfirmedByInputEnvelope {
  data: [StockReceiptBatchCreateManyConfirmedByInput!]!
  skipDuplicates: Boolean
}

input StockReceiptBatchCreateManyConfirmedByInput {
  id: String
  purchaseOrderId: String!
  storeId: String!
  receivedById: String!
  waybillUrl: String
  receivedAt: DateTime
}

input UserCreateOrConnectWithoutResellerSalesInput {
  where: UserWhereUniqueInput!
  create: UserCreateWithoutResellerSalesInput!
}

input ResellerSaleCreateOrConnectWithoutStoreInput {
  where: ResellerSaleWhereUniqueInput!
  create: ResellerSaleCreateWithoutStoreInput!
}

input ResellerSaleCreateManyStoreInputEnvelope {
  data: [ResellerSaleCreateManyStoreInput!]!
  skipDuplicates: Boolean
}

input ResellerSaleCreateManyStoreInput {
  id: String
  resellerId: String!
  billerId: String!
  quotationId: String
  status: SaleStatus!
  totalAmount: Float!
  approvedById: String
  approvedAt: DateTime
  createdAt: DateTime
  updatedAt: DateTime
  SaleOrderid: String!
}

input StoreCreateOrConnectWithoutQuotationInput {
  where: StoreWhereUniqueInput!
  create: StoreCreateWithoutQuotationInput!
}

input QuotationCreateOrConnectWithoutConsumerSaleInput {
  where: QuotationWhereUniqueInput!
  create: QuotationCreateWithoutConsumerSaleInput!
}

input ConsumerSaleCreateOrConnectWithoutAdjustedByInput {
  where: ConsumerSaleWhereUniqueInput!
  create: ConsumerSaleCreateWithoutAdjustedByInput!
}

input ConsumerSaleCreateManyAdjustedByInputEnvelope {
  data: [ConsumerSaleCreateManyAdjustedByInput!]!
  skipDuplicates: Boolean
}

input ConsumerSaleCreateManyAdjustedByInput {
  id: String
  customerId: String
  storeId: String!
  billerId: String!
  channel: SaleChannel!
  saleOrderId: String!
  quotationId: String
  status: SaleStatus!
  totalAmount: Float!
  adjustmentType: AdjustmentType
  createdAt: DateTime
  updatedAt: DateTime
}

input UserCreateOrConnectWithoutStockReceiptBatchConfirmedBysInput {
  where: UserWhereUniqueInput!
  create: UserCreateWithoutStockReceiptBatchConfirmedBysInput!
}

input StockReceiptBatchCreateOrConnectWithoutReceivedByInput {
  where: StockReceiptBatchWhereUniqueInput!
  create: StockReceiptBatchCreateWithoutReceivedByInput!
}

input StockReceiptBatchCreateManyReceivedByInputEnvelope {
  data: [StockReceiptBatchCreateManyReceivedByInput!]!
  skipDuplicates: Boolean
}

input StockReceiptBatchCreateManyReceivedByInput {
  id: String
  purchaseOrderId: String!
  storeId: String!
  confirmedById: String!
  waybillUrl: String
  receivedAt: DateTime
}

input UserCreateOrConnectWithoutConsumerSaleAdjustedBysInput {
  where: UserWhereUniqueInput!
  create: UserCreateWithoutConsumerSaleAdjustedBysInput!
}

input ConsumerSaleCreateOrConnectWithoutSalesReturnInput {
  where: ConsumerSaleWhereUniqueInput!
  create: ConsumerSaleCreateWithoutSalesReturnInput!
}

input SalesReturnCreateOrConnectWithoutStoreInput {
  where: SalesReturnWhereUniqueInput!
  create: SalesReturnCreateWithoutStoreInput!
}

input SalesReturnCreateManyStoreInputEnvelope {
  data: [SalesReturnCreateManyStoreInput!]!
  skipDuplicates: Boolean
}

input SalesReturnCreateManyStoreInput {
  id: String
  type: SaleType!
  consumerSaleId: String
  resellerSaleId: String
  returnedById: String!
  receivedById: String!
  status: ReturnStatus!
  returnLocation: ReturnLocation!
  isApprovedLate: Boolean
  approvedById: String
  createdAt: DateTime
  updatedAt: DateTime
}

input StoreCreateOrConnectWithoutCustomerSalesInput {
  where: StoreWhereUniqueInput!
  create: StoreCreateWithoutCustomerSalesInput!
}

input ConsumerSaleCreateOrConnectWithoutBillerInput {
  where: ConsumerSaleWhereUniqueInput!
  create: ConsumerSaleCreateWithoutBillerInput!
}

input ConsumerSaleCreateManyBillerInputEnvelope {
  data: [ConsumerSaleCreateManyBillerInput!]!
  skipDuplicates: Boolean
}

input ConsumerSaleCreateManyBillerInput {
  id: String
  customerId: String
  storeId: String!
  channel: SaleChannel!
  saleOrderId: String!
  quotationId: String
  status: SaleStatus!
  totalAmount: Float!
  adjustmentType: AdjustmentType
  adjustedById: String
  createdAt: DateTime
  updatedAt: DateTime
}

input UserCreateOrConnectWithoutResellerPaymentsMadeInput {
  where: UserWhereUniqueInput!
  create: UserCreateWithoutResellerPaymentsMadeInput!
}

input ResellerPaymentCreateOrConnectWithoutReceivedByInput {
  where: ResellerPaymentWhereUniqueInput!
  create: ResellerPaymentCreateWithoutReceivedByInput!
}

input ResellerPaymentCreateManyReceivedByInputEnvelope {
  data: [ResellerPaymentCreateManyReceivedByInput!]!
  skipDuplicates: Boolean
}

input ResellerPaymentCreateManyReceivedByInput {
  id: String
  saleOrderId: String!
  resellerId: String!
  resellerSaleId: String
  amount: Float!
  method: PaymentMethod!
  reference: String
  status: PaymentStatus
  receivedAt: DateTime
}

input UserCreateOrConnectWithoutConsumerSaleInput {
  where: UserWhereUniqueInput!
  create: UserCreateWithoutConsumerSaleInput!
}

input ConsumerSaleCreateOrConnectWithoutStoreInput {
  where: ConsumerSaleWhereUniqueInput!
  create: ConsumerSaleCreateWithoutStoreInput!
}

input ConsumerSaleCreateManyStoreInputEnvelope {
  data: [ConsumerSaleCreateManyStoreInput!]!
  skipDuplicates: Boolean
}

input ConsumerSaleCreateManyStoreInput {
  id: String
  customerId: String
  billerId: String!
  channel: SaleChannel!
  saleOrderId: String!
  quotationId: String
  status: SaleStatus!
  totalAmount: Float!
  adjustmentType: AdjustmentType
  adjustedById: String
  createdAt: DateTime
  updatedAt: DateTime
}

input StoreCreateOrConnectWithoutTransfersOutInput {
  where: StoreWhereUniqueInput!
  create: StoreCreateWithoutTransfersOutInput!
}

input StockTransferCreateOrConnectWithoutToStoreInput {
  where: StockTransferWhereUniqueInput!
  create: StockTransferCreateWithoutToStoreInput!
}

input StockTransferCreateManyToStoreInputEnvelope {
  data: [StockTransferCreateManyToStoreInput!]!
  skipDuplicates: Boolean
}

input StockTransferCreateManyToStoreInput {
  id: String
  fromStoreId: String!
  requestedById: String!
  approvedById: String!
  status: TransferStatus!
  createdAt: DateTime
}

input StoreCreateOrConnectWithoutCustomerInput {
  where: StoreWhereUniqueInput!
  create: StoreCreateWithoutCustomerInput!
}

input CustomerCreateOrConnectWithoutSalesInput {
  where: CustomerWhereUniqueInput!
  create: CustomerCreateWithoutSalesInput!
}

input ConsumerSaleCreateOrConnectWithoutSaleOrderInput {
  where: ConsumerSaleWhereUniqueInput!
  create: ConsumerSaleCreateWithoutSaleOrderInput!
}

input SaleOrderCreateOrConnectWithoutResellerPaymentInput {
  where: SaleOrderWhereUniqueInput!
  create: SaleOrderCreateWithoutResellerPaymentInput!
}

input ResellerPaymentCreateOrConnectWithoutResellerInput {
  where: ResellerPaymentWhereUniqueInput!
  create: ResellerPaymentCreateWithoutResellerInput!
}

input ResellerPaymentCreateManyResellerInputEnvelope {
  data: [ResellerPaymentCreateManyResellerInput!]!
  skipDuplicates: Boolean
}

input ResellerPaymentCreateManyResellerInput {
  id: String
  saleOrderId: String!
  resellerSaleId: String
  amount: Float!
  method: PaymentMethod!
  reference: String
  status: PaymentStatus
  receivedAt: DateTime
  receivedById: String!
}

input UserCreateOrConnectWithoutStockReceiptBatchReceivedBysInput {
  where: UserWhereUniqueInput!
  create: UserCreateWithoutStockReceiptBatchReceivedBysInput!
}

input StockReceiptBatchCreateOrConnectWithoutStoreInput {
  where: StockReceiptBatchWhereUniqueInput!
  create: StockReceiptBatchCreateWithoutStoreInput!
}

input StockReceiptBatchCreateManyStoreInputEnvelope {
  data: [StockReceiptBatchCreateManyStoreInput!]!
  skipDuplicates: Boolean
}

input StockReceiptBatchCreateManyStoreInput {
  id: String
  purchaseOrderId: String!
  receivedById: String!
  confirmedById: String!
  waybillUrl: String
  receivedAt: DateTime
}

input StoreCreateOrConnectWithoutTransfersInInput {
  where: StoreWhereUniqueInput!
  create: StoreCreateWithoutTransfersInInput!
}

input StockTransferCreateOrConnectWithoutFromStoreInput {
  where: StockTransferWhereUniqueInput!
  create: StockTransferCreateWithoutFromStoreInput!
}

input StockTransferCreateManyFromStoreInputEnvelope {
  data: [StockTransferCreateManyFromStoreInput!]!
  skipDuplicates: Boolean
}

input StockTransferCreateManyFromStoreInput {
  id: String
  toStoreId: String!
  requestedById: String!
  approvedById: String!
  status: TransferStatus!
  createdAt: DateTime
}

input StoreCreateOrConnectWithoutReceiptsInput {
  where: StoreWhereUniqueInput!
  create: StoreCreateWithoutReceiptsInput!
}

input StockReceiptBatchCreateOrConnectWithoutItemsInput {
  where: StockReceiptBatchWhereUniqueInput!
  create: StockReceiptBatchCreateWithoutItemsInput!
}

input StockReceiptBatchItemCreateOrConnectWithoutProductVariantInput {
  where: StockReceiptBatchItemWhereUniqueInput!
  create: StockReceiptBatchItemCreateWithoutProductVariantInput!
}

input StockReceiptBatchItemCreateManyProductVariantInputEnvelope {
  data: [StockReceiptBatchItemCreateManyProductVariantInput!]!
  skipDuplicates: Boolean
}

input StockReceiptBatchItemCreateManyProductVariantInput {
  id: String
  stockReceiptBatchId: String!
  quantity: Int!
}

input ProductVariantCreateOrConnectWithoutFacetsInput {
  where: ProductVariantWhereUniqueInput!
  create: ProductVariantCreateWithoutFacetsInput!
}

input VariantFacetValueCreateOrConnectWithoutFacetInput {
  where: VariantFacetValueWhereUniqueInput!
  create: VariantFacetValueCreateWithoutFacetInput!
}

input VariantFacetValueCreateManyFacetInputEnvelope {
  data: [VariantFacetValueCreateManyFacetInput!]!
  skipDuplicates: Boolean
}

input VariantFacetValueCreateManyFacetInput {
  id: String
  productVariantId: String!
  value: String!
}

input FacetCreateOrConnectWithoutProductsInput {
  where: FacetWhereUniqueInput!
  create: FacetCreateWithoutProductsInput!
}

input ProductFacetValueCreateOrConnectWithoutProductInput {
  where: ProductFacetValueWhereUniqueInput!
  create: ProductFacetValueCreateWithoutProductInput!
}

input ProductFacetValueCreateManyProductInputEnvelope {
  data: [ProductFacetValueCreateManyProductInput!]!
  skipDuplicates: Boolean
}

input ProductFacetValueCreateManyProductInput {
  id: String
  facetId: String!
  value: String!
}

input ProductCreateOrConnectWithoutVariantsInput {
  where: ProductWhereUniqueInput!
  create: ProductCreateWithoutVariantsInput!
}

input ProductVariantCreateOrConnectWithoutStockItemsInput {
  where: ProductVariantWhereUniqueInput!
  create: ProductVariantCreateWithoutStockItemsInput!
}

input StockCreateOrConnectWithoutStoreInput {
  where: StockWhereUniqueInput!
  create: StockCreateWithoutStoreInput!
}

input StockWhereUniqueInput {
  id: String
  storeId_productVariantId: StockStoreIdProductVariantIdCompoundUniqueInput
  AND: [StockWhereInput!]
  OR: [StockWhereInput!]
  NOT: [StockWhereInput!]
  storeId: StringFilter
  productVariantId: StringFilter
  quantity: IntFilter
  reserved: IntFilter
  reorderPoint: IntNullableFilter
  reorderQty: IntNullableFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
  store: StoreScalarRelationFilter
  productVariant: ProductVariantScalarRelationFilter
}

input StockStoreIdProductVariantIdCompoundUniqueInput {
  storeId: String!
  productVariantId: String!
}

input StockCreateManyStoreInputEnvelope {
  data: [StockCreateManyStoreInput!]!
  skipDuplicates: Boolean
}

input StockCreateManyStoreInput {
  id: String
  productVariantId: String!
  quantity: Int!
  reserved: Int
  reorderPoint: Int
  reorderQty: Int
  createdAt: DateTime
  updatedAt: DateTime
}

input StoreCreateOrConnectWithoutCustomerProfileInput {
  where: StoreWhereUniqueInput!
  create: StoreCreateWithoutCustomerProfileInput!
}

input CustomerProfileCreateOrConnectWithoutUserInput {
  where: CustomerProfileWhereUniqueInput!
  create: CustomerProfileCreateWithoutUserInput!
}

input UserCreateOrConnectWithoutResellerProfileInput {
  where: UserWhereUniqueInput!
  create: UserCreateWithoutResellerProfileInput!
}

input ResellerProfileCreateOrConnectWithoutUserInput {
  where: ResellerProfileWhereUniqueInput!
  create: ResellerProfileCreateWithoutUserInput!
}

input UserCreateOrConnectWithoutStoreInput {
  where: UserWhereUniqueInput!
  create: UserCreateWithoutStoreInput!
}

input StoreCreateOrConnectWithoutStocksInput {
  where: StoreWhereUniqueInput!
  create: StoreCreateWithoutStocksInput!
}

input StockCreateOrConnectWithoutProductVariantInput {
  where: StockWhereUniqueInput!
  create: StockCreateWithoutProductVariantInput!
}

input StockCreateManyProductVariantInputEnvelope {
  data: [StockCreateManyProductVariantInput!]!
  skipDuplicates: Boolean
}

input StockCreateManyProductVariantInput {
  id: String
  storeId: String!
  quantity: Int!
  reserved: Int
  reorderPoint: Int
  reorderQty: Int
  createdAt: DateTime
  updatedAt: DateTime
}

input ProductVariantCreateOrConnectWithoutProductInput {
  where: ProductVariantWhereUniqueInput!
  create: ProductVariantCreateWithoutProductInput!
}

input ProductVariantCreateManyProductInputEnvelope {
  data: [ProductVariantCreateManyProductInput!]!
  skipDuplicates: Boolean
}

input ProductVariantCreateManyProductInput {
  id: String
  name: String
  size: String!
  concentration: String!
  packaging: String!
  barcode: String
  price: Float!
  resellerPrice: Float!
  createdAt: DateTime
  updatedAt: DateTime
}

input ProductCreateManyInput {
  id: String
  name: String!
  description: String
  barcode: String
  createdAt: DateTime
  updatedAt: DateTime
}

input ProductUpdateInput {
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  barcode: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  variants: ProductVariantUpdateManyWithoutProductNestedInput
  facets: ProductFacetValueUpdateManyWithoutProductNestedInput
}

input StringFieldUpdateOperationsInput {
  set: String
}

input NullableStringFieldUpdateOperationsInput {
  set: String
}

input DateTimeFieldUpdateOperationsInput {
  set: DateTime
}

input ProductVariantUpdateManyWithoutProductNestedInput {
  create: [ProductVariantCreateWithoutProductInput!]
  connectOrCreate: [ProductVariantCreateOrConnectWithoutProductInput!]
  upsert: [ProductVariantUpsertWithWhereUniqueWithoutProductInput!]
  createMany: ProductVariantCreateManyProductInputEnvelope
  set: [ProductVariantWhereUniqueInput!]
  disconnect: [ProductVariantWhereUniqueInput!]
  delete: [ProductVariantWhereUniqueInput!]
  connect: [ProductVariantWhereUniqueInput!]
  update: [ProductVariantUpdateWithWhereUniqueWithoutProductInput!]
  updateMany: [ProductVariantUpdateManyWithWhereWithoutProductInput!]
  deleteMany: [ProductVariantScalarWhereInput!]
}

input ProductVariantUpsertWithWhereUniqueWithoutProductInput {
  where: ProductVariantWhereUniqueInput!
  update: ProductVariantUpdateWithoutProductInput!
  create: ProductVariantCreateWithoutProductInput!
}

input ProductVariantUpdateWithoutProductInput {
  id: StringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  size: StringFieldUpdateOperationsInput
  concentration: StringFieldUpdateOperationsInput
  packaging: StringFieldUpdateOperationsInput
  barcode: NullableStringFieldUpdateOperationsInput
  price: FloatFieldUpdateOperationsInput
  resellerPrice: FloatFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  stockItems: StockUpdateManyWithoutProductVariantNestedInput
  receiptItems: StockReceiptBatchItemUpdateManyWithoutProductVariantNestedInput
  quotationItems: QuotationItemUpdateManyWithoutProductVariantNestedInput
  resellerItems: ResellerSaleItemUpdateManyWithoutProductVariantNestedInput
  consumerItems: ConsumerSaleItemUpdateManyWithoutProductVariantNestedInput
  returnItems: SalesReturnItemUpdateManyWithoutProductVariantNestedInput
  purchaseReturnItems: PurchaseReturnItemUpdateManyWithoutProductVariantNestedInput
  transferItems: StockTransferItemUpdateManyWithoutProductVariantNestedInput
  stats: ProductSalesStatsUpdateOneWithoutProductVariantNestedInput
  PurchaseOrderItem: PurchaseOrderItemUpdateManyWithoutProductVariantNestedInput
  StockMovementItem: StockMovementItemUpdateManyWithoutProductVariantNestedInput
  PurchaseRequisitionItem: PurchaseRequisitionItemUpdateManyWithoutProductVariantNestedInput
  SupplierCatalog: SupplierCatalogUpdateManyWithoutProductVariantNestedInput
  SupplierQuoteItem: SupplierQuoteItemUpdateManyWithoutProductVariantNestedInput
  ProductVariantTierPrice: ProductVariantTierPriceUpdateManyWithoutVariantNestedInput
  facets: VariantFacetValueUpdateManyWithoutVariantNestedInput
}

input FloatFieldUpdateOperationsInput {
  set: Float
  increment: Float
  decrement: Float
  multiply: Float
  divide: Float
}

input StockUpdateManyWithoutProductVariantNestedInput {
  create: [StockCreateWithoutProductVariantInput!]
  connectOrCreate: [StockCreateOrConnectWithoutProductVariantInput!]
  upsert: [StockUpsertWithWhereUniqueWithoutProductVariantInput!]
  createMany: StockCreateManyProductVariantInputEnvelope
  set: [StockWhereUniqueInput!]
  disconnect: [StockWhereUniqueInput!]
  delete: [StockWhereUniqueInput!]
  connect: [StockWhereUniqueInput!]
  update: [StockUpdateWithWhereUniqueWithoutProductVariantInput!]
  updateMany: [StockUpdateManyWithWhereWithoutProductVariantInput!]
  deleteMany: [StockScalarWhereInput!]
}

input StockUpsertWithWhereUniqueWithoutProductVariantInput {
  where: StockWhereUniqueInput!
  update: StockUpdateWithoutProductVariantInput!
  create: StockCreateWithoutProductVariantInput!
}

input StockUpdateWithoutProductVariantInput {
  id: StringFieldUpdateOperationsInput
  quantity: IntFieldUpdateOperationsInput
  reserved: IntFieldUpdateOperationsInput
  reorderPoint: NullableIntFieldUpdateOperationsInput
  reorderQty: NullableIntFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  store: StoreUpdateOneRequiredWithoutStocksNestedInput
}

input IntFieldUpdateOperationsInput {
  set: Int
  increment: Int
  decrement: Int
  multiply: Int
  divide: Int
}

input NullableIntFieldUpdateOperationsInput {
  set: Int
  increment: Int
  decrement: Int
  multiply: Int
  divide: Int
}

input StoreUpdateOneRequiredWithoutStocksNestedInput {
  create: StoreCreateWithoutStocksInput
  connectOrCreate: StoreCreateOrConnectWithoutStocksInput
  upsert: StoreUpsertWithoutStocksInput
  connect: StoreWhereUniqueInput
  update: StoreUpdateToOneWithWhereWithoutStocksInput
}

input StoreUpsertWithoutStocksInput {
  update: StoreUpdateWithoutStocksInput!
  create: StoreCreateWithoutStocksInput!
  where: StoreWhereInput
}

input StoreUpdateWithoutStocksInput {
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  location: NullableStringFieldUpdateOperationsInput
  isMain: BoolFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  manager: UserUpdateOneRequiredWithoutStoreNestedInput
  receipts: StockReceiptBatchUpdateManyWithoutStoreNestedInput
  transfersOut: StockTransferUpdateManyWithoutFromStoreNestedInput
  transfersIn: StockTransferUpdateManyWithoutToStoreNestedInput
  customerSales: ConsumerSaleUpdateManyWithoutStoreNestedInput
  salesReturns: SalesReturnUpdateManyWithoutStoreNestedInput
  resellerSales: ResellerSaleUpdateManyWithoutStoreNestedInput
  movements: StockMovementUpdateManyWithoutStoreNestedInput
  Customer: CustomerUpdateManyWithoutPreferredStoreNestedInput
  CustomerProfile: CustomerProfileUpdateManyWithoutPreferredStoreNestedInput
  Quotation: QuotationUpdateManyWithoutStoreNestedInput
  PurchaseRequisition: PurchaseRequisitionUpdateManyWithoutStoreNestedInput
  purchaseOrders: PurchaseOrderUpdateManyWithoutStoreNestedInput
  InvoiceImport: InvoiceImportUpdateManyWithoutStoreNestedInput
}

input BoolFieldUpdateOperationsInput {
  set: Boolean
}

input UserUpdateOneRequiredWithoutStoreNestedInput {
  create: UserCreateWithoutStoreInput
  connectOrCreate: UserCreateOrConnectWithoutStoreInput
  upsert: UserUpsertWithoutStoreInput
  connect: UserWhereUniqueInput
  update: UserUpdateToOneWithWhereWithoutStoreInput
}

input UserUpsertWithoutStoreInput {
  update: UserUpdateWithoutStoreInput!
  create: UserCreateWithoutStoreInput!
  where: UserWhereInput
}

input UserUpdateWithoutStoreInput {
  id: StringFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  passwordHash: StringFieldUpdateOperationsInput
  tier: NullableEnumUserTierFieldUpdateOperationsInput
  referralCode: NullableStringFieldUpdateOperationsInput
  referredBy: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  isEmailVerified: BoolFieldUpdateOperationsInput
  emailVerificationToken: NullableStringFieldUpdateOperationsInput
  emailVerificationTokenExpiry: NullableDateTimeFieldUpdateOperationsInput
  role: RoleUpdateOneRequiredWithoutUsersNestedInput
  resellerProfile: ResellerProfileUpdateOneWithoutUserNestedInput
  customerProfile: CustomerProfileUpdateOneWithoutUserNestedInput
  resellerPaymentsMade: ResellerPaymentUpdateManyWithoutResellerNestedInput
  resellerPaymentsReceived: ResellerPaymentUpdateManyWithoutReceivedByNestedInput
  adminLogs: AdminActionLogUpdateManyWithoutAdminNestedInput
  supportMessages: SupportMessageUpdateManyWithoutUserNestedInput
  ConsumerSale: ConsumerSaleUpdateManyWithoutBillerNestedInput
  ConsumerSaleAdjustedBys: ConsumerSaleUpdateManyWithoutAdjustedByNestedInput
  StockReceiptBatchReceivedBys: StockReceiptBatchUpdateManyWithoutReceivedByNestedInput
  StockReceiptBatchConfirmedBys: StockReceiptBatchUpdateManyWithoutConfirmedByNestedInput
  StockTransferRequests: StockTransferUpdateManyWithoutRequestedByNestedInput
  StockTransferApprovals: StockTransferUpdateManyWithoutApprovedByNestedInput
  ConsumerReceipt: ConsumerReceiptUpdateManyWithoutIssuedByNestedInput
  ResellerSales: ResellerSaleUpdateManyWithoutResellerNestedInput
  BillerResellerSale: ResellerSaleUpdateManyWithoutBillerNestedInput
  ResellerSale: ResellerSaleUpdateManyWithoutApprovedByNestedInput
  SalesReturnReceivers: SalesReturnUpdateManyWithoutReceivedByNestedInput
  SalesReturnRequesters: SalesReturnUpdateManyWithoutReturnedByNestedInput
  SalesReturn: SalesReturnUpdateManyWithoutApprovedByNestedInput
  PurchaseReturnInitiators: PurchaseReturnUpdateManyWithoutInitiatedByNestedInput
  PurchaseReturnApprovers: PurchaseReturnUpdateManyWithoutApprovedByNestedInput
  Payment: PaymentUpdateManyWithoutReceivedByNestedInput
  ResellerTierHistory: ResellerTierHistoryUpdateManyWithoutUserNestedInput
  ResellerTierHistoryChangedBys: ResellerTierHistoryUpdateManyWithoutAdminNestedInput
  ResellerProfile: ResellerProfileUpdateManyWithoutBillerNestedInput
  RequestedResellers: ResellerProfileUpdateManyWithoutRequestedBillerNestedInput
  Notification: NotificationUpdateManyWithoutUserNestedInput
  Fulfillment: FulfillmentUpdateManyWithoutDeliveryPersonnelNestedInput
  BillerQuotation: QuotationUpdateManyWithoutBillerNestedInput
  ResellerQuotation: QuotationUpdateManyWithoutResellerNestedInput
  PurchaseRequisition: PurchaseRequisitionUpdateManyWithoutRequestedByNestedInput
  Supplier: SupplierUpdateManyWithoutUserNestedInput
}

input NullableEnumUserTierFieldUpdateOperationsInput {
  set: UserTier
}

input NullableDateTimeFieldUpdateOperationsInput {
  set: DateTime
}

input RoleUpdateOneRequiredWithoutUsersNestedInput {
  create: RoleCreateWithoutUsersInput
  connectOrCreate: RoleCreateOrConnectWithoutUsersInput
  upsert: RoleUpsertWithoutUsersInput
  connect: RoleWhereUniqueInput
  update: RoleUpdateToOneWithWhereWithoutUsersInput
}

input RoleUpsertWithoutUsersInput {
  update: RoleUpdateWithoutUsersInput!
  create: RoleCreateWithoutUsersInput!
  where: RoleWhereInput
}

input RoleUpdateWithoutUsersInput {
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  createdBy: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  permissions: PermissionUpdateManyWithoutRolesNestedInput
}

input PermissionUpdateManyWithoutRolesNestedInput {
  create: [PermissionCreateWithoutRolesInput!]
  connectOrCreate: [PermissionCreateOrConnectWithoutRolesInput!]
  upsert: [PermissionUpsertWithWhereUniqueWithoutRolesInput!]
  set: [PermissionWhereUniqueInput!]
  disconnect: [PermissionWhereUniqueInput!]
  delete: [PermissionWhereUniqueInput!]
  connect: [PermissionWhereUniqueInput!]
  update: [PermissionUpdateWithWhereUniqueWithoutRolesInput!]
  updateMany: [PermissionUpdateManyWithWhereWithoutRolesInput!]
  deleteMany: [PermissionScalarWhereInput!]
}

input PermissionUpsertWithWhereUniqueWithoutRolesInput {
  where: PermissionWhereUniqueInput!
  update: PermissionUpdateWithoutRolesInput!
  create: PermissionCreateWithoutRolesInput!
}

input PermissionUpdateWithoutRolesInput {
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  module: StringFieldUpdateOperationsInput
  action: StringFieldUpdateOperationsInput
}

input PermissionUpdateWithWhereUniqueWithoutRolesInput {
  where: PermissionWhereUniqueInput!
  data: PermissionUpdateWithoutRolesInput!
}

input PermissionUpdateManyWithWhereWithoutRolesInput {
  where: PermissionScalarWhereInput!
  data: PermissionUpdateManyMutationInput!
}

input PermissionScalarWhereInput {
  AND: [PermissionScalarWhereInput!]
  OR: [PermissionScalarWhereInput!]
  NOT: [PermissionScalarWhereInput!]
  id: StringFilter
  name: StringFilter
  module: StringFilter
  action: StringFilter
}

input PermissionUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  module: StringFieldUpdateOperationsInput
  action: StringFieldUpdateOperationsInput
}

input RoleUpdateToOneWithWhereWithoutUsersInput {
  where: RoleWhereInput
  data: RoleUpdateWithoutUsersInput!
}

input ResellerProfileUpdateOneWithoutUserNestedInput {
  create: ResellerProfileCreateWithoutUserInput
  connectOrCreate: ResellerProfileCreateOrConnectWithoutUserInput
  upsert: ResellerProfileUpsertWithoutUserInput
  disconnect: ResellerProfileWhereInput
  delete: ResellerProfileWhereInput
  connect: ResellerProfileWhereUniqueInput
  update: ResellerProfileUpdateToOneWithWhereWithoutUserInput
}

input ResellerProfileUpsertWithoutUserInput {
  update: ResellerProfileUpdateWithoutUserInput!
  create: ResellerProfileCreateWithoutUserInput!
  where: ResellerProfileWhereInput
}

input ResellerProfileUpdateWithoutUserInput {
  tier: EnumUserTierFieldUpdateOperationsInput
  creditLimit: FloatFieldUpdateOperationsInput
  outstandingBalance: FloatFieldUpdateOperationsInput
  isActive: BoolFieldUpdateOperationsInput
  profileStatus: EnumProfileStatusFieldUpdateOperationsInput
  requestedAt: DateTimeFieldUpdateOperationsInput
  activatedAt: NullableDateTimeFieldUpdateOperationsInput
  rejectedAt: NullableDateTimeFieldUpdateOperationsInput
  rejectionReason: NullableStringFieldUpdateOperationsInput
  biller: UserUpdateOneWithoutResellerProfileNestedInput
  requestedBiller: UserUpdateOneWithoutRequestedResellersNestedInput
}

input EnumUserTierFieldUpdateOperationsInput {
  set: UserTier
}

input EnumProfileStatusFieldUpdateOperationsInput {
  set: ProfileStatus
}

input UserUpdateOneWithoutResellerProfileNestedInput {
  create: UserCreateWithoutResellerProfileInput
  connectOrCreate: UserCreateOrConnectWithoutResellerProfileInput
  upsert: UserUpsertWithoutResellerProfileInput
  disconnect: UserWhereInput
  delete: UserWhereInput
  connect: UserWhereUniqueInput
  update: UserUpdateToOneWithWhereWithoutResellerProfileInput
}

input UserUpsertWithoutResellerProfileInput {
  update: UserUpdateWithoutResellerProfileInput!
  create: UserCreateWithoutResellerProfileInput!
  where: UserWhereInput
}

input UserUpdateWithoutResellerProfileInput {
  id: StringFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  passwordHash: StringFieldUpdateOperationsInput
  tier: NullableEnumUserTierFieldUpdateOperationsInput
  referralCode: NullableStringFieldUpdateOperationsInput
  referredBy: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  isEmailVerified: BoolFieldUpdateOperationsInput
  emailVerificationToken: NullableStringFieldUpdateOperationsInput
  emailVerificationTokenExpiry: NullableDateTimeFieldUpdateOperationsInput
  role: RoleUpdateOneRequiredWithoutUsersNestedInput
  resellerProfile: ResellerProfileUpdateOneWithoutUserNestedInput
  customerProfile: CustomerProfileUpdateOneWithoutUserNestedInput
  resellerPaymentsMade: ResellerPaymentUpdateManyWithoutResellerNestedInput
  resellerPaymentsReceived: ResellerPaymentUpdateManyWithoutReceivedByNestedInput
  adminLogs: AdminActionLogUpdateManyWithoutAdminNestedInput
  supportMessages: SupportMessageUpdateManyWithoutUserNestedInput
  ConsumerSale: ConsumerSaleUpdateManyWithoutBillerNestedInput
  ConsumerSaleAdjustedBys: ConsumerSaleUpdateManyWithoutAdjustedByNestedInput
  StockReceiptBatchReceivedBys: StockReceiptBatchUpdateManyWithoutReceivedByNestedInput
  StockReceiptBatchConfirmedBys: StockReceiptBatchUpdateManyWithoutConfirmedByNestedInput
  StockTransferRequests: StockTransferUpdateManyWithoutRequestedByNestedInput
  StockTransferApprovals: StockTransferUpdateManyWithoutApprovedByNestedInput
  Store: StoreUpdateManyWithoutManagerNestedInput
  ConsumerReceipt: ConsumerReceiptUpdateManyWithoutIssuedByNestedInput
  ResellerSales: ResellerSaleUpdateManyWithoutResellerNestedInput
  BillerResellerSale: ResellerSaleUpdateManyWithoutBillerNestedInput
  ResellerSale: ResellerSaleUpdateManyWithoutApprovedByNestedInput
  SalesReturnReceivers: SalesReturnUpdateManyWithoutReceivedByNestedInput
  SalesReturnRequesters: SalesReturnUpdateManyWithoutReturnedByNestedInput
  SalesReturn: SalesReturnUpdateManyWithoutApprovedByNestedInput
  PurchaseReturnInitiators: PurchaseReturnUpdateManyWithoutInitiatedByNestedInput
  PurchaseReturnApprovers: PurchaseReturnUpdateManyWithoutApprovedByNestedInput
  Payment: PaymentUpdateManyWithoutReceivedByNestedInput
  ResellerTierHistory: ResellerTierHistoryUpdateManyWithoutUserNestedInput
  ResellerTierHistoryChangedBys: ResellerTierHistoryUpdateManyWithoutAdminNestedInput
  RequestedResellers: ResellerProfileUpdateManyWithoutRequestedBillerNestedInput
  Notification: NotificationUpdateManyWithoutUserNestedInput
  Fulfillment: FulfillmentUpdateManyWithoutDeliveryPersonnelNestedInput
  BillerQuotation: QuotationUpdateManyWithoutBillerNestedInput
  ResellerQuotation: QuotationUpdateManyWithoutResellerNestedInput
  PurchaseRequisition: PurchaseRequisitionUpdateManyWithoutRequestedByNestedInput
  Supplier: SupplierUpdateManyWithoutUserNestedInput
}

input CustomerProfileUpdateOneWithoutUserNestedInput {
  create: CustomerProfileCreateWithoutUserInput
  connectOrCreate: CustomerProfileCreateOrConnectWithoutUserInput
  upsert: CustomerProfileUpsertWithoutUserInput
  disconnect: CustomerProfileWhereInput
  delete: CustomerProfileWhereInput
  connect: CustomerProfileWhereUniqueInput
  update: CustomerProfileUpdateToOneWithWhereWithoutUserInput
}

input CustomerProfileUpsertWithoutUserInput {
  update: CustomerProfileUpdateWithoutUserInput!
  create: CustomerProfileCreateWithoutUserInput!
  where: CustomerProfileWhereInput
}

input CustomerProfileUpdateWithoutUserInput {
  fullName: StringFieldUpdateOperationsInput
  phone: NullableStringFieldUpdateOperationsInput
  email: NullableStringFieldUpdateOperationsInput
  gender: NullableStringFieldUpdateOperationsInput
  birthday: NullableDateTimeFieldUpdateOperationsInput
  profileStatus: EnumProfileStatusFieldUpdateOperationsInput
  requestedAt: DateTimeFieldUpdateOperationsInput
  activatedAt: NullableDateTimeFieldUpdateOperationsInput
  isPhoneVerified: BoolFieldUpdateOperationsInput
  phoneVerificationCode: NullableStringFieldUpdateOperationsInput
  phoneVerificationCodeExpiry: NullableDateTimeFieldUpdateOperationsInput
  preferredStore: StoreUpdateOneWithoutCustomerProfileNestedInput
  referredBy: CustomerProfileUpdateOneWithoutReferralsNestedInput
  referrals: CustomerProfileUpdateManyWithoutReferredByNestedInput
  sales: ConsumerSaleUpdateManyWithoutCustomerProfileNestedInput
  preferences: CustomerPreferenceProfileUpdateOneWithoutCustomerProfileNestedInput
}

input StoreUpdateOneWithoutCustomerProfileNestedInput {
  create: StoreCreateWithoutCustomerProfileInput
  connectOrCreate: StoreCreateOrConnectWithoutCustomerProfileInput
  upsert: StoreUpsertWithoutCustomerProfileInput
  disconnect: StoreWhereInput
  delete: StoreWhereInput
  connect: StoreWhereUniqueInput
  update: StoreUpdateToOneWithWhereWithoutCustomerProfileInput
}

input StoreUpsertWithoutCustomerProfileInput {
  update: StoreUpdateWithoutCustomerProfileInput!
  create: StoreCreateWithoutCustomerProfileInput!
  where: StoreWhereInput
}

input StoreUpdateWithoutCustomerProfileInput {
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  location: NullableStringFieldUpdateOperationsInput
  isMain: BoolFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  manager: UserUpdateOneRequiredWithoutStoreNestedInput
  stocks: StockUpdateManyWithoutStoreNestedInput
  receipts: StockReceiptBatchUpdateManyWithoutStoreNestedInput
  transfersOut: StockTransferUpdateManyWithoutFromStoreNestedInput
  transfersIn: StockTransferUpdateManyWithoutToStoreNestedInput
  customerSales: ConsumerSaleUpdateManyWithoutStoreNestedInput
  salesReturns: SalesReturnUpdateManyWithoutStoreNestedInput
  resellerSales: ResellerSaleUpdateManyWithoutStoreNestedInput
  movements: StockMovementUpdateManyWithoutStoreNestedInput
  Customer: CustomerUpdateManyWithoutPreferredStoreNestedInput
  Quotation: QuotationUpdateManyWithoutStoreNestedInput
  PurchaseRequisition: PurchaseRequisitionUpdateManyWithoutStoreNestedInput
  purchaseOrders: PurchaseOrderUpdateManyWithoutStoreNestedInput
  InvoiceImport: InvoiceImportUpdateManyWithoutStoreNestedInput
}

input StockUpdateManyWithoutStoreNestedInput {
  create: [StockCreateWithoutStoreInput!]
  connectOrCreate: [StockCreateOrConnectWithoutStoreInput!]
  upsert: [StockUpsertWithWhereUniqueWithoutStoreInput!]
  createMany: StockCreateManyStoreInputEnvelope
  set: [StockWhereUniqueInput!]
  disconnect: [StockWhereUniqueInput!]
  delete: [StockWhereUniqueInput!]
  connect: [StockWhereUniqueInput!]
  update: [StockUpdateWithWhereUniqueWithoutStoreInput!]
  updateMany: [StockUpdateManyWithWhereWithoutStoreInput!]
  deleteMany: [StockScalarWhereInput!]
}

input StockUpsertWithWhereUniqueWithoutStoreInput {
  where: StockWhereUniqueInput!
  update: StockUpdateWithoutStoreInput!
  create: StockCreateWithoutStoreInput!
}

input StockUpdateWithoutStoreInput {
  id: StringFieldUpdateOperationsInput
  quantity: IntFieldUpdateOperationsInput
  reserved: IntFieldUpdateOperationsInput
  reorderPoint: NullableIntFieldUpdateOperationsInput
  reorderQty: NullableIntFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  productVariant: ProductVariantUpdateOneRequiredWithoutStockItemsNestedInput
}

input ProductVariantUpdateOneRequiredWithoutStockItemsNestedInput {
  create: ProductVariantCreateWithoutStockItemsInput
  connectOrCreate: ProductVariantCreateOrConnectWithoutStockItemsInput
  upsert: ProductVariantUpsertWithoutStockItemsInput
  connect: ProductVariantWhereUniqueInput
  update: ProductVariantUpdateToOneWithWhereWithoutStockItemsInput
}

input ProductVariantUpsertWithoutStockItemsInput {
  update: ProductVariantUpdateWithoutStockItemsInput!
  create: ProductVariantCreateWithoutStockItemsInput!
  where: ProductVariantWhereInput
}

input ProductVariantUpdateWithoutStockItemsInput {
  id: StringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  size: StringFieldUpdateOperationsInput
  concentration: StringFieldUpdateOperationsInput
  packaging: StringFieldUpdateOperationsInput
  barcode: NullableStringFieldUpdateOperationsInput
  price: FloatFieldUpdateOperationsInput
  resellerPrice: FloatFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  product: ProductUpdateOneWithoutVariantsNestedInput
  receiptItems: StockReceiptBatchItemUpdateManyWithoutProductVariantNestedInput
  quotationItems: QuotationItemUpdateManyWithoutProductVariantNestedInput
  resellerItems: ResellerSaleItemUpdateManyWithoutProductVariantNestedInput
  consumerItems: ConsumerSaleItemUpdateManyWithoutProductVariantNestedInput
  returnItems: SalesReturnItemUpdateManyWithoutProductVariantNestedInput
  purchaseReturnItems: PurchaseReturnItemUpdateManyWithoutProductVariantNestedInput
  transferItems: StockTransferItemUpdateManyWithoutProductVariantNestedInput
  stats: ProductSalesStatsUpdateOneWithoutProductVariantNestedInput
  PurchaseOrderItem: PurchaseOrderItemUpdateManyWithoutProductVariantNestedInput
  StockMovementItem: StockMovementItemUpdateManyWithoutProductVariantNestedInput
  PurchaseRequisitionItem: PurchaseRequisitionItemUpdateManyWithoutProductVariantNestedInput
  SupplierCatalog: SupplierCatalogUpdateManyWithoutProductVariantNestedInput
  SupplierQuoteItem: SupplierQuoteItemUpdateManyWithoutProductVariantNestedInput
  ProductVariantTierPrice: ProductVariantTierPriceUpdateManyWithoutVariantNestedInput
  facets: VariantFacetValueUpdateManyWithoutVariantNestedInput
}

input ProductUpdateOneWithoutVariantsNestedInput {
  create: ProductCreateWithoutVariantsInput
  connectOrCreate: ProductCreateOrConnectWithoutVariantsInput
  upsert: ProductUpsertWithoutVariantsInput
  disconnect: ProductWhereInput
  delete: ProductWhereInput
  connect: ProductWhereUniqueInput
  update: ProductUpdateToOneWithWhereWithoutVariantsInput
}

input ProductUpsertWithoutVariantsInput {
  update: ProductUpdateWithoutVariantsInput!
  create: ProductCreateWithoutVariantsInput!
  where: ProductWhereInput
}

input ProductUpdateWithoutVariantsInput {
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  barcode: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  facets: ProductFacetValueUpdateManyWithoutProductNestedInput
}

input ProductFacetValueUpdateManyWithoutProductNestedInput {
  create: [ProductFacetValueCreateWithoutProductInput!]
  connectOrCreate: [ProductFacetValueCreateOrConnectWithoutProductInput!]
  upsert: [ProductFacetValueUpsertWithWhereUniqueWithoutProductInput!]
  createMany: ProductFacetValueCreateManyProductInputEnvelope
  set: [ProductFacetValueWhereUniqueInput!]
  disconnect: [ProductFacetValueWhereUniqueInput!]
  delete: [ProductFacetValueWhereUniqueInput!]
  connect: [ProductFacetValueWhereUniqueInput!]
  update: [ProductFacetValueUpdateWithWhereUniqueWithoutProductInput!]
  updateMany: [ProductFacetValueUpdateManyWithWhereWithoutProductInput!]
  deleteMany: [ProductFacetValueScalarWhereInput!]
}

input ProductFacetValueUpsertWithWhereUniqueWithoutProductInput {
  where: ProductFacetValueWhereUniqueInput!
  update: ProductFacetValueUpdateWithoutProductInput!
  create: ProductFacetValueCreateWithoutProductInput!
}

input ProductFacetValueUpdateWithoutProductInput {
  id: StringFieldUpdateOperationsInput
  value: StringFieldUpdateOperationsInput
  facet: FacetUpdateOneRequiredWithoutProductsNestedInput
}

input FacetUpdateOneRequiredWithoutProductsNestedInput {
  create: FacetCreateWithoutProductsInput
  connectOrCreate: FacetCreateOrConnectWithoutProductsInput
  upsert: FacetUpsertWithoutProductsInput
  connect: FacetWhereUniqueInput
  update: FacetUpdateToOneWithWhereWithoutProductsInput
}

input FacetUpsertWithoutProductsInput {
  update: FacetUpdateWithoutProductsInput!
  create: FacetCreateWithoutProductsInput!
  where: FacetWhereInput
}

input FacetUpdateWithoutProductsInput {
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  code: StringFieldUpdateOperationsInput
  isPrivate: BoolFieldUpdateOperationsInput
  values: FacetUpdatevaluesInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  variants: VariantFacetValueUpdateManyWithoutFacetNestedInput
}

input FacetUpdatevaluesInput {
  set: [String!]
  push: [String!]
}

input VariantFacetValueUpdateManyWithoutFacetNestedInput {
  create: [VariantFacetValueCreateWithoutFacetInput!]
  connectOrCreate: [VariantFacetValueCreateOrConnectWithoutFacetInput!]
  upsert: [VariantFacetValueUpsertWithWhereUniqueWithoutFacetInput!]
  createMany: VariantFacetValueCreateManyFacetInputEnvelope
  set: [VariantFacetValueWhereUniqueInput!]
  disconnect: [VariantFacetValueWhereUniqueInput!]
  delete: [VariantFacetValueWhereUniqueInput!]
  connect: [VariantFacetValueWhereUniqueInput!]
  update: [VariantFacetValueUpdateWithWhereUniqueWithoutFacetInput!]
  updateMany: [VariantFacetValueUpdateManyWithWhereWithoutFacetInput!]
  deleteMany: [VariantFacetValueScalarWhereInput!]
}

input VariantFacetValueUpsertWithWhereUniqueWithoutFacetInput {
  where: VariantFacetValueWhereUniqueInput!
  update: VariantFacetValueUpdateWithoutFacetInput!
  create: VariantFacetValueCreateWithoutFacetInput!
}

input VariantFacetValueUpdateWithoutFacetInput {
  id: StringFieldUpdateOperationsInput
  value: StringFieldUpdateOperationsInput
  variant: ProductVariantUpdateOneRequiredWithoutFacetsNestedInput
}

input ProductVariantUpdateOneRequiredWithoutFacetsNestedInput {
  create: ProductVariantCreateWithoutFacetsInput
  connectOrCreate: ProductVariantCreateOrConnectWithoutFacetsInput
  upsert: ProductVariantUpsertWithoutFacetsInput
  connect: ProductVariantWhereUniqueInput
  update: ProductVariantUpdateToOneWithWhereWithoutFacetsInput
}

input ProductVariantUpsertWithoutFacetsInput {
  update: ProductVariantUpdateWithoutFacetsInput!
  create: ProductVariantCreateWithoutFacetsInput!
  where: ProductVariantWhereInput
}

input ProductVariantUpdateWithoutFacetsInput {
  id: StringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  size: StringFieldUpdateOperationsInput
  concentration: StringFieldUpdateOperationsInput
  packaging: StringFieldUpdateOperationsInput
  barcode: NullableStringFieldUpdateOperationsInput
  price: FloatFieldUpdateOperationsInput
  resellerPrice: FloatFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  product: ProductUpdateOneWithoutVariantsNestedInput
  stockItems: StockUpdateManyWithoutProductVariantNestedInput
  receiptItems: StockReceiptBatchItemUpdateManyWithoutProductVariantNestedInput
  quotationItems: QuotationItemUpdateManyWithoutProductVariantNestedInput
  resellerItems: ResellerSaleItemUpdateManyWithoutProductVariantNestedInput
  consumerItems: ConsumerSaleItemUpdateManyWithoutProductVariantNestedInput
  returnItems: SalesReturnItemUpdateManyWithoutProductVariantNestedInput
  purchaseReturnItems: PurchaseReturnItemUpdateManyWithoutProductVariantNestedInput
  transferItems: StockTransferItemUpdateManyWithoutProductVariantNestedInput
  stats: ProductSalesStatsUpdateOneWithoutProductVariantNestedInput
  PurchaseOrderItem: PurchaseOrderItemUpdateManyWithoutProductVariantNestedInput
  StockMovementItem: StockMovementItemUpdateManyWithoutProductVariantNestedInput
  PurchaseRequisitionItem: PurchaseRequisitionItemUpdateManyWithoutProductVariantNestedInput
  SupplierCatalog: SupplierCatalogUpdateManyWithoutProductVariantNestedInput
  SupplierQuoteItem: SupplierQuoteItemUpdateManyWithoutProductVariantNestedInput
  ProductVariantTierPrice: ProductVariantTierPriceUpdateManyWithoutVariantNestedInput
}

input StockReceiptBatchItemUpdateManyWithoutProductVariantNestedInput {
  create: [StockReceiptBatchItemCreateWithoutProductVariantInput!]
  connectOrCreate: [StockReceiptBatchItemCreateOrConnectWithoutProductVariantInput!]
  upsert: [StockReceiptBatchItemUpsertWithWhereUniqueWithoutProductVariantInput!]
  createMany: StockReceiptBatchItemCreateManyProductVariantInputEnvelope
  set: [StockReceiptBatchItemWhereUniqueInput!]
  disconnect: [StockReceiptBatchItemWhereUniqueInput!]
  delete: [StockReceiptBatchItemWhereUniqueInput!]
  connect: [StockReceiptBatchItemWhereUniqueInput!]
  update: [StockReceiptBatchItemUpdateWithWhereUniqueWithoutProductVariantInput!]
  updateMany: [StockReceiptBatchItemUpdateManyWithWhereWithoutProductVariantInput!]
  deleteMany: [StockReceiptBatchItemScalarWhereInput!]
}

input StockReceiptBatchItemUpsertWithWhereUniqueWithoutProductVariantInput {
  where: StockReceiptBatchItemWhereUniqueInput!
  update: StockReceiptBatchItemUpdateWithoutProductVariantInput!
  create: StockReceiptBatchItemCreateWithoutProductVariantInput!
}

input StockReceiptBatchItemUpdateWithoutProductVariantInput {
  id: StringFieldUpdateOperationsInput
  quantity: IntFieldUpdateOperationsInput
  batch: StockReceiptBatchUpdateOneRequiredWithoutItemsNestedInput
}

input StockReceiptBatchUpdateOneRequiredWithoutItemsNestedInput {
  create: StockReceiptBatchCreateWithoutItemsInput
  connectOrCreate: StockReceiptBatchCreateOrConnectWithoutItemsInput
  upsert: StockReceiptBatchUpsertWithoutItemsInput
  connect: StockReceiptBatchWhereUniqueInput
  update: StockReceiptBatchUpdateToOneWithWhereWithoutItemsInput
}

input StockReceiptBatchUpsertWithoutItemsInput {
  update: StockReceiptBatchUpdateWithoutItemsInput!
  create: StockReceiptBatchCreateWithoutItemsInput!
  where: StockReceiptBatchWhereInput
}

input StockReceiptBatchUpdateWithoutItemsInput {
  id: StringFieldUpdateOperationsInput
  purchaseOrderId: StringFieldUpdateOperationsInput
  waybillUrl: NullableStringFieldUpdateOperationsInput
  receivedAt: DateTimeFieldUpdateOperationsInput
  store: StoreUpdateOneRequiredWithoutReceiptsNestedInput
  receivedBy: UserUpdateOneRequiredWithoutStockReceiptBatchReceivedBysNestedInput
  confirmedBy: UserUpdateOneRequiredWithoutStockReceiptBatchConfirmedBysNestedInput
  purchaseReturns: PurchaseReturnItemUpdateManyWithoutBatchNestedInput
  PurchaseOrder: PurchaseOrderUpdateManyWithoutReceiptsNestedInput
}

input StoreUpdateOneRequiredWithoutReceiptsNestedInput {
  create: StoreCreateWithoutReceiptsInput
  connectOrCreate: StoreCreateOrConnectWithoutReceiptsInput
  upsert: StoreUpsertWithoutReceiptsInput
  connect: StoreWhereUniqueInput
  update: StoreUpdateToOneWithWhereWithoutReceiptsInput
}

input StoreUpsertWithoutReceiptsInput {
  update: StoreUpdateWithoutReceiptsInput!
  create: StoreCreateWithoutReceiptsInput!
  where: StoreWhereInput
}

input StoreUpdateWithoutReceiptsInput {
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  location: NullableStringFieldUpdateOperationsInput
  isMain: BoolFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  manager: UserUpdateOneRequiredWithoutStoreNestedInput
  stocks: StockUpdateManyWithoutStoreNestedInput
  transfersOut: StockTransferUpdateManyWithoutFromStoreNestedInput
  transfersIn: StockTransferUpdateManyWithoutToStoreNestedInput
  customerSales: ConsumerSaleUpdateManyWithoutStoreNestedInput
  salesReturns: SalesReturnUpdateManyWithoutStoreNestedInput
  resellerSales: ResellerSaleUpdateManyWithoutStoreNestedInput
  movements: StockMovementUpdateManyWithoutStoreNestedInput
  Customer: CustomerUpdateManyWithoutPreferredStoreNestedInput
  CustomerProfile: CustomerProfileUpdateManyWithoutPreferredStoreNestedInput
  Quotation: QuotationUpdateManyWithoutStoreNestedInput
  PurchaseRequisition: PurchaseRequisitionUpdateManyWithoutStoreNestedInput
  purchaseOrders: PurchaseOrderUpdateManyWithoutStoreNestedInput
  InvoiceImport: InvoiceImportUpdateManyWithoutStoreNestedInput
}

input StockTransferUpdateManyWithoutFromStoreNestedInput {
  create: [StockTransferCreateWithoutFromStoreInput!]
  connectOrCreate: [StockTransferCreateOrConnectWithoutFromStoreInput!]
  upsert: [StockTransferUpsertWithWhereUniqueWithoutFromStoreInput!]
  createMany: StockTransferCreateManyFromStoreInputEnvelope
  set: [StockTransferWhereUniqueInput!]
  disconnect: [StockTransferWhereUniqueInput!]
  delete: [StockTransferWhereUniqueInput!]
  connect: [StockTransferWhereUniqueInput!]
  update: [StockTransferUpdateWithWhereUniqueWithoutFromStoreInput!]
  updateMany: [StockTransferUpdateManyWithWhereWithoutFromStoreInput!]
  deleteMany: [StockTransferScalarWhereInput!]
}

input StockTransferUpsertWithWhereUniqueWithoutFromStoreInput {
  where: StockTransferWhereUniqueInput!
  update: StockTransferUpdateWithoutFromStoreInput!
  create: StockTransferCreateWithoutFromStoreInput!
}

input StockTransferUpdateWithoutFromStoreInput {
  id: StringFieldUpdateOperationsInput
  status: EnumTransferStatusFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  toStore: StoreUpdateOneRequiredWithoutTransfersInNestedInput
  requestedBy: UserUpdateOneRequiredWithoutStockTransferRequestsNestedInput
  approvedBy: UserUpdateOneRequiredWithoutStockTransferApprovalsNestedInput
  items: StockTransferItemUpdateManyWithoutTransferNestedInput
}

input EnumTransferStatusFieldUpdateOperationsInput {
  set: TransferStatus
}

input StoreUpdateOneRequiredWithoutTransfersInNestedInput {
  create: StoreCreateWithoutTransfersInInput
  connectOrCreate: StoreCreateOrConnectWithoutTransfersInInput
  upsert: StoreUpsertWithoutTransfersInInput
  connect: StoreWhereUniqueInput
  update: StoreUpdateToOneWithWhereWithoutTransfersInInput
}

input StoreUpsertWithoutTransfersInInput {
  update: StoreUpdateWithoutTransfersInInput!
  create: StoreCreateWithoutTransfersInInput!
  where: StoreWhereInput
}

input StoreUpdateWithoutTransfersInInput {
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  location: NullableStringFieldUpdateOperationsInput
  isMain: BoolFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  manager: UserUpdateOneRequiredWithoutStoreNestedInput
  stocks: StockUpdateManyWithoutStoreNestedInput
  receipts: StockReceiptBatchUpdateManyWithoutStoreNestedInput
  transfersOut: StockTransferUpdateManyWithoutFromStoreNestedInput
  customerSales: ConsumerSaleUpdateManyWithoutStoreNestedInput
  salesReturns: SalesReturnUpdateManyWithoutStoreNestedInput
  resellerSales: ResellerSaleUpdateManyWithoutStoreNestedInput
  movements: StockMovementUpdateManyWithoutStoreNestedInput
  Customer: CustomerUpdateManyWithoutPreferredStoreNestedInput
  CustomerProfile: CustomerProfileUpdateManyWithoutPreferredStoreNestedInput
  Quotation: QuotationUpdateManyWithoutStoreNestedInput
  PurchaseRequisition: PurchaseRequisitionUpdateManyWithoutStoreNestedInput
  purchaseOrders: PurchaseOrderUpdateManyWithoutStoreNestedInput
  InvoiceImport: InvoiceImportUpdateManyWithoutStoreNestedInput
}

input StockReceiptBatchUpdateManyWithoutStoreNestedInput {
  create: [StockReceiptBatchCreateWithoutStoreInput!]
  connectOrCreate: [StockReceiptBatchCreateOrConnectWithoutStoreInput!]
  upsert: [StockReceiptBatchUpsertWithWhereUniqueWithoutStoreInput!]
  createMany: StockReceiptBatchCreateManyStoreInputEnvelope
  set: [StockReceiptBatchWhereUniqueInput!]
  disconnect: [StockReceiptBatchWhereUniqueInput!]
  delete: [StockReceiptBatchWhereUniqueInput!]
  connect: [StockReceiptBatchWhereUniqueInput!]
  update: [StockReceiptBatchUpdateWithWhereUniqueWithoutStoreInput!]
  updateMany: [StockReceiptBatchUpdateManyWithWhereWithoutStoreInput!]
  deleteMany: [StockReceiptBatchScalarWhereInput!]
}

input StockReceiptBatchUpsertWithWhereUniqueWithoutStoreInput {
  where: StockReceiptBatchWhereUniqueInput!
  update: StockReceiptBatchUpdateWithoutStoreInput!
  create: StockReceiptBatchCreateWithoutStoreInput!
}

input StockReceiptBatchUpdateWithoutStoreInput {
  id: StringFieldUpdateOperationsInput
  purchaseOrderId: StringFieldUpdateOperationsInput
  waybillUrl: NullableStringFieldUpdateOperationsInput
  receivedAt: DateTimeFieldUpdateOperationsInput
  receivedBy: UserUpdateOneRequiredWithoutStockReceiptBatchReceivedBysNestedInput
  confirmedBy: UserUpdateOneRequiredWithoutStockReceiptBatchConfirmedBysNestedInput
  items: StockReceiptBatchItemUpdateManyWithoutBatchNestedInput
  purchaseReturns: PurchaseReturnItemUpdateManyWithoutBatchNestedInput
  PurchaseOrder: PurchaseOrderUpdateManyWithoutReceiptsNestedInput
}

input UserUpdateOneRequiredWithoutStockReceiptBatchReceivedBysNestedInput {
  create: UserCreateWithoutStockReceiptBatchReceivedBysInput
  connectOrCreate: UserCreateOrConnectWithoutStockReceiptBatchReceivedBysInput
  upsert: UserUpsertWithoutStockReceiptBatchReceivedBysInput
  connect: UserWhereUniqueInput
  update: UserUpdateToOneWithWhereWithoutStockReceiptBatchReceivedBysInput
}

input UserUpsertWithoutStockReceiptBatchReceivedBysInput {
  update: UserUpdateWithoutStockReceiptBatchReceivedBysInput!
  create: UserCreateWithoutStockReceiptBatchReceivedBysInput!
  where: UserWhereInput
}

input UserUpdateWithoutStockReceiptBatchReceivedBysInput {
  id: StringFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  passwordHash: StringFieldUpdateOperationsInput
  tier: NullableEnumUserTierFieldUpdateOperationsInput
  referralCode: NullableStringFieldUpdateOperationsInput
  referredBy: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  isEmailVerified: BoolFieldUpdateOperationsInput
  emailVerificationToken: NullableStringFieldUpdateOperationsInput
  emailVerificationTokenExpiry: NullableDateTimeFieldUpdateOperationsInput
  role: RoleUpdateOneRequiredWithoutUsersNestedInput
  resellerProfile: ResellerProfileUpdateOneWithoutUserNestedInput
  customerProfile: CustomerProfileUpdateOneWithoutUserNestedInput
  resellerPaymentsMade: ResellerPaymentUpdateManyWithoutResellerNestedInput
  resellerPaymentsReceived: ResellerPaymentUpdateManyWithoutReceivedByNestedInput
  adminLogs: AdminActionLogUpdateManyWithoutAdminNestedInput
  supportMessages: SupportMessageUpdateManyWithoutUserNestedInput
  ConsumerSale: ConsumerSaleUpdateManyWithoutBillerNestedInput
  ConsumerSaleAdjustedBys: ConsumerSaleUpdateManyWithoutAdjustedByNestedInput
  StockReceiptBatchConfirmedBys: StockReceiptBatchUpdateManyWithoutConfirmedByNestedInput
  StockTransferRequests: StockTransferUpdateManyWithoutRequestedByNestedInput
  StockTransferApprovals: StockTransferUpdateManyWithoutApprovedByNestedInput
  Store: StoreUpdateManyWithoutManagerNestedInput
  ConsumerReceipt: ConsumerReceiptUpdateManyWithoutIssuedByNestedInput
  ResellerSales: ResellerSaleUpdateManyWithoutResellerNestedInput
  BillerResellerSale: ResellerSaleUpdateManyWithoutBillerNestedInput
  ResellerSale: ResellerSaleUpdateManyWithoutApprovedByNestedInput
  SalesReturnReceivers: SalesReturnUpdateManyWithoutReceivedByNestedInput
  SalesReturnRequesters: SalesReturnUpdateManyWithoutReturnedByNestedInput
  SalesReturn: SalesReturnUpdateManyWithoutApprovedByNestedInput
  PurchaseReturnInitiators: PurchaseReturnUpdateManyWithoutInitiatedByNestedInput
  PurchaseReturnApprovers: PurchaseReturnUpdateManyWithoutApprovedByNestedInput
  Payment: PaymentUpdateManyWithoutReceivedByNestedInput
  ResellerTierHistory: ResellerTierHistoryUpdateManyWithoutUserNestedInput
  ResellerTierHistoryChangedBys: ResellerTierHistoryUpdateManyWithoutAdminNestedInput
  ResellerProfile: ResellerProfileUpdateManyWithoutBillerNestedInput
  RequestedResellers: ResellerProfileUpdateManyWithoutRequestedBillerNestedInput
  Notification: NotificationUpdateManyWithoutUserNestedInput
  Fulfillment: FulfillmentUpdateManyWithoutDeliveryPersonnelNestedInput
  BillerQuotation: QuotationUpdateManyWithoutBillerNestedInput
  ResellerQuotation: QuotationUpdateManyWithoutResellerNestedInput
  PurchaseRequisition: PurchaseRequisitionUpdateManyWithoutRequestedByNestedInput
  Supplier: SupplierUpdateManyWithoutUserNestedInput
}

input ResellerPaymentUpdateManyWithoutResellerNestedInput {
  create: [ResellerPaymentCreateWithoutResellerInput!]
  connectOrCreate: [ResellerPaymentCreateOrConnectWithoutResellerInput!]
  upsert: [ResellerPaymentUpsertWithWhereUniqueWithoutResellerInput!]
  createMany: ResellerPaymentCreateManyResellerInputEnvelope
  set: [ResellerPaymentWhereUniqueInput!]
  disconnect: [ResellerPaymentWhereUniqueInput!]
  delete: [ResellerPaymentWhereUniqueInput!]
  connect: [ResellerPaymentWhereUniqueInput!]
  update: [ResellerPaymentUpdateWithWhereUniqueWithoutResellerInput!]
  updateMany: [ResellerPaymentUpdateManyWithWhereWithoutResellerInput!]
  deleteMany: [ResellerPaymentScalarWhereInput!]
}

input ResellerPaymentUpsertWithWhereUniqueWithoutResellerInput {
  where: ResellerPaymentWhereUniqueInput!
  update: ResellerPaymentUpdateWithoutResellerInput!
  create: ResellerPaymentCreateWithoutResellerInput!
}

input ResellerPaymentUpdateWithoutResellerInput {
  id: StringFieldUpdateOperationsInput
  amount: FloatFieldUpdateOperationsInput
  method: EnumPaymentMethodFieldUpdateOperationsInput
  reference: NullableStringFieldUpdateOperationsInput
  status: EnumPaymentStatusFieldUpdateOperationsInput
  receivedAt: DateTimeFieldUpdateOperationsInput
  saleOrder: SaleOrderUpdateOneRequiredWithoutResellerPaymentNestedInput
  sale: ResellerSaleUpdateOneWithoutPaymentsNestedInput
  receivedBy: UserUpdateOneRequiredWithoutResellerPaymentsReceivedNestedInput
}

input EnumPaymentMethodFieldUpdateOperationsInput {
  set: PaymentMethod
}

input EnumPaymentStatusFieldUpdateOperationsInput {
  set: PaymentStatus
}

input SaleOrderUpdateOneRequiredWithoutResellerPaymentNestedInput {
  create: SaleOrderCreateWithoutResellerPaymentInput
  connectOrCreate: SaleOrderCreateOrConnectWithoutResellerPaymentInput
  upsert: SaleOrderUpsertWithoutResellerPaymentInput
  connect: SaleOrderWhereUniqueInput
  update: SaleOrderUpdateToOneWithWhereWithoutResellerPaymentInput
}

input SaleOrderUpsertWithoutResellerPaymentInput {
  update: SaleOrderUpdateWithoutResellerPaymentInput!
  create: SaleOrderCreateWithoutResellerPaymentInput!
  where: SaleOrderWhereInput
}

input SaleOrderUpdateWithoutResellerPaymentInput {
  id: StringFieldUpdateOperationsInput
  storeId: StringFieldUpdateOperationsInput
  billerId: StringFieldUpdateOperationsInput
  type: EnumSaleTypeFieldUpdateOperationsInput
  status: EnumSaleStatusFieldUpdateOperationsInput
  phase: EnumOrderPhaseFieldUpdateOperationsInput
  totalAmount: FloatFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  resellerSaleid: NullableStringFieldUpdateOperationsInput
  consumerSale: ConsumerSaleUpdateOneWithoutSaleOrderNestedInput
  resellerSale: ResellerSaleUpdateOneWithoutSaleOrderNestedInput
  fulfillment: FulfillmentUpdateOneWithoutSaleOrderNestedInput
  quotation: QuotationUpdateOneWithoutSaleOrderNestedInput
  ConsumerPayment: ConsumerPaymentUpdateManyWithoutSaleOrderNestedInput
}

input EnumSaleTypeFieldUpdateOperationsInput {
  set: SaleType
}

input EnumSaleStatusFieldUpdateOperationsInput {
  set: SaleStatus
}

input EnumOrderPhaseFieldUpdateOperationsInput {
  set: OrderPhase
}

input ConsumerSaleUpdateOneWithoutSaleOrderNestedInput {
  create: ConsumerSaleCreateWithoutSaleOrderInput
  connectOrCreate: ConsumerSaleCreateOrConnectWithoutSaleOrderInput
  upsert: ConsumerSaleUpsertWithoutSaleOrderInput
  disconnect: ConsumerSaleWhereInput
  delete: ConsumerSaleWhereInput
  connect: ConsumerSaleWhereUniqueInput
  update: ConsumerSaleUpdateToOneWithWhereWithoutSaleOrderInput
}

input ConsumerSaleUpsertWithoutSaleOrderInput {
  update: ConsumerSaleUpdateWithoutSaleOrderInput!
  create: ConsumerSaleCreateWithoutSaleOrderInput!
  where: ConsumerSaleWhereInput
}

input ConsumerSaleUpdateWithoutSaleOrderInput {
  id: StringFieldUpdateOperationsInput
  channel: EnumSaleChannelFieldUpdateOperationsInput
  status: EnumSaleStatusFieldUpdateOperationsInput
  totalAmount: FloatFieldUpdateOperationsInput
  adjustmentType: NullableEnumAdjustmentTypeFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  customer: CustomerUpdateOneWithoutSalesNestedInput
  store: StoreUpdateOneRequiredWithoutCustomerSalesNestedInput
  biller: UserUpdateOneRequiredWithoutConsumerSaleNestedInput
  adjustedBy: UserUpdateOneWithoutConsumerSaleAdjustedBysNestedInput
  quotation: QuotationUpdateOneWithoutConsumerSaleNestedInput
  items: ConsumerSaleItemUpdateManyWithoutSaleNestedInput
  payments: ConsumerPaymentUpdateManyWithoutSaleNestedInput
  receipt: ConsumerReceiptUpdateOneWithoutSaleNestedInput
  SalesReturn: SalesReturnUpdateManyWithoutConsumerSaleNestedInput
  CustomerProfile: CustomerProfileUpdateManyWithoutSalesNestedInput
}

input EnumSaleChannelFieldUpdateOperationsInput {
  set: SaleChannel
}

input NullableEnumAdjustmentTypeFieldUpdateOperationsInput {
  set: AdjustmentType
}

input CustomerUpdateOneWithoutSalesNestedInput {
  create: CustomerCreateWithoutSalesInput
  connectOrCreate: CustomerCreateOrConnectWithoutSalesInput
  upsert: CustomerUpsertWithoutSalesInput
  disconnect: CustomerWhereInput
  delete: CustomerWhereInput
  connect: CustomerWhereUniqueInput
  update: CustomerUpdateToOneWithWhereWithoutSalesInput
}

input CustomerUpsertWithoutSalesInput {
  update: CustomerUpdateWithoutSalesInput!
  create: CustomerCreateWithoutSalesInput!
  where: CustomerWhereInput
}

input CustomerUpdateWithoutSalesInput {
  id: StringFieldUpdateOperationsInput
  fullName: StringFieldUpdateOperationsInput
  phone: NullableStringFieldUpdateOperationsInput
  email: NullableStringFieldUpdateOperationsInput
  preferredStore: StoreUpdateOneWithoutCustomerNestedInput
  CustomerPreferenceProfile: CustomerPreferenceProfileUpdateManyWithoutCustomerNestedInput
  Quotation: QuotationUpdateManyWithoutConsumerNestedInput
}

input StoreUpdateOneWithoutCustomerNestedInput {
  create: StoreCreateWithoutCustomerInput
  connectOrCreate: StoreCreateOrConnectWithoutCustomerInput
  upsert: StoreUpsertWithoutCustomerInput
  disconnect: StoreWhereInput
  delete: StoreWhereInput
  connect: StoreWhereUniqueInput
  update: StoreUpdateToOneWithWhereWithoutCustomerInput
}

input StoreUpsertWithoutCustomerInput {
  update: StoreUpdateWithoutCustomerInput!
  create: StoreCreateWithoutCustomerInput!
  where: StoreWhereInput
}

input StoreUpdateWithoutCustomerInput {
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  location: NullableStringFieldUpdateOperationsInput
  isMain: BoolFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  manager: UserUpdateOneRequiredWithoutStoreNestedInput
  stocks: StockUpdateManyWithoutStoreNestedInput
  receipts: StockReceiptBatchUpdateManyWithoutStoreNestedInput
  transfersOut: StockTransferUpdateManyWithoutFromStoreNestedInput
  transfersIn: StockTransferUpdateManyWithoutToStoreNestedInput
  customerSales: ConsumerSaleUpdateManyWithoutStoreNestedInput
  salesReturns: SalesReturnUpdateManyWithoutStoreNestedInput
  resellerSales: ResellerSaleUpdateManyWithoutStoreNestedInput
  movements: StockMovementUpdateManyWithoutStoreNestedInput
  CustomerProfile: CustomerProfileUpdateManyWithoutPreferredStoreNestedInput
  Quotation: QuotationUpdateManyWithoutStoreNestedInput
  PurchaseRequisition: PurchaseRequisitionUpdateManyWithoutStoreNestedInput
  purchaseOrders: PurchaseOrderUpdateManyWithoutStoreNestedInput
  InvoiceImport: InvoiceImportUpdateManyWithoutStoreNestedInput
}

input StockTransferUpdateManyWithoutToStoreNestedInput {
  create: [StockTransferCreateWithoutToStoreInput!]
  connectOrCreate: [StockTransferCreateOrConnectWithoutToStoreInput!]
  upsert: [StockTransferUpsertWithWhereUniqueWithoutToStoreInput!]
  createMany: StockTransferCreateManyToStoreInputEnvelope
  set: [StockTransferWhereUniqueInput!]
  disconnect: [StockTransferWhereUniqueInput!]
  delete: [StockTransferWhereUniqueInput!]
  connect: [StockTransferWhereUniqueInput!]
  update: [StockTransferUpdateWithWhereUniqueWithoutToStoreInput!]
  updateMany: [StockTransferUpdateManyWithWhereWithoutToStoreInput!]
  deleteMany: [StockTransferScalarWhereInput!]
}

input StockTransferUpsertWithWhereUniqueWithoutToStoreInput {
  where: StockTransferWhereUniqueInput!
  update: StockTransferUpdateWithoutToStoreInput!
  create: StockTransferCreateWithoutToStoreInput!
}

input StockTransferUpdateWithoutToStoreInput {
  id: StringFieldUpdateOperationsInput
  status: EnumTransferStatusFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  fromStore: StoreUpdateOneRequiredWithoutTransfersOutNestedInput
  requestedBy: UserUpdateOneRequiredWithoutStockTransferRequestsNestedInput
  approvedBy: UserUpdateOneRequiredWithoutStockTransferApprovalsNestedInput
  items: StockTransferItemUpdateManyWithoutTransferNestedInput
}

input StoreUpdateOneRequiredWithoutTransfersOutNestedInput {
  create: StoreCreateWithoutTransfersOutInput
  connectOrCreate: StoreCreateOrConnectWithoutTransfersOutInput
  upsert: StoreUpsertWithoutTransfersOutInput
  connect: StoreWhereUniqueInput
  update: StoreUpdateToOneWithWhereWithoutTransfersOutInput
}

input StoreUpsertWithoutTransfersOutInput {
  update: StoreUpdateWithoutTransfersOutInput!
  create: StoreCreateWithoutTransfersOutInput!
  where: StoreWhereInput
}

input StoreUpdateWithoutTransfersOutInput {
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  location: NullableStringFieldUpdateOperationsInput
  isMain: BoolFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  manager: UserUpdateOneRequiredWithoutStoreNestedInput
  stocks: StockUpdateManyWithoutStoreNestedInput
  receipts: StockReceiptBatchUpdateManyWithoutStoreNestedInput
  transfersIn: StockTransferUpdateManyWithoutToStoreNestedInput
  customerSales: ConsumerSaleUpdateManyWithoutStoreNestedInput
  salesReturns: SalesReturnUpdateManyWithoutStoreNestedInput
  resellerSales: ResellerSaleUpdateManyWithoutStoreNestedInput
  movements: StockMovementUpdateManyWithoutStoreNestedInput
  Customer: CustomerUpdateManyWithoutPreferredStoreNestedInput
  CustomerProfile: CustomerProfileUpdateManyWithoutPreferredStoreNestedInput
  Quotation: QuotationUpdateManyWithoutStoreNestedInput
  PurchaseRequisition: PurchaseRequisitionUpdateManyWithoutStoreNestedInput
  purchaseOrders: PurchaseOrderUpdateManyWithoutStoreNestedInput
  InvoiceImport: InvoiceImportUpdateManyWithoutStoreNestedInput
}

input ConsumerSaleUpdateManyWithoutStoreNestedInput {
  create: [ConsumerSaleCreateWithoutStoreInput!]
  connectOrCreate: [ConsumerSaleCreateOrConnectWithoutStoreInput!]
  upsert: [ConsumerSaleUpsertWithWhereUniqueWithoutStoreInput!]
  createMany: ConsumerSaleCreateManyStoreInputEnvelope
  set: [ConsumerSaleWhereUniqueInput!]
  disconnect: [ConsumerSaleWhereUniqueInput!]
  delete: [ConsumerSaleWhereUniqueInput!]
  connect: [ConsumerSaleWhereUniqueInput!]
  update: [ConsumerSaleUpdateWithWhereUniqueWithoutStoreInput!]
  updateMany: [ConsumerSaleUpdateManyWithWhereWithoutStoreInput!]
  deleteMany: [ConsumerSaleScalarWhereInput!]
}

input ConsumerSaleUpsertWithWhereUniqueWithoutStoreInput {
  where: ConsumerSaleWhereUniqueInput!
  update: ConsumerSaleUpdateWithoutStoreInput!
  create: ConsumerSaleCreateWithoutStoreInput!
}

input ConsumerSaleUpdateWithoutStoreInput {
  id: StringFieldUpdateOperationsInput
  channel: EnumSaleChannelFieldUpdateOperationsInput
  status: EnumSaleStatusFieldUpdateOperationsInput
  totalAmount: FloatFieldUpdateOperationsInput
  adjustmentType: NullableEnumAdjustmentTypeFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  customer: CustomerUpdateOneWithoutSalesNestedInput
  biller: UserUpdateOneRequiredWithoutConsumerSaleNestedInput
  adjustedBy: UserUpdateOneWithoutConsumerSaleAdjustedBysNestedInput
  quotation: QuotationUpdateOneWithoutConsumerSaleNestedInput
  items: ConsumerSaleItemUpdateManyWithoutSaleNestedInput
  payments: ConsumerPaymentUpdateManyWithoutSaleNestedInput
  receipt: ConsumerReceiptUpdateOneWithoutSaleNestedInput
  SalesReturn: SalesReturnUpdateManyWithoutConsumerSaleNestedInput
  CustomerProfile: CustomerProfileUpdateManyWithoutSalesNestedInput
  SaleOrder: SaleOrderUpdateOneRequiredWithoutConsumerSaleNestedInput
}

input UserUpdateOneRequiredWithoutConsumerSaleNestedInput {
  create: UserCreateWithoutConsumerSaleInput
  connectOrCreate: UserCreateOrConnectWithoutConsumerSaleInput
  upsert: UserUpsertWithoutConsumerSaleInput
  connect: UserWhereUniqueInput
  update: UserUpdateToOneWithWhereWithoutConsumerSaleInput
}

input UserUpsertWithoutConsumerSaleInput {
  update: UserUpdateWithoutConsumerSaleInput!
  create: UserCreateWithoutConsumerSaleInput!
  where: UserWhereInput
}

input UserUpdateWithoutConsumerSaleInput {
  id: StringFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  passwordHash: StringFieldUpdateOperationsInput
  tier: NullableEnumUserTierFieldUpdateOperationsInput
  referralCode: NullableStringFieldUpdateOperationsInput
  referredBy: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  isEmailVerified: BoolFieldUpdateOperationsInput
  emailVerificationToken: NullableStringFieldUpdateOperationsInput
  emailVerificationTokenExpiry: NullableDateTimeFieldUpdateOperationsInput
  role: RoleUpdateOneRequiredWithoutUsersNestedInput
  resellerProfile: ResellerProfileUpdateOneWithoutUserNestedInput
  customerProfile: CustomerProfileUpdateOneWithoutUserNestedInput
  resellerPaymentsMade: ResellerPaymentUpdateManyWithoutResellerNestedInput
  resellerPaymentsReceived: ResellerPaymentUpdateManyWithoutReceivedByNestedInput
  adminLogs: AdminActionLogUpdateManyWithoutAdminNestedInput
  supportMessages: SupportMessageUpdateManyWithoutUserNestedInput
  ConsumerSaleAdjustedBys: ConsumerSaleUpdateManyWithoutAdjustedByNestedInput
  StockReceiptBatchReceivedBys: StockReceiptBatchUpdateManyWithoutReceivedByNestedInput
  StockReceiptBatchConfirmedBys: StockReceiptBatchUpdateManyWithoutConfirmedByNestedInput
  StockTransferRequests: StockTransferUpdateManyWithoutRequestedByNestedInput
  StockTransferApprovals: StockTransferUpdateManyWithoutApprovedByNestedInput
  Store: StoreUpdateManyWithoutManagerNestedInput
  ConsumerReceipt: ConsumerReceiptUpdateManyWithoutIssuedByNestedInput
  ResellerSales: ResellerSaleUpdateManyWithoutResellerNestedInput
  BillerResellerSale: ResellerSaleUpdateManyWithoutBillerNestedInput
  ResellerSale: ResellerSaleUpdateManyWithoutApprovedByNestedInput
  SalesReturnReceivers: SalesReturnUpdateManyWithoutReceivedByNestedInput
  SalesReturnRequesters: SalesReturnUpdateManyWithoutReturnedByNestedInput
  SalesReturn: SalesReturnUpdateManyWithoutApprovedByNestedInput
  PurchaseReturnInitiators: PurchaseReturnUpdateManyWithoutInitiatedByNestedInput
  PurchaseReturnApprovers: PurchaseReturnUpdateManyWithoutApprovedByNestedInput
  Payment: PaymentUpdateManyWithoutReceivedByNestedInput
  ResellerTierHistory: ResellerTierHistoryUpdateManyWithoutUserNestedInput
  ResellerTierHistoryChangedBys: ResellerTierHistoryUpdateManyWithoutAdminNestedInput
  ResellerProfile: ResellerProfileUpdateManyWithoutBillerNestedInput
  RequestedResellers: ResellerProfileUpdateManyWithoutRequestedBillerNestedInput
  Notification: NotificationUpdateManyWithoutUserNestedInput
  Fulfillment: FulfillmentUpdateManyWithoutDeliveryPersonnelNestedInput
  BillerQuotation: QuotationUpdateManyWithoutBillerNestedInput
  ResellerQuotation: QuotationUpdateManyWithoutResellerNestedInput
  PurchaseRequisition: PurchaseRequisitionUpdateManyWithoutRequestedByNestedInput
  Supplier: SupplierUpdateManyWithoutUserNestedInput
}

input ResellerPaymentUpdateManyWithoutReceivedByNestedInput {
  create: [ResellerPaymentCreateWithoutReceivedByInput!]
  connectOrCreate: [ResellerPaymentCreateOrConnectWithoutReceivedByInput!]
  upsert: [ResellerPaymentUpsertWithWhereUniqueWithoutReceivedByInput!]
  createMany: ResellerPaymentCreateManyReceivedByInputEnvelope
  set: [ResellerPaymentWhereUniqueInput!]
  disconnect: [ResellerPaymentWhereUniqueInput!]
  delete: [ResellerPaymentWhereUniqueInput!]
  connect: [ResellerPaymentWhereUniqueInput!]
  update: [ResellerPaymentUpdateWithWhereUniqueWithoutReceivedByInput!]
  updateMany: [ResellerPaymentUpdateManyWithWhereWithoutReceivedByInput!]
  deleteMany: [ResellerPaymentScalarWhereInput!]
}

input ResellerPaymentUpsertWithWhereUniqueWithoutReceivedByInput {
  where: ResellerPaymentWhereUniqueInput!
  update: ResellerPaymentUpdateWithoutReceivedByInput!
  create: ResellerPaymentCreateWithoutReceivedByInput!
}

input ResellerPaymentUpdateWithoutReceivedByInput {
  id: StringFieldUpdateOperationsInput
  amount: FloatFieldUpdateOperationsInput
  method: EnumPaymentMethodFieldUpdateOperationsInput
  reference: NullableStringFieldUpdateOperationsInput
  status: EnumPaymentStatusFieldUpdateOperationsInput
  receivedAt: DateTimeFieldUpdateOperationsInput
  saleOrder: SaleOrderUpdateOneRequiredWithoutResellerPaymentNestedInput
  reseller: UserUpdateOneRequiredWithoutResellerPaymentsMadeNestedInput
  sale: ResellerSaleUpdateOneWithoutPaymentsNestedInput
}

input UserUpdateOneRequiredWithoutResellerPaymentsMadeNestedInput {
  create: UserCreateWithoutResellerPaymentsMadeInput
  connectOrCreate: UserCreateOrConnectWithoutResellerPaymentsMadeInput
  upsert: UserUpsertWithoutResellerPaymentsMadeInput
  connect: UserWhereUniqueInput
  update: UserUpdateToOneWithWhereWithoutResellerPaymentsMadeInput
}

input UserUpsertWithoutResellerPaymentsMadeInput {
  update: UserUpdateWithoutResellerPaymentsMadeInput!
  create: UserCreateWithoutResellerPaymentsMadeInput!
  where: UserWhereInput
}

input UserUpdateWithoutResellerPaymentsMadeInput {
  id: StringFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  passwordHash: StringFieldUpdateOperationsInput
  tier: NullableEnumUserTierFieldUpdateOperationsInput
  referralCode: NullableStringFieldUpdateOperationsInput
  referredBy: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  isEmailVerified: BoolFieldUpdateOperationsInput
  emailVerificationToken: NullableStringFieldUpdateOperationsInput
  emailVerificationTokenExpiry: NullableDateTimeFieldUpdateOperationsInput
  role: RoleUpdateOneRequiredWithoutUsersNestedInput
  resellerProfile: ResellerProfileUpdateOneWithoutUserNestedInput
  customerProfile: CustomerProfileUpdateOneWithoutUserNestedInput
  resellerPaymentsReceived: ResellerPaymentUpdateManyWithoutReceivedByNestedInput
  adminLogs: AdminActionLogUpdateManyWithoutAdminNestedInput
  supportMessages: SupportMessageUpdateManyWithoutUserNestedInput
  ConsumerSale: ConsumerSaleUpdateManyWithoutBillerNestedInput
  ConsumerSaleAdjustedBys: ConsumerSaleUpdateManyWithoutAdjustedByNestedInput
  StockReceiptBatchReceivedBys: StockReceiptBatchUpdateManyWithoutReceivedByNestedInput
  StockReceiptBatchConfirmedBys: StockReceiptBatchUpdateManyWithoutConfirmedByNestedInput
  StockTransferRequests: StockTransferUpdateManyWithoutRequestedByNestedInput
  StockTransferApprovals: StockTransferUpdateManyWithoutApprovedByNestedInput
  Store: StoreUpdateManyWithoutManagerNestedInput
  ConsumerReceipt: ConsumerReceiptUpdateManyWithoutIssuedByNestedInput
  ResellerSales: ResellerSaleUpdateManyWithoutResellerNestedInput
  BillerResellerSale: ResellerSaleUpdateManyWithoutBillerNestedInput
  ResellerSale: ResellerSaleUpdateManyWithoutApprovedByNestedInput
  SalesReturnReceivers: SalesReturnUpdateManyWithoutReceivedByNestedInput
  SalesReturnRequesters: SalesReturnUpdateManyWithoutReturnedByNestedInput
  SalesReturn: SalesReturnUpdateManyWithoutApprovedByNestedInput
  PurchaseReturnInitiators: PurchaseReturnUpdateManyWithoutInitiatedByNestedInput
  PurchaseReturnApprovers: PurchaseReturnUpdateManyWithoutApprovedByNestedInput
  Payment: PaymentUpdateManyWithoutReceivedByNestedInput
  ResellerTierHistory: ResellerTierHistoryUpdateManyWithoutUserNestedInput
  ResellerTierHistoryChangedBys: ResellerTierHistoryUpdateManyWithoutAdminNestedInput
  ResellerProfile: ResellerProfileUpdateManyWithoutBillerNestedInput
  RequestedResellers: ResellerProfileUpdateManyWithoutRequestedBillerNestedInput
  Notification: NotificationUpdateManyWithoutUserNestedInput
  Fulfillment: FulfillmentUpdateManyWithoutDeliveryPersonnelNestedInput
  BillerQuotation: QuotationUpdateManyWithoutBillerNestedInput
  ResellerQuotation: QuotationUpdateManyWithoutResellerNestedInput
  PurchaseRequisition: PurchaseRequisitionUpdateManyWithoutRequestedByNestedInput
  Supplier: SupplierUpdateManyWithoutUserNestedInput
}

input AdminActionLogUpdateManyWithoutAdminNestedInput {
  create: [AdminActionLogCreateWithoutAdminInput!]
  connectOrCreate: [AdminActionLogCreateOrConnectWithoutAdminInput!]
  upsert: [AdminActionLogUpsertWithWhereUniqueWithoutAdminInput!]
  createMany: AdminActionLogCreateManyAdminInputEnvelope
  set: [AdminActionLogWhereUniqueInput!]
  disconnect: [AdminActionLogWhereUniqueInput!]
  delete: [AdminActionLogWhereUniqueInput!]
  connect: [AdminActionLogWhereUniqueInput!]
  update: [AdminActionLogUpdateWithWhereUniqueWithoutAdminInput!]
  updateMany: [AdminActionLogUpdateManyWithWhereWithoutAdminInput!]
  deleteMany: [AdminActionLogScalarWhereInput!]
}

input AdminActionLogUpsertWithWhereUniqueWithoutAdminInput {
  where: AdminActionLogWhereUniqueInput!
  update: AdminActionLogUpdateWithoutAdminInput!
  create: AdminActionLogCreateWithoutAdminInput!
}

input AdminActionLogUpdateWithoutAdminInput {
  id: StringFieldUpdateOperationsInput
  action: StringFieldUpdateOperationsInput
  entityType: StringFieldUpdateOperationsInput
  entityId: StringFieldUpdateOperationsInput
  beforeChange: JSON
  afterChange: JSON
  timestamp: DateTimeFieldUpdateOperationsInput
}

input AdminActionLogUpdateWithWhereUniqueWithoutAdminInput {
  where: AdminActionLogWhereUniqueInput!
  data: AdminActionLogUpdateWithoutAdminInput!
}

input AdminActionLogUpdateManyWithWhereWithoutAdminInput {
  where: AdminActionLogScalarWhereInput!
  data: AdminActionLogUpdateManyMutationInput!
}

input AdminActionLogScalarWhereInput {
  AND: [AdminActionLogScalarWhereInput!]
  OR: [AdminActionLogScalarWhereInput!]
  NOT: [AdminActionLogScalarWhereInput!]
  id: StringFilter
  adminId: StringFilter
  action: StringFilter
  entityType: StringFilter
  entityId: StringFilter
  beforeChange: JsonNullableFilter
  afterChange: JsonNullableFilter
  timestamp: DateTimeFilter
}

input AdminActionLogUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
  action: StringFieldUpdateOperationsInput
  entityType: StringFieldUpdateOperationsInput
  entityId: StringFieldUpdateOperationsInput
  beforeChange: JSON
  afterChange: JSON
  timestamp: DateTimeFieldUpdateOperationsInput
}

input SupportMessageUpdateManyWithoutUserNestedInput {
  create: [SupportMessageCreateWithoutUserInput!]
  connectOrCreate: [SupportMessageCreateOrConnectWithoutUserInput!]
  upsert: [SupportMessageUpsertWithWhereUniqueWithoutUserInput!]
  createMany: SupportMessageCreateManyUserInputEnvelope
  set: [SupportMessageWhereUniqueInput!]
  disconnect: [SupportMessageWhereUniqueInput!]
  delete: [SupportMessageWhereUniqueInput!]
  connect: [SupportMessageWhereUniqueInput!]
  update: [SupportMessageUpdateWithWhereUniqueWithoutUserInput!]
  updateMany: [SupportMessageUpdateManyWithWhereWithoutUserInput!]
  deleteMany: [SupportMessageScalarWhereInput!]
}

input SupportMessageUpsertWithWhereUniqueWithoutUserInput {
  where: SupportMessageWhereUniqueInput!
  update: SupportMessageUpdateWithoutUserInput!
  create: SupportMessageCreateWithoutUserInput!
}

input SupportMessageUpdateWithoutUserInput {
  id: StringFieldUpdateOperationsInput
  isAdmin: BoolFieldUpdateOperationsInput
  message: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
}

input SupportMessageUpdateWithWhereUniqueWithoutUserInput {
  where: SupportMessageWhereUniqueInput!
  data: SupportMessageUpdateWithoutUserInput!
}

input SupportMessageUpdateManyWithWhereWithoutUserInput {
  where: SupportMessageScalarWhereInput!
  data: SupportMessageUpdateManyMutationInput!
}

input SupportMessageScalarWhereInput {
  AND: [SupportMessageScalarWhereInput!]
  OR: [SupportMessageScalarWhereInput!]
  NOT: [SupportMessageScalarWhereInput!]
  id: StringFilter
  userId: StringFilter
  isAdmin: BoolFilter
  message: StringFilter
  createdAt: DateTimeFilter
}

input SupportMessageUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
  isAdmin: BoolFieldUpdateOperationsInput
  message: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
}

input ConsumerSaleUpdateManyWithoutBillerNestedInput {
  create: [ConsumerSaleCreateWithoutBillerInput!]
  connectOrCreate: [ConsumerSaleCreateOrConnectWithoutBillerInput!]
  upsert: [ConsumerSaleUpsertWithWhereUniqueWithoutBillerInput!]
  createMany: ConsumerSaleCreateManyBillerInputEnvelope
  set: [ConsumerSaleWhereUniqueInput!]
  disconnect: [ConsumerSaleWhereUniqueInput!]
  delete: [ConsumerSaleWhereUniqueInput!]
  connect: [ConsumerSaleWhereUniqueInput!]
  update: [ConsumerSaleUpdateWithWhereUniqueWithoutBillerInput!]
  updateMany: [ConsumerSaleUpdateManyWithWhereWithoutBillerInput!]
  deleteMany: [ConsumerSaleScalarWhereInput!]
}

input ConsumerSaleUpsertWithWhereUniqueWithoutBillerInput {
  where: ConsumerSaleWhereUniqueInput!
  update: ConsumerSaleUpdateWithoutBillerInput!
  create: ConsumerSaleCreateWithoutBillerInput!
}

input ConsumerSaleUpdateWithoutBillerInput {
  id: StringFieldUpdateOperationsInput
  channel: EnumSaleChannelFieldUpdateOperationsInput
  status: EnumSaleStatusFieldUpdateOperationsInput
  totalAmount: FloatFieldUpdateOperationsInput
  adjustmentType: NullableEnumAdjustmentTypeFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  customer: CustomerUpdateOneWithoutSalesNestedInput
  store: StoreUpdateOneRequiredWithoutCustomerSalesNestedInput
  adjustedBy: UserUpdateOneWithoutConsumerSaleAdjustedBysNestedInput
  quotation: QuotationUpdateOneWithoutConsumerSaleNestedInput
  items: ConsumerSaleItemUpdateManyWithoutSaleNestedInput
  payments: ConsumerPaymentUpdateManyWithoutSaleNestedInput
  receipt: ConsumerReceiptUpdateOneWithoutSaleNestedInput
  SalesReturn: SalesReturnUpdateManyWithoutConsumerSaleNestedInput
  CustomerProfile: CustomerProfileUpdateManyWithoutSalesNestedInput
  SaleOrder: SaleOrderUpdateOneRequiredWithoutConsumerSaleNestedInput
}

input StoreUpdateOneRequiredWithoutCustomerSalesNestedInput {
  create: StoreCreateWithoutCustomerSalesInput
  connectOrCreate: StoreCreateOrConnectWithoutCustomerSalesInput
  upsert: StoreUpsertWithoutCustomerSalesInput
  connect: StoreWhereUniqueInput
  update: StoreUpdateToOneWithWhereWithoutCustomerSalesInput
}

input StoreUpsertWithoutCustomerSalesInput {
  update: StoreUpdateWithoutCustomerSalesInput!
  create: StoreCreateWithoutCustomerSalesInput!
  where: StoreWhereInput
}

input StoreUpdateWithoutCustomerSalesInput {
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  location: NullableStringFieldUpdateOperationsInput
  isMain: BoolFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  manager: UserUpdateOneRequiredWithoutStoreNestedInput
  stocks: StockUpdateManyWithoutStoreNestedInput
  receipts: StockReceiptBatchUpdateManyWithoutStoreNestedInput
  transfersOut: StockTransferUpdateManyWithoutFromStoreNestedInput
  transfersIn: StockTransferUpdateManyWithoutToStoreNestedInput
  salesReturns: SalesReturnUpdateManyWithoutStoreNestedInput
  resellerSales: ResellerSaleUpdateManyWithoutStoreNestedInput
  movements: StockMovementUpdateManyWithoutStoreNestedInput
  Customer: CustomerUpdateManyWithoutPreferredStoreNestedInput
  CustomerProfile: CustomerProfileUpdateManyWithoutPreferredStoreNestedInput
  Quotation: QuotationUpdateManyWithoutStoreNestedInput
  PurchaseRequisition: PurchaseRequisitionUpdateManyWithoutStoreNestedInput
  purchaseOrders: PurchaseOrderUpdateManyWithoutStoreNestedInput
  InvoiceImport: InvoiceImportUpdateManyWithoutStoreNestedInput
}

input SalesReturnUpdateManyWithoutStoreNestedInput {
  create: [SalesReturnCreateWithoutStoreInput!]
  connectOrCreate: [SalesReturnCreateOrConnectWithoutStoreInput!]
  upsert: [SalesReturnUpsertWithWhereUniqueWithoutStoreInput!]
  createMany: SalesReturnCreateManyStoreInputEnvelope
  set: [SalesReturnWhereUniqueInput!]
  disconnect: [SalesReturnWhereUniqueInput!]
  delete: [SalesReturnWhereUniqueInput!]
  connect: [SalesReturnWhereUniqueInput!]
  update: [SalesReturnUpdateWithWhereUniqueWithoutStoreInput!]
  updateMany: [SalesReturnUpdateManyWithWhereWithoutStoreInput!]
  deleteMany: [SalesReturnScalarWhereInput!]
}

input SalesReturnUpsertWithWhereUniqueWithoutStoreInput {
  where: SalesReturnWhereUniqueInput!
  update: SalesReturnUpdateWithoutStoreInput!
  create: SalesReturnCreateWithoutStoreInput!
}

input SalesReturnUpdateWithoutStoreInput {
  id: StringFieldUpdateOperationsInput
  type: EnumSaleTypeFieldUpdateOperationsInput
  status: EnumReturnStatusFieldUpdateOperationsInput
  returnLocation: EnumReturnLocationFieldUpdateOperationsInput
  isApprovedLate: BoolFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  consumerSale: ConsumerSaleUpdateOneWithoutSalesReturnNestedInput
  resellerSale: ResellerSaleUpdateOneWithoutSalesReturnNestedInput
  returnedBy: UserUpdateOneRequiredWithoutSalesReturnRequestersNestedInput
  receivedBy: UserUpdateOneRequiredWithoutSalesReturnReceiversNestedInput
  approvedBy: UserUpdateOneWithoutSalesReturnNestedInput
  items: SalesReturnItemUpdateManyWithoutReturnNestedInput
}

input EnumReturnStatusFieldUpdateOperationsInput {
  set: ReturnStatus
}

input EnumReturnLocationFieldUpdateOperationsInput {
  set: ReturnLocation
}

input ConsumerSaleUpdateOneWithoutSalesReturnNestedInput {
  create: ConsumerSaleCreateWithoutSalesReturnInput
  connectOrCreate: ConsumerSaleCreateOrConnectWithoutSalesReturnInput
  upsert: ConsumerSaleUpsertWithoutSalesReturnInput
  disconnect: ConsumerSaleWhereInput
  delete: ConsumerSaleWhereInput
  connect: ConsumerSaleWhereUniqueInput
  update: ConsumerSaleUpdateToOneWithWhereWithoutSalesReturnInput
}

input ConsumerSaleUpsertWithoutSalesReturnInput {
  update: ConsumerSaleUpdateWithoutSalesReturnInput!
  create: ConsumerSaleCreateWithoutSalesReturnInput!
  where: ConsumerSaleWhereInput
}

input ConsumerSaleUpdateWithoutSalesReturnInput {
  id: StringFieldUpdateOperationsInput
  channel: EnumSaleChannelFieldUpdateOperationsInput
  status: EnumSaleStatusFieldUpdateOperationsInput
  totalAmount: FloatFieldUpdateOperationsInput
  adjustmentType: NullableEnumAdjustmentTypeFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  customer: CustomerUpdateOneWithoutSalesNestedInput
  store: StoreUpdateOneRequiredWithoutCustomerSalesNestedInput
  biller: UserUpdateOneRequiredWithoutConsumerSaleNestedInput
  adjustedBy: UserUpdateOneWithoutConsumerSaleAdjustedBysNestedInput
  quotation: QuotationUpdateOneWithoutConsumerSaleNestedInput
  items: ConsumerSaleItemUpdateManyWithoutSaleNestedInput
  payments: ConsumerPaymentUpdateManyWithoutSaleNestedInput
  receipt: ConsumerReceiptUpdateOneWithoutSaleNestedInput
  CustomerProfile: CustomerProfileUpdateManyWithoutSalesNestedInput
  SaleOrder: SaleOrderUpdateOneRequiredWithoutConsumerSaleNestedInput
}

input UserUpdateOneWithoutConsumerSaleAdjustedBysNestedInput {
  create: UserCreateWithoutConsumerSaleAdjustedBysInput
  connectOrCreate: UserCreateOrConnectWithoutConsumerSaleAdjustedBysInput
  upsert: UserUpsertWithoutConsumerSaleAdjustedBysInput
  disconnect: UserWhereInput
  delete: UserWhereInput
  connect: UserWhereUniqueInput
  update: UserUpdateToOneWithWhereWithoutConsumerSaleAdjustedBysInput
}

input UserUpsertWithoutConsumerSaleAdjustedBysInput {
  update: UserUpdateWithoutConsumerSaleAdjustedBysInput!
  create: UserCreateWithoutConsumerSaleAdjustedBysInput!
  where: UserWhereInput
}

input UserUpdateWithoutConsumerSaleAdjustedBysInput {
  id: StringFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  passwordHash: StringFieldUpdateOperationsInput
  tier: NullableEnumUserTierFieldUpdateOperationsInput
  referralCode: NullableStringFieldUpdateOperationsInput
  referredBy: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  isEmailVerified: BoolFieldUpdateOperationsInput
  emailVerificationToken: NullableStringFieldUpdateOperationsInput
  emailVerificationTokenExpiry: NullableDateTimeFieldUpdateOperationsInput
  role: RoleUpdateOneRequiredWithoutUsersNestedInput
  resellerProfile: ResellerProfileUpdateOneWithoutUserNestedInput
  customerProfile: CustomerProfileUpdateOneWithoutUserNestedInput
  resellerPaymentsMade: ResellerPaymentUpdateManyWithoutResellerNestedInput
  resellerPaymentsReceived: ResellerPaymentUpdateManyWithoutReceivedByNestedInput
  adminLogs: AdminActionLogUpdateManyWithoutAdminNestedInput
  supportMessages: SupportMessageUpdateManyWithoutUserNestedInput
  ConsumerSale: ConsumerSaleUpdateManyWithoutBillerNestedInput
  StockReceiptBatchReceivedBys: StockReceiptBatchUpdateManyWithoutReceivedByNestedInput
  StockReceiptBatchConfirmedBys: StockReceiptBatchUpdateManyWithoutConfirmedByNestedInput
  StockTransferRequests: StockTransferUpdateManyWithoutRequestedByNestedInput
  StockTransferApprovals: StockTransferUpdateManyWithoutApprovedByNestedInput
  Store: StoreUpdateManyWithoutManagerNestedInput
  ConsumerReceipt: ConsumerReceiptUpdateManyWithoutIssuedByNestedInput
  ResellerSales: ResellerSaleUpdateManyWithoutResellerNestedInput
  BillerResellerSale: ResellerSaleUpdateManyWithoutBillerNestedInput
  ResellerSale: ResellerSaleUpdateManyWithoutApprovedByNestedInput
  SalesReturnReceivers: SalesReturnUpdateManyWithoutReceivedByNestedInput
  SalesReturnRequesters: SalesReturnUpdateManyWithoutReturnedByNestedInput
  SalesReturn: SalesReturnUpdateManyWithoutApprovedByNestedInput
  PurchaseReturnInitiators: PurchaseReturnUpdateManyWithoutInitiatedByNestedInput
  PurchaseReturnApprovers: PurchaseReturnUpdateManyWithoutApprovedByNestedInput
  Payment: PaymentUpdateManyWithoutReceivedByNestedInput
  ResellerTierHistory: ResellerTierHistoryUpdateManyWithoutUserNestedInput
  ResellerTierHistoryChangedBys: ResellerTierHistoryUpdateManyWithoutAdminNestedInput
  ResellerProfile: ResellerProfileUpdateManyWithoutBillerNestedInput
  RequestedResellers: ResellerProfileUpdateManyWithoutRequestedBillerNestedInput
  Notification: NotificationUpdateManyWithoutUserNestedInput
  Fulfillment: FulfillmentUpdateManyWithoutDeliveryPersonnelNestedInput
  BillerQuotation: QuotationUpdateManyWithoutBillerNestedInput
  ResellerQuotation: QuotationUpdateManyWithoutResellerNestedInput
  PurchaseRequisition: PurchaseRequisitionUpdateManyWithoutRequestedByNestedInput
  Supplier: SupplierUpdateManyWithoutUserNestedInput
}

input StockReceiptBatchUpdateManyWithoutReceivedByNestedInput {
  create: [StockReceiptBatchCreateWithoutReceivedByInput!]
  connectOrCreate: [StockReceiptBatchCreateOrConnectWithoutReceivedByInput!]
  upsert: [StockReceiptBatchUpsertWithWhereUniqueWithoutReceivedByInput!]
  createMany: StockReceiptBatchCreateManyReceivedByInputEnvelope
  set: [StockReceiptBatchWhereUniqueInput!]
  disconnect: [StockReceiptBatchWhereUniqueInput!]
  delete: [StockReceiptBatchWhereUniqueInput!]
  connect: [StockReceiptBatchWhereUniqueInput!]
  update: [StockReceiptBatchUpdateWithWhereUniqueWithoutReceivedByInput!]
  updateMany: [StockReceiptBatchUpdateManyWithWhereWithoutReceivedByInput!]
  deleteMany: [StockReceiptBatchScalarWhereInput!]
}

input StockReceiptBatchUpsertWithWhereUniqueWithoutReceivedByInput {
  where: StockReceiptBatchWhereUniqueInput!
  update: StockReceiptBatchUpdateWithoutReceivedByInput!
  create: StockReceiptBatchCreateWithoutReceivedByInput!
}

input StockReceiptBatchUpdateWithoutReceivedByInput {
  id: StringFieldUpdateOperationsInput
  purchaseOrderId: StringFieldUpdateOperationsInput
  waybillUrl: NullableStringFieldUpdateOperationsInput
  receivedAt: DateTimeFieldUpdateOperationsInput
  store: StoreUpdateOneRequiredWithoutReceiptsNestedInput
  confirmedBy: UserUpdateOneRequiredWithoutStockReceiptBatchConfirmedBysNestedInput
  items: StockReceiptBatchItemUpdateManyWithoutBatchNestedInput
  purchaseReturns: PurchaseReturnItemUpdateManyWithoutBatchNestedInput
  PurchaseOrder: PurchaseOrderUpdateManyWithoutReceiptsNestedInput
}

input UserUpdateOneRequiredWithoutStockReceiptBatchConfirmedBysNestedInput {
  create: UserCreateWithoutStockReceiptBatchConfirmedBysInput
  connectOrCreate: UserCreateOrConnectWithoutStockReceiptBatchConfirmedBysInput
  upsert: UserUpsertWithoutStockReceiptBatchConfirmedBysInput
  connect: UserWhereUniqueInput
  update: UserUpdateToOneWithWhereWithoutStockReceiptBatchConfirmedBysInput
}

input UserUpsertWithoutStockReceiptBatchConfirmedBysInput {
  update: UserUpdateWithoutStockReceiptBatchConfirmedBysInput!
  create: UserCreateWithoutStockReceiptBatchConfirmedBysInput!
  where: UserWhereInput
}

input UserUpdateWithoutStockReceiptBatchConfirmedBysInput {
  id: StringFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  passwordHash: StringFieldUpdateOperationsInput
  tier: NullableEnumUserTierFieldUpdateOperationsInput
  referralCode: NullableStringFieldUpdateOperationsInput
  referredBy: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  isEmailVerified: BoolFieldUpdateOperationsInput
  emailVerificationToken: NullableStringFieldUpdateOperationsInput
  emailVerificationTokenExpiry: NullableDateTimeFieldUpdateOperationsInput
  role: RoleUpdateOneRequiredWithoutUsersNestedInput
  resellerProfile: ResellerProfileUpdateOneWithoutUserNestedInput
  customerProfile: CustomerProfileUpdateOneWithoutUserNestedInput
  resellerPaymentsMade: ResellerPaymentUpdateManyWithoutResellerNestedInput
  resellerPaymentsReceived: ResellerPaymentUpdateManyWithoutReceivedByNestedInput
  adminLogs: AdminActionLogUpdateManyWithoutAdminNestedInput
  supportMessages: SupportMessageUpdateManyWithoutUserNestedInput
  ConsumerSale: ConsumerSaleUpdateManyWithoutBillerNestedInput
  ConsumerSaleAdjustedBys: ConsumerSaleUpdateManyWithoutAdjustedByNestedInput
  StockReceiptBatchReceivedBys: StockReceiptBatchUpdateManyWithoutReceivedByNestedInput
  StockTransferRequests: StockTransferUpdateManyWithoutRequestedByNestedInput
  StockTransferApprovals: StockTransferUpdateManyWithoutApprovedByNestedInput
  Store: StoreUpdateManyWithoutManagerNestedInput
  ConsumerReceipt: ConsumerReceiptUpdateManyWithoutIssuedByNestedInput
  ResellerSales: ResellerSaleUpdateManyWithoutResellerNestedInput
  BillerResellerSale: ResellerSaleUpdateManyWithoutBillerNestedInput
  ResellerSale: ResellerSaleUpdateManyWithoutApprovedByNestedInput
  SalesReturnReceivers: SalesReturnUpdateManyWithoutReceivedByNestedInput
  SalesReturnRequesters: SalesReturnUpdateManyWithoutReturnedByNestedInput
  SalesReturn: SalesReturnUpdateManyWithoutApprovedByNestedInput
  PurchaseReturnInitiators: PurchaseReturnUpdateManyWithoutInitiatedByNestedInput
  PurchaseReturnApprovers: PurchaseReturnUpdateManyWithoutApprovedByNestedInput
  Payment: PaymentUpdateManyWithoutReceivedByNestedInput
  ResellerTierHistory: ResellerTierHistoryUpdateManyWithoutUserNestedInput
  ResellerTierHistoryChangedBys: ResellerTierHistoryUpdateManyWithoutAdminNestedInput
  ResellerProfile: ResellerProfileUpdateManyWithoutBillerNestedInput
  RequestedResellers: ResellerProfileUpdateManyWithoutRequestedBillerNestedInput
  Notification: NotificationUpdateManyWithoutUserNestedInput
  Fulfillment: FulfillmentUpdateManyWithoutDeliveryPersonnelNestedInput
  BillerQuotation: QuotationUpdateManyWithoutBillerNestedInput
  ResellerQuotation: QuotationUpdateManyWithoutResellerNestedInput
  PurchaseRequisition: PurchaseRequisitionUpdateManyWithoutRequestedByNestedInput
  Supplier: SupplierUpdateManyWithoutUserNestedInput
}

input ConsumerSaleUpdateManyWithoutAdjustedByNestedInput {
  create: [ConsumerSaleCreateWithoutAdjustedByInput!]
  connectOrCreate: [ConsumerSaleCreateOrConnectWithoutAdjustedByInput!]
  upsert: [ConsumerSaleUpsertWithWhereUniqueWithoutAdjustedByInput!]
  createMany: ConsumerSaleCreateManyAdjustedByInputEnvelope
  set: [ConsumerSaleWhereUniqueInput!]
  disconnect: [ConsumerSaleWhereUniqueInput!]
  delete: [ConsumerSaleWhereUniqueInput!]
  connect: [ConsumerSaleWhereUniqueInput!]
  update: [ConsumerSaleUpdateWithWhereUniqueWithoutAdjustedByInput!]
  updateMany: [ConsumerSaleUpdateManyWithWhereWithoutAdjustedByInput!]
  deleteMany: [ConsumerSaleScalarWhereInput!]
}

input ConsumerSaleUpsertWithWhereUniqueWithoutAdjustedByInput {
  where: ConsumerSaleWhereUniqueInput!
  update: ConsumerSaleUpdateWithoutAdjustedByInput!
  create: ConsumerSaleCreateWithoutAdjustedByInput!
}

input ConsumerSaleUpdateWithoutAdjustedByInput {
  id: StringFieldUpdateOperationsInput
  channel: EnumSaleChannelFieldUpdateOperationsInput
  status: EnumSaleStatusFieldUpdateOperationsInput
  totalAmount: FloatFieldUpdateOperationsInput
  adjustmentType: NullableEnumAdjustmentTypeFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  customer: CustomerUpdateOneWithoutSalesNestedInput
  store: StoreUpdateOneRequiredWithoutCustomerSalesNestedInput
  biller: UserUpdateOneRequiredWithoutConsumerSaleNestedInput
  quotation: QuotationUpdateOneWithoutConsumerSaleNestedInput
  items: ConsumerSaleItemUpdateManyWithoutSaleNestedInput
  payments: ConsumerPaymentUpdateManyWithoutSaleNestedInput
  receipt: ConsumerReceiptUpdateOneWithoutSaleNestedInput
  SalesReturn: SalesReturnUpdateManyWithoutConsumerSaleNestedInput
  CustomerProfile: CustomerProfileUpdateManyWithoutSalesNestedInput
  SaleOrder: SaleOrderUpdateOneRequiredWithoutConsumerSaleNestedInput
}

input QuotationUpdateOneWithoutConsumerSaleNestedInput {
  create: QuotationCreateWithoutConsumerSaleInput
  connectOrCreate: QuotationCreateOrConnectWithoutConsumerSaleInput
  upsert: QuotationUpsertWithoutConsumerSaleInput
  disconnect: QuotationWhereInput
  delete: QuotationWhereInput
  connect: QuotationWhereUniqueInput
  update: QuotationUpdateToOneWithWhereWithoutConsumerSaleInput
}

input QuotationUpsertWithoutConsumerSaleInput {
  update: QuotationUpdateWithoutConsumerSaleInput!
  create: QuotationCreateWithoutConsumerSaleInput!
  where: QuotationWhereInput
}

input QuotationUpdateWithoutConsumerSaleInput {
  id: StringFieldUpdateOperationsInput
  type: EnumSaleTypeFieldUpdateOperationsInput
  channel: EnumSaleChannelFieldUpdateOperationsInput
  status: EnumQuotationStatusFieldUpdateOperationsInput
  totalAmount: FloatFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  store: StoreUpdateOneRequiredWithoutQuotationNestedInput
  biller: UserUpdateOneWithoutBillerQuotationNestedInput
  consumer: CustomerUpdateOneWithoutQuotationNestedInput
  reseller: UserUpdateOneWithoutResellerQuotationNestedInput
  items: QuotationItemUpdateManyWithoutQuotationNestedInput
  sale: ResellerSaleUpdateOneWithoutQuotationNestedInput
  SaleOrder: SaleOrderUpdateOneWithoutQuotationNestedInput
}

input EnumQuotationStatusFieldUpdateOperationsInput {
  set: QuotationStatus
}

input StoreUpdateOneRequiredWithoutQuotationNestedInput {
  create: StoreCreateWithoutQuotationInput
  connectOrCreate: StoreCreateOrConnectWithoutQuotationInput
  upsert: StoreUpsertWithoutQuotationInput
  connect: StoreWhereUniqueInput
  update: StoreUpdateToOneWithWhereWithoutQuotationInput
}

input StoreUpsertWithoutQuotationInput {
  update: StoreUpdateWithoutQuotationInput!
  create: StoreCreateWithoutQuotationInput!
  where: StoreWhereInput
}

input StoreUpdateWithoutQuotationInput {
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  location: NullableStringFieldUpdateOperationsInput
  isMain: BoolFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  manager: UserUpdateOneRequiredWithoutStoreNestedInput
  stocks: StockUpdateManyWithoutStoreNestedInput
  receipts: StockReceiptBatchUpdateManyWithoutStoreNestedInput
  transfersOut: StockTransferUpdateManyWithoutFromStoreNestedInput
  transfersIn: StockTransferUpdateManyWithoutToStoreNestedInput
  customerSales: ConsumerSaleUpdateManyWithoutStoreNestedInput
  salesReturns: SalesReturnUpdateManyWithoutStoreNestedInput
  resellerSales: ResellerSaleUpdateManyWithoutStoreNestedInput
  movements: StockMovementUpdateManyWithoutStoreNestedInput
  Customer: CustomerUpdateManyWithoutPreferredStoreNestedInput
  CustomerProfile: CustomerProfileUpdateManyWithoutPreferredStoreNestedInput
  PurchaseRequisition: PurchaseRequisitionUpdateManyWithoutStoreNestedInput
  purchaseOrders: PurchaseOrderUpdateManyWithoutStoreNestedInput
  InvoiceImport: InvoiceImportUpdateManyWithoutStoreNestedInput
}

input ResellerSaleUpdateManyWithoutStoreNestedInput {
  create: [ResellerSaleCreateWithoutStoreInput!]
  connectOrCreate: [ResellerSaleCreateOrConnectWithoutStoreInput!]
  upsert: [ResellerSaleUpsertWithWhereUniqueWithoutStoreInput!]
  createMany: ResellerSaleCreateManyStoreInputEnvelope
  set: [ResellerSaleWhereUniqueInput!]
  disconnect: [ResellerSaleWhereUniqueInput!]
  delete: [ResellerSaleWhereUniqueInput!]
  connect: [ResellerSaleWhereUniqueInput!]
  update: [ResellerSaleUpdateWithWhereUniqueWithoutStoreInput!]
  updateMany: [ResellerSaleUpdateManyWithWhereWithoutStoreInput!]
  deleteMany: [ResellerSaleScalarWhereInput!]
}

input ResellerSaleUpsertWithWhereUniqueWithoutStoreInput {
  where: ResellerSaleWhereUniqueInput!
  update: ResellerSaleUpdateWithoutStoreInput!
  create: ResellerSaleCreateWithoutStoreInput!
}

input ResellerSaleUpdateWithoutStoreInput {
  id: StringFieldUpdateOperationsInput
  status: EnumSaleStatusFieldUpdateOperationsInput
  totalAmount: FloatFieldUpdateOperationsInput
  approvedAt: NullableDateTimeFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  reseller: UserUpdateOneRequiredWithoutResellerSalesNestedInput
  biller: UserUpdateOneRequiredWithoutBillerResellerSaleNestedInput
  approvedBy: UserUpdateOneWithoutResellerSaleNestedInput
  quotation: QuotationUpdateOneWithoutSaleNestedInput
  items: ResellerSaleItemUpdateManyWithoutSaleNestedInput
  payments: ResellerPaymentUpdateManyWithoutSaleNestedInput
  SalesReturn: SalesReturnUpdateManyWithoutResellerSaleNestedInput
  SaleOrder: SaleOrderUpdateOneRequiredWithoutResellerSaleNestedInput
}

input UserUpdateOneRequiredWithoutResellerSalesNestedInput {
  create: UserCreateWithoutResellerSalesInput
  connectOrCreate: UserCreateOrConnectWithoutResellerSalesInput
  upsert: UserUpsertWithoutResellerSalesInput
  connect: UserWhereUniqueInput
  update: UserUpdateToOneWithWhereWithoutResellerSalesInput
}

input UserUpsertWithoutResellerSalesInput {
  update: UserUpdateWithoutResellerSalesInput!
  create: UserCreateWithoutResellerSalesInput!
  where: UserWhereInput
}

input UserUpdateWithoutResellerSalesInput {
  id: StringFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  passwordHash: StringFieldUpdateOperationsInput
  tier: NullableEnumUserTierFieldUpdateOperationsInput
  referralCode: NullableStringFieldUpdateOperationsInput
  referredBy: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  isEmailVerified: BoolFieldUpdateOperationsInput
  emailVerificationToken: NullableStringFieldUpdateOperationsInput
  emailVerificationTokenExpiry: NullableDateTimeFieldUpdateOperationsInput
  role: RoleUpdateOneRequiredWithoutUsersNestedInput
  resellerProfile: ResellerProfileUpdateOneWithoutUserNestedInput
  customerProfile: CustomerProfileUpdateOneWithoutUserNestedInput
  resellerPaymentsMade: ResellerPaymentUpdateManyWithoutResellerNestedInput
  resellerPaymentsReceived: ResellerPaymentUpdateManyWithoutReceivedByNestedInput
  adminLogs: AdminActionLogUpdateManyWithoutAdminNestedInput
  supportMessages: SupportMessageUpdateManyWithoutUserNestedInput
  ConsumerSale: ConsumerSaleUpdateManyWithoutBillerNestedInput
  ConsumerSaleAdjustedBys: ConsumerSaleUpdateManyWithoutAdjustedByNestedInput
  StockReceiptBatchReceivedBys: StockReceiptBatchUpdateManyWithoutReceivedByNestedInput
  StockReceiptBatchConfirmedBys: StockReceiptBatchUpdateManyWithoutConfirmedByNestedInput
  StockTransferRequests: StockTransferUpdateManyWithoutRequestedByNestedInput
  StockTransferApprovals: StockTransferUpdateManyWithoutApprovedByNestedInput
  Store: StoreUpdateManyWithoutManagerNestedInput
  ConsumerReceipt: ConsumerReceiptUpdateManyWithoutIssuedByNestedInput
  BillerResellerSale: ResellerSaleUpdateManyWithoutBillerNestedInput
  ResellerSale: ResellerSaleUpdateManyWithoutApprovedByNestedInput
  SalesReturnReceivers: SalesReturnUpdateManyWithoutReceivedByNestedInput
  SalesReturnRequesters: SalesReturnUpdateManyWithoutReturnedByNestedInput
  SalesReturn: SalesReturnUpdateManyWithoutApprovedByNestedInput
  PurchaseReturnInitiators: PurchaseReturnUpdateManyWithoutInitiatedByNestedInput
  PurchaseReturnApprovers: PurchaseReturnUpdateManyWithoutApprovedByNestedInput
  Payment: PaymentUpdateManyWithoutReceivedByNestedInput
  ResellerTierHistory: ResellerTierHistoryUpdateManyWithoutUserNestedInput
  ResellerTierHistoryChangedBys: ResellerTierHistoryUpdateManyWithoutAdminNestedInput
  ResellerProfile: ResellerProfileUpdateManyWithoutBillerNestedInput
  RequestedResellers: ResellerProfileUpdateManyWithoutRequestedBillerNestedInput
  Notification: NotificationUpdateManyWithoutUserNestedInput
  Fulfillment: FulfillmentUpdateManyWithoutDeliveryPersonnelNestedInput
  BillerQuotation: QuotationUpdateManyWithoutBillerNestedInput
  ResellerQuotation: QuotationUpdateManyWithoutResellerNestedInput
  PurchaseRequisition: PurchaseRequisitionUpdateManyWithoutRequestedByNestedInput
  Supplier: SupplierUpdateManyWithoutUserNestedInput
}

input StockReceiptBatchUpdateManyWithoutConfirmedByNestedInput {
  create: [StockReceiptBatchCreateWithoutConfirmedByInput!]
  connectOrCreate: [StockReceiptBatchCreateOrConnectWithoutConfirmedByInput!]
  upsert: [StockReceiptBatchUpsertWithWhereUniqueWithoutConfirmedByInput!]
  createMany: StockReceiptBatchCreateManyConfirmedByInputEnvelope
  set: [StockReceiptBatchWhereUniqueInput!]
  disconnect: [StockReceiptBatchWhereUniqueInput!]
  delete: [StockReceiptBatchWhereUniqueInput!]
  connect: [StockReceiptBatchWhereUniqueInput!]
  update: [StockReceiptBatchUpdateWithWhereUniqueWithoutConfirmedByInput!]
  updateMany: [StockReceiptBatchUpdateManyWithWhereWithoutConfirmedByInput!]
  deleteMany: [StockReceiptBatchScalarWhereInput!]
}

input StockReceiptBatchUpsertWithWhereUniqueWithoutConfirmedByInput {
  where: StockReceiptBatchWhereUniqueInput!
  update: StockReceiptBatchUpdateWithoutConfirmedByInput!
  create: StockReceiptBatchCreateWithoutConfirmedByInput!
}

input StockReceiptBatchUpdateWithoutConfirmedByInput {
  id: StringFieldUpdateOperationsInput
  purchaseOrderId: StringFieldUpdateOperationsInput
  waybillUrl: NullableStringFieldUpdateOperationsInput
  receivedAt: DateTimeFieldUpdateOperationsInput
  store: StoreUpdateOneRequiredWithoutReceiptsNestedInput
  receivedBy: UserUpdateOneRequiredWithoutStockReceiptBatchReceivedBysNestedInput
  items: StockReceiptBatchItemUpdateManyWithoutBatchNestedInput
  purchaseReturns: PurchaseReturnItemUpdateManyWithoutBatchNestedInput
  PurchaseOrder: PurchaseOrderUpdateManyWithoutReceiptsNestedInput
}

input StockReceiptBatchItemUpdateManyWithoutBatchNestedInput {
  create: [StockReceiptBatchItemCreateWithoutBatchInput!]
  connectOrCreate: [StockReceiptBatchItemCreateOrConnectWithoutBatchInput!]
  upsert: [StockReceiptBatchItemUpsertWithWhereUniqueWithoutBatchInput!]
  createMany: StockReceiptBatchItemCreateManyBatchInputEnvelope
  set: [StockReceiptBatchItemWhereUniqueInput!]
  disconnect: [StockReceiptBatchItemWhereUniqueInput!]
  delete: [StockReceiptBatchItemWhereUniqueInput!]
  connect: [StockReceiptBatchItemWhereUniqueInput!]
  update: [StockReceiptBatchItemUpdateWithWhereUniqueWithoutBatchInput!]
  updateMany: [StockReceiptBatchItemUpdateManyWithWhereWithoutBatchInput!]
  deleteMany: [StockReceiptBatchItemScalarWhereInput!]
}

input StockReceiptBatchItemUpsertWithWhereUniqueWithoutBatchInput {
  where: StockReceiptBatchItemWhereUniqueInput!
  update: StockReceiptBatchItemUpdateWithoutBatchInput!
  create: StockReceiptBatchItemCreateWithoutBatchInput!
}

input StockReceiptBatchItemUpdateWithoutBatchInput {
  id: StringFieldUpdateOperationsInput
  quantity: IntFieldUpdateOperationsInput
  productVariant: ProductVariantUpdateOneRequiredWithoutReceiptItemsNestedInput
}

input ProductVariantUpdateOneRequiredWithoutReceiptItemsNestedInput {
  create: ProductVariantCreateWithoutReceiptItemsInput
  connectOrCreate: ProductVariantCreateOrConnectWithoutReceiptItemsInput
  upsert: ProductVariantUpsertWithoutReceiptItemsInput
  connect: ProductVariantWhereUniqueInput
  update: ProductVariantUpdateToOneWithWhereWithoutReceiptItemsInput
}

input ProductVariantUpsertWithoutReceiptItemsInput {
  update: ProductVariantUpdateWithoutReceiptItemsInput!
  create: ProductVariantCreateWithoutReceiptItemsInput!
  where: ProductVariantWhereInput
}

input ProductVariantUpdateWithoutReceiptItemsInput {
  id: StringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  size: StringFieldUpdateOperationsInput
  concentration: StringFieldUpdateOperationsInput
  packaging: StringFieldUpdateOperationsInput
  barcode: NullableStringFieldUpdateOperationsInput
  price: FloatFieldUpdateOperationsInput
  resellerPrice: FloatFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  product: ProductUpdateOneWithoutVariantsNestedInput
  stockItems: StockUpdateManyWithoutProductVariantNestedInput
  quotationItems: QuotationItemUpdateManyWithoutProductVariantNestedInput
  resellerItems: ResellerSaleItemUpdateManyWithoutProductVariantNestedInput
  consumerItems: ConsumerSaleItemUpdateManyWithoutProductVariantNestedInput
  returnItems: SalesReturnItemUpdateManyWithoutProductVariantNestedInput
  purchaseReturnItems: PurchaseReturnItemUpdateManyWithoutProductVariantNestedInput
  transferItems: StockTransferItemUpdateManyWithoutProductVariantNestedInput
  stats: ProductSalesStatsUpdateOneWithoutProductVariantNestedInput
  PurchaseOrderItem: PurchaseOrderItemUpdateManyWithoutProductVariantNestedInput
  StockMovementItem: StockMovementItemUpdateManyWithoutProductVariantNestedInput
  PurchaseRequisitionItem: PurchaseRequisitionItemUpdateManyWithoutProductVariantNestedInput
  SupplierCatalog: SupplierCatalogUpdateManyWithoutProductVariantNestedInput
  SupplierQuoteItem: SupplierQuoteItemUpdateManyWithoutProductVariantNestedInput
  ProductVariantTierPrice: ProductVariantTierPriceUpdateManyWithoutVariantNestedInput
  facets: VariantFacetValueUpdateManyWithoutVariantNestedInput
}

input QuotationItemUpdateManyWithoutProductVariantNestedInput {
  create: [QuotationItemCreateWithoutProductVariantInput!]
  connectOrCreate: [QuotationItemCreateOrConnectWithoutProductVariantInput!]
  upsert: [QuotationItemUpsertWithWhereUniqueWithoutProductVariantInput!]
  createMany: QuotationItemCreateManyProductVariantInputEnvelope
  set: [QuotationItemWhereUniqueInput!]
  disconnect: [QuotationItemWhereUniqueInput!]
  delete: [QuotationItemWhereUniqueInput!]
  connect: [QuotationItemWhereUniqueInput!]
  update: [QuotationItemUpdateWithWhereUniqueWithoutProductVariantInput!]
  updateMany: [QuotationItemUpdateManyWithWhereWithoutProductVariantInput!]
  deleteMany: [QuotationItemScalarWhereInput!]
}

input QuotationItemUpsertWithWhereUniqueWithoutProductVariantInput {
  where: QuotationItemWhereUniqueInput!
  update: QuotationItemUpdateWithoutProductVariantInput!
  create: QuotationItemCreateWithoutProductVariantInput!
}

input QuotationItemUpdateWithoutProductVariantInput {
  id: StringFieldUpdateOperationsInput
  quantity: IntFieldUpdateOperationsInput
  unitPrice: FloatFieldUpdateOperationsInput
  quotation: QuotationUpdateOneRequiredWithoutItemsNestedInput
}

input QuotationUpdateOneRequiredWithoutItemsNestedInput {
  create: QuotationCreateWithoutItemsInput
  connectOrCreate: QuotationCreateOrConnectWithoutItemsInput
  upsert: QuotationUpsertWithoutItemsInput
  connect: QuotationWhereUniqueInput
  update: QuotationUpdateToOneWithWhereWithoutItemsInput
}

input QuotationUpsertWithoutItemsInput {
  update: QuotationUpdateWithoutItemsInput!
  create: QuotationCreateWithoutItemsInput!
  where: QuotationWhereInput
}

input QuotationUpdateWithoutItemsInput {
  id: StringFieldUpdateOperationsInput
  type: EnumSaleTypeFieldUpdateOperationsInput
  channel: EnumSaleChannelFieldUpdateOperationsInput
  status: EnumQuotationStatusFieldUpdateOperationsInput
  totalAmount: FloatFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  store: StoreUpdateOneRequiredWithoutQuotationNestedInput
  biller: UserUpdateOneWithoutBillerQuotationNestedInput
  consumer: CustomerUpdateOneWithoutQuotationNestedInput
  reseller: UserUpdateOneWithoutResellerQuotationNestedInput
  sale: ResellerSaleUpdateOneWithoutQuotationNestedInput
  SaleOrder: SaleOrderUpdateOneWithoutQuotationNestedInput
  ConsumerSale: ConsumerSaleUpdateManyWithoutQuotationNestedInput
}

input UserUpdateOneWithoutBillerQuotationNestedInput {
  create: UserCreateWithoutBillerQuotationInput
  connectOrCreate: UserCreateOrConnectWithoutBillerQuotationInput
  upsert: UserUpsertWithoutBillerQuotationInput
  disconnect: UserWhereInput
  delete: UserWhereInput
  connect: UserWhereUniqueInput
  update: UserUpdateToOneWithWhereWithoutBillerQuotationInput
}

input UserUpsertWithoutBillerQuotationInput {
  update: UserUpdateWithoutBillerQuotationInput!
  create: UserCreateWithoutBillerQuotationInput!
  where: UserWhereInput
}

input UserUpdateWithoutBillerQuotationInput {
  id: StringFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  passwordHash: StringFieldUpdateOperationsInput
  tier: NullableEnumUserTierFieldUpdateOperationsInput
  referralCode: NullableStringFieldUpdateOperationsInput
  referredBy: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  isEmailVerified: BoolFieldUpdateOperationsInput
  emailVerificationToken: NullableStringFieldUpdateOperationsInput
  emailVerificationTokenExpiry: NullableDateTimeFieldUpdateOperationsInput
  role: RoleUpdateOneRequiredWithoutUsersNestedInput
  resellerProfile: ResellerProfileUpdateOneWithoutUserNestedInput
  customerProfile: CustomerProfileUpdateOneWithoutUserNestedInput
  resellerPaymentsMade: ResellerPaymentUpdateManyWithoutResellerNestedInput
  resellerPaymentsReceived: ResellerPaymentUpdateManyWithoutReceivedByNestedInput
  adminLogs: AdminActionLogUpdateManyWithoutAdminNestedInput
  supportMessages: SupportMessageUpdateManyWithoutUserNestedInput
  ConsumerSale: ConsumerSaleUpdateManyWithoutBillerNestedInput
  ConsumerSaleAdjustedBys: ConsumerSaleUpdateManyWithoutAdjustedByNestedInput
  StockReceiptBatchReceivedBys: StockReceiptBatchUpdateManyWithoutReceivedByNestedInput
  StockReceiptBatchConfirmedBys: StockReceiptBatchUpdateManyWithoutConfirmedByNestedInput
  StockTransferRequests: StockTransferUpdateManyWithoutRequestedByNestedInput
  StockTransferApprovals: StockTransferUpdateManyWithoutApprovedByNestedInput
  Store: StoreUpdateManyWithoutManagerNestedInput
  ConsumerReceipt: ConsumerReceiptUpdateManyWithoutIssuedByNestedInput
  ResellerSales: ResellerSaleUpdateManyWithoutResellerNestedInput
  BillerResellerSale: ResellerSaleUpdateManyWithoutBillerNestedInput
  ResellerSale: ResellerSaleUpdateManyWithoutApprovedByNestedInput
  SalesReturnReceivers: SalesReturnUpdateManyWithoutReceivedByNestedInput
  SalesReturnRequesters: SalesReturnUpdateManyWithoutReturnedByNestedInput
  SalesReturn: SalesReturnUpdateManyWithoutApprovedByNestedInput
  PurchaseReturnInitiators: PurchaseReturnUpdateManyWithoutInitiatedByNestedInput
  PurchaseReturnApprovers: PurchaseReturnUpdateManyWithoutApprovedByNestedInput
  Payment: PaymentUpdateManyWithoutReceivedByNestedInput
  ResellerTierHistory: ResellerTierHistoryUpdateManyWithoutUserNestedInput
  ResellerTierHistoryChangedBys: ResellerTierHistoryUpdateManyWithoutAdminNestedInput
  ResellerProfile: ResellerProfileUpdateManyWithoutBillerNestedInput
  RequestedResellers: ResellerProfileUpdateManyWithoutRequestedBillerNestedInput
  Notification: NotificationUpdateManyWithoutUserNestedInput
  Fulfillment: FulfillmentUpdateManyWithoutDeliveryPersonnelNestedInput
  ResellerQuotation: QuotationUpdateManyWithoutResellerNestedInput
  PurchaseRequisition: PurchaseRequisitionUpdateManyWithoutRequestedByNestedInput
  Supplier: SupplierUpdateManyWithoutUserNestedInput
}

input StockTransferUpdateManyWithoutRequestedByNestedInput {
  create: [StockTransferCreateWithoutRequestedByInput!]
  connectOrCreate: [StockTransferCreateOrConnectWithoutRequestedByInput!]
  upsert: [StockTransferUpsertWithWhereUniqueWithoutRequestedByInput!]
  createMany: StockTransferCreateManyRequestedByInputEnvelope
  set: [StockTransferWhereUniqueInput!]
  disconnect: [StockTransferWhereUniqueInput!]
  delete: [StockTransferWhereUniqueInput!]
  connect: [StockTransferWhereUniqueInput!]
  update: [StockTransferUpdateWithWhereUniqueWithoutRequestedByInput!]
  updateMany: [StockTransferUpdateManyWithWhereWithoutRequestedByInput!]
  deleteMany: [StockTransferScalarWhereInput!]
}

input StockTransferUpsertWithWhereUniqueWithoutRequestedByInput {
  where: StockTransferWhereUniqueInput!
  update: StockTransferUpdateWithoutRequestedByInput!
  create: StockTransferCreateWithoutRequestedByInput!
}

input StockTransferUpdateWithoutRequestedByInput {
  id: StringFieldUpdateOperationsInput
  status: EnumTransferStatusFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  fromStore: StoreUpdateOneRequiredWithoutTransfersOutNestedInput
  toStore: StoreUpdateOneRequiredWithoutTransfersInNestedInput
  approvedBy: UserUpdateOneRequiredWithoutStockTransferApprovalsNestedInput
  items: StockTransferItemUpdateManyWithoutTransferNestedInput
}

input UserUpdateOneRequiredWithoutStockTransferApprovalsNestedInput {
  create: UserCreateWithoutStockTransferApprovalsInput
  connectOrCreate: UserCreateOrConnectWithoutStockTransferApprovalsInput
  upsert: UserUpsertWithoutStockTransferApprovalsInput
  connect: UserWhereUniqueInput
  update: UserUpdateToOneWithWhereWithoutStockTransferApprovalsInput
}

input UserUpsertWithoutStockTransferApprovalsInput {
  update: UserUpdateWithoutStockTransferApprovalsInput!
  create: UserCreateWithoutStockTransferApprovalsInput!
  where: UserWhereInput
}

input UserUpdateWithoutStockTransferApprovalsInput {
  id: StringFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  passwordHash: StringFieldUpdateOperationsInput
  tier: NullableEnumUserTierFieldUpdateOperationsInput
  referralCode: NullableStringFieldUpdateOperationsInput
  referredBy: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  isEmailVerified: BoolFieldUpdateOperationsInput
  emailVerificationToken: NullableStringFieldUpdateOperationsInput
  emailVerificationTokenExpiry: NullableDateTimeFieldUpdateOperationsInput
  role: RoleUpdateOneRequiredWithoutUsersNestedInput
  resellerProfile: ResellerProfileUpdateOneWithoutUserNestedInput
  customerProfile: CustomerProfileUpdateOneWithoutUserNestedInput
  resellerPaymentsMade: ResellerPaymentUpdateManyWithoutResellerNestedInput
  resellerPaymentsReceived: ResellerPaymentUpdateManyWithoutReceivedByNestedInput
  adminLogs: AdminActionLogUpdateManyWithoutAdminNestedInput
  supportMessages: SupportMessageUpdateManyWithoutUserNestedInput
  ConsumerSale: ConsumerSaleUpdateManyWithoutBillerNestedInput
  ConsumerSaleAdjustedBys: ConsumerSaleUpdateManyWithoutAdjustedByNestedInput
  StockReceiptBatchReceivedBys: StockReceiptBatchUpdateManyWithoutReceivedByNestedInput
  StockReceiptBatchConfirmedBys: StockReceiptBatchUpdateManyWithoutConfirmedByNestedInput
  StockTransferRequests: StockTransferUpdateManyWithoutRequestedByNestedInput
  Store: StoreUpdateManyWithoutManagerNestedInput
  ConsumerReceipt: ConsumerReceiptUpdateManyWithoutIssuedByNestedInput
  ResellerSales: ResellerSaleUpdateManyWithoutResellerNestedInput
  BillerResellerSale: ResellerSaleUpdateManyWithoutBillerNestedInput
  ResellerSale: ResellerSaleUpdateManyWithoutApprovedByNestedInput
  SalesReturnReceivers: SalesReturnUpdateManyWithoutReceivedByNestedInput
  SalesReturnRequesters: SalesReturnUpdateManyWithoutReturnedByNestedInput
  SalesReturn: SalesReturnUpdateManyWithoutApprovedByNestedInput
  PurchaseReturnInitiators: PurchaseReturnUpdateManyWithoutInitiatedByNestedInput
  PurchaseReturnApprovers: PurchaseReturnUpdateManyWithoutApprovedByNestedInput
  Payment: PaymentUpdateManyWithoutReceivedByNestedInput
  ResellerTierHistory: ResellerTierHistoryUpdateManyWithoutUserNestedInput
  ResellerTierHistoryChangedBys: ResellerTierHistoryUpdateManyWithoutAdminNestedInput
  ResellerProfile: ResellerProfileUpdateManyWithoutBillerNestedInput
  RequestedResellers: ResellerProfileUpdateManyWithoutRequestedBillerNestedInput
  Notification: NotificationUpdateManyWithoutUserNestedInput
  Fulfillment: FulfillmentUpdateManyWithoutDeliveryPersonnelNestedInput
  BillerQuotation: QuotationUpdateManyWithoutBillerNestedInput
  ResellerQuotation: QuotationUpdateManyWithoutResellerNestedInput
  PurchaseRequisition: PurchaseRequisitionUpdateManyWithoutRequestedByNestedInput
  Supplier: SupplierUpdateManyWithoutUserNestedInput
}

input StoreUpdateManyWithoutManagerNestedInput {
  create: [StoreCreateWithoutManagerInput!]
  connectOrCreate: [StoreCreateOrConnectWithoutManagerInput!]
  upsert: [StoreUpsertWithWhereUniqueWithoutManagerInput!]
  createMany: StoreCreateManyManagerInputEnvelope
  set: [StoreWhereUniqueInput!]
  disconnect: [StoreWhereUniqueInput!]
  delete: [StoreWhereUniqueInput!]
  connect: [StoreWhereUniqueInput!]
  update: [StoreUpdateWithWhereUniqueWithoutManagerInput!]
  updateMany: [StoreUpdateManyWithWhereWithoutManagerInput!]
  deleteMany: [StoreScalarWhereInput!]
}

input StoreUpsertWithWhereUniqueWithoutManagerInput {
  where: StoreWhereUniqueInput!
  update: StoreUpdateWithoutManagerInput!
  create: StoreCreateWithoutManagerInput!
}

input StoreUpdateWithoutManagerInput {
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  location: NullableStringFieldUpdateOperationsInput
  isMain: BoolFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  stocks: StockUpdateManyWithoutStoreNestedInput
  receipts: StockReceiptBatchUpdateManyWithoutStoreNestedInput
  transfersOut: StockTransferUpdateManyWithoutFromStoreNestedInput
  transfersIn: StockTransferUpdateManyWithoutToStoreNestedInput
  customerSales: ConsumerSaleUpdateManyWithoutStoreNestedInput
  salesReturns: SalesReturnUpdateManyWithoutStoreNestedInput
  resellerSales: ResellerSaleUpdateManyWithoutStoreNestedInput
  movements: StockMovementUpdateManyWithoutStoreNestedInput
  Customer: CustomerUpdateManyWithoutPreferredStoreNestedInput
  CustomerProfile: CustomerProfileUpdateManyWithoutPreferredStoreNestedInput
  Quotation: QuotationUpdateManyWithoutStoreNestedInput
  PurchaseRequisition: PurchaseRequisitionUpdateManyWithoutStoreNestedInput
  purchaseOrders: PurchaseOrderUpdateManyWithoutStoreNestedInput
  InvoiceImport: InvoiceImportUpdateManyWithoutStoreNestedInput
}

input StockMovementUpdateManyWithoutStoreNestedInput {
  create: [StockMovementCreateWithoutStoreInput!]
  connectOrCreate: [StockMovementCreateOrConnectWithoutStoreInput!]
  upsert: [StockMovementUpsertWithWhereUniqueWithoutStoreInput!]
  createMany: StockMovementCreateManyStoreInputEnvelope
  set: [StockMovementWhereUniqueInput!]
  disconnect: [StockMovementWhereUniqueInput!]
  delete: [StockMovementWhereUniqueInput!]
  connect: [StockMovementWhereUniqueInput!]
  update: [StockMovementUpdateWithWhereUniqueWithoutStoreInput!]
  updateMany: [StockMovementUpdateManyWithWhereWithoutStoreInput!]
  deleteMany: [StockMovementScalarWhereInput!]
}

input StockMovementUpsertWithWhereUniqueWithoutStoreInput {
  where: StockMovementWhereUniqueInput!
  update: StockMovementUpdateWithoutStoreInput!
  create: StockMovementCreateWithoutStoreInput!
}

input StockMovementUpdateWithoutStoreInput {
  id: StringFieldUpdateOperationsInput
  direction: EnumMovementDirectionFieldUpdateOperationsInput
  movementType: EnumMovementTypeFieldUpdateOperationsInput
  referenceEntity: StringFieldUpdateOperationsInput
  referenceId: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  items: StockMovementItemUpdateManyWithoutMovementNestedInput
}

input EnumMovementDirectionFieldUpdateOperationsInput {
  set: MovementDirection
}

input EnumMovementTypeFieldUpdateOperationsInput {
  set: MovementType
}

input StockMovementItemUpdateManyWithoutMovementNestedInput {
  create: [StockMovementItemCreateWithoutMovementInput!]
  connectOrCreate: [StockMovementItemCreateOrConnectWithoutMovementInput!]
  upsert: [StockMovementItemUpsertWithWhereUniqueWithoutMovementInput!]
  createMany: StockMovementItemCreateManyMovementInputEnvelope
  set: [StockMovementItemWhereUniqueInput!]
  disconnect: [StockMovementItemWhereUniqueInput!]
  delete: [StockMovementItemWhereUniqueInput!]
  connect: [StockMovementItemWhereUniqueInput!]
  update: [StockMovementItemUpdateWithWhereUniqueWithoutMovementInput!]
  updateMany: [StockMovementItemUpdateManyWithWhereWithoutMovementInput!]
  deleteMany: [StockMovementItemScalarWhereInput!]
}

input StockMovementItemUpsertWithWhereUniqueWithoutMovementInput {
  where: StockMovementItemWhereUniqueInput!
  update: StockMovementItemUpdateWithoutMovementInput!
  create: StockMovementItemCreateWithoutMovementInput!
}

input StockMovementItemUpdateWithoutMovementInput {
  id: StringFieldUpdateOperationsInput
  quantity: IntFieldUpdateOperationsInput
  productVariant: ProductVariantUpdateOneRequiredWithoutStockMovementItemNestedInput
}

input ProductVariantUpdateOneRequiredWithoutStockMovementItemNestedInput {
  create: ProductVariantCreateWithoutStockMovementItemInput
  connectOrCreate: ProductVariantCreateOrConnectWithoutStockMovementItemInput
  upsert: ProductVariantUpsertWithoutStockMovementItemInput
  connect: ProductVariantWhereUniqueInput
  update: ProductVariantUpdateToOneWithWhereWithoutStockMovementItemInput
}

input ProductVariantUpsertWithoutStockMovementItemInput {
  update: ProductVariantUpdateWithoutStockMovementItemInput!
  create: ProductVariantCreateWithoutStockMovementItemInput!
  where: ProductVariantWhereInput
}

input ProductVariantUpdateWithoutStockMovementItemInput {
  id: StringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  size: StringFieldUpdateOperationsInput
  concentration: StringFieldUpdateOperationsInput
  packaging: StringFieldUpdateOperationsInput
  barcode: NullableStringFieldUpdateOperationsInput
  price: FloatFieldUpdateOperationsInput
  resellerPrice: FloatFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  product: ProductUpdateOneWithoutVariantsNestedInput
  stockItems: StockUpdateManyWithoutProductVariantNestedInput
  receiptItems: StockReceiptBatchItemUpdateManyWithoutProductVariantNestedInput
  quotationItems: QuotationItemUpdateManyWithoutProductVariantNestedInput
  resellerItems: ResellerSaleItemUpdateManyWithoutProductVariantNestedInput
  consumerItems: ConsumerSaleItemUpdateManyWithoutProductVariantNestedInput
  returnItems: SalesReturnItemUpdateManyWithoutProductVariantNestedInput
  purchaseReturnItems: PurchaseReturnItemUpdateManyWithoutProductVariantNestedInput
  transferItems: StockTransferItemUpdateManyWithoutProductVariantNestedInput
  stats: ProductSalesStatsUpdateOneWithoutProductVariantNestedInput
  PurchaseOrderItem: PurchaseOrderItemUpdateManyWithoutProductVariantNestedInput
  PurchaseRequisitionItem: PurchaseRequisitionItemUpdateManyWithoutProductVariantNestedInput
  SupplierCatalog: SupplierCatalogUpdateManyWithoutProductVariantNestedInput
  SupplierQuoteItem: SupplierQuoteItemUpdateManyWithoutProductVariantNestedInput
  ProductVariantTierPrice: ProductVariantTierPriceUpdateManyWithoutVariantNestedInput
  facets: VariantFacetValueUpdateManyWithoutVariantNestedInput
}

input ResellerSaleItemUpdateManyWithoutProductVariantNestedInput {
  create: [ResellerSaleItemCreateWithoutProductVariantInput!]
  connectOrCreate: [ResellerSaleItemCreateOrConnectWithoutProductVariantInput!]
  upsert: [ResellerSaleItemUpsertWithWhereUniqueWithoutProductVariantInput!]
  createMany: ResellerSaleItemCreateManyProductVariantInputEnvelope
  set: [ResellerSaleItemWhereUniqueInput!]
  disconnect: [ResellerSaleItemWhereUniqueInput!]
  delete: [ResellerSaleItemWhereUniqueInput!]
  connect: [ResellerSaleItemWhereUniqueInput!]
  update: [ResellerSaleItemUpdateWithWhereUniqueWithoutProductVariantInput!]
  updateMany: [ResellerSaleItemUpdateManyWithWhereWithoutProductVariantInput!]
  deleteMany: [ResellerSaleItemScalarWhereInput!]
}

input ResellerSaleItemUpsertWithWhereUniqueWithoutProductVariantInput {
  where: ResellerSaleItemWhereUniqueInput!
  update: ResellerSaleItemUpdateWithoutProductVariantInput!
  create: ResellerSaleItemCreateWithoutProductVariantInput!
}

input ResellerSaleItemUpdateWithoutProductVariantInput {
  id: StringFieldUpdateOperationsInput
  quantity: IntFieldUpdateOperationsInput
  unitPrice: FloatFieldUpdateOperationsInput
  sale: ResellerSaleUpdateOneRequiredWithoutItemsNestedInput
}

input ResellerSaleUpdateOneRequiredWithoutItemsNestedInput {
  create: ResellerSaleCreateWithoutItemsInput
  connectOrCreate: ResellerSaleCreateOrConnectWithoutItemsInput
  upsert: ResellerSaleUpsertWithoutItemsInput
  connect: ResellerSaleWhereUniqueInput
  update: ResellerSaleUpdateToOneWithWhereWithoutItemsInput
}

input ResellerSaleUpsertWithoutItemsInput {
  update: ResellerSaleUpdateWithoutItemsInput!
  create: ResellerSaleCreateWithoutItemsInput!
  where: ResellerSaleWhereInput
}

input ResellerSaleUpdateWithoutItemsInput {
  id: StringFieldUpdateOperationsInput
  status: EnumSaleStatusFieldUpdateOperationsInput
  totalAmount: FloatFieldUpdateOperationsInput
  approvedAt: NullableDateTimeFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  reseller: UserUpdateOneRequiredWithoutResellerSalesNestedInput
  biller: UserUpdateOneRequiredWithoutBillerResellerSaleNestedInput
  approvedBy: UserUpdateOneWithoutResellerSaleNestedInput
  quotation: QuotationUpdateOneWithoutSaleNestedInput
  store: StoreUpdateOneRequiredWithoutResellerSalesNestedInput
  payments: ResellerPaymentUpdateManyWithoutSaleNestedInput
  SalesReturn: SalesReturnUpdateManyWithoutResellerSaleNestedInput
  SaleOrder: SaleOrderUpdateOneRequiredWithoutResellerSaleNestedInput
}

input UserUpdateOneRequiredWithoutBillerResellerSaleNestedInput {
  create: UserCreateWithoutBillerResellerSaleInput
  connectOrCreate: UserCreateOrConnectWithoutBillerResellerSaleInput
  upsert: UserUpsertWithoutBillerResellerSaleInput
  connect: UserWhereUniqueInput
  update: UserUpdateToOneWithWhereWithoutBillerResellerSaleInput
}

input UserUpsertWithoutBillerResellerSaleInput {
  update: UserUpdateWithoutBillerResellerSaleInput!
  create: UserCreateWithoutBillerResellerSaleInput!
  where: UserWhereInput
}

input UserUpdateWithoutBillerResellerSaleInput {
  id: StringFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  passwordHash: StringFieldUpdateOperationsInput
  tier: NullableEnumUserTierFieldUpdateOperationsInput
  referralCode: NullableStringFieldUpdateOperationsInput
  referredBy: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  isEmailVerified: BoolFieldUpdateOperationsInput
  emailVerificationToken: NullableStringFieldUpdateOperationsInput
  emailVerificationTokenExpiry: NullableDateTimeFieldUpdateOperationsInput
  role: RoleUpdateOneRequiredWithoutUsersNestedInput
  resellerProfile: ResellerProfileUpdateOneWithoutUserNestedInput
  customerProfile: CustomerProfileUpdateOneWithoutUserNestedInput
  resellerPaymentsMade: ResellerPaymentUpdateManyWithoutResellerNestedInput
  resellerPaymentsReceived: ResellerPaymentUpdateManyWithoutReceivedByNestedInput
  adminLogs: AdminActionLogUpdateManyWithoutAdminNestedInput
  supportMessages: SupportMessageUpdateManyWithoutUserNestedInput
  ConsumerSale: ConsumerSaleUpdateManyWithoutBillerNestedInput
  ConsumerSaleAdjustedBys: ConsumerSaleUpdateManyWithoutAdjustedByNestedInput
  StockReceiptBatchReceivedBys: StockReceiptBatchUpdateManyWithoutReceivedByNestedInput
  StockReceiptBatchConfirmedBys: StockReceiptBatchUpdateManyWithoutConfirmedByNestedInput
  StockTransferRequests: StockTransferUpdateManyWithoutRequestedByNestedInput
  StockTransferApprovals: StockTransferUpdateManyWithoutApprovedByNestedInput
  Store: StoreUpdateManyWithoutManagerNestedInput
  ConsumerReceipt: ConsumerReceiptUpdateManyWithoutIssuedByNestedInput
  ResellerSales: ResellerSaleUpdateManyWithoutResellerNestedInput
  ResellerSale: ResellerSaleUpdateManyWithoutApprovedByNestedInput
  SalesReturnReceivers: SalesReturnUpdateManyWithoutReceivedByNestedInput
  SalesReturnRequesters: SalesReturnUpdateManyWithoutReturnedByNestedInput
  SalesReturn: SalesReturnUpdateManyWithoutApprovedByNestedInput
  PurchaseReturnInitiators: PurchaseReturnUpdateManyWithoutInitiatedByNestedInput
  PurchaseReturnApprovers: PurchaseReturnUpdateManyWithoutApprovedByNestedInput
  Payment: PaymentUpdateManyWithoutReceivedByNestedInput
  ResellerTierHistory: ResellerTierHistoryUpdateManyWithoutUserNestedInput
  ResellerTierHistoryChangedBys: ResellerTierHistoryUpdateManyWithoutAdminNestedInput
  ResellerProfile: ResellerProfileUpdateManyWithoutBillerNestedInput
  RequestedResellers: ResellerProfileUpdateManyWithoutRequestedBillerNestedInput
  Notification: NotificationUpdateManyWithoutUserNestedInput
  Fulfillment: FulfillmentUpdateManyWithoutDeliveryPersonnelNestedInput
  BillerQuotation: QuotationUpdateManyWithoutBillerNestedInput
  ResellerQuotation: QuotationUpdateManyWithoutResellerNestedInput
  PurchaseRequisition: PurchaseRequisitionUpdateManyWithoutRequestedByNestedInput
  Supplier: SupplierUpdateManyWithoutUserNestedInput
}

input StockTransferUpdateManyWithoutApprovedByNestedInput {
  create: [StockTransferCreateWithoutApprovedByInput!]
  connectOrCreate: [StockTransferCreateOrConnectWithoutApprovedByInput!]
  upsert: [StockTransferUpsertWithWhereUniqueWithoutApprovedByInput!]
  createMany: StockTransferCreateManyApprovedByInputEnvelope
  set: [StockTransferWhereUniqueInput!]
  disconnect: [StockTransferWhereUniqueInput!]
  delete: [StockTransferWhereUniqueInput!]
  connect: [StockTransferWhereUniqueInput!]
  update: [StockTransferUpdateWithWhereUniqueWithoutApprovedByInput!]
  updateMany: [StockTransferUpdateManyWithWhereWithoutApprovedByInput!]
  deleteMany: [StockTransferScalarWhereInput!]
}

input StockTransferUpsertWithWhereUniqueWithoutApprovedByInput {
  where: StockTransferWhereUniqueInput!
  update: StockTransferUpdateWithoutApprovedByInput!
  create: StockTransferCreateWithoutApprovedByInput!
}

input StockTransferUpdateWithoutApprovedByInput {
  id: StringFieldUpdateOperationsInput
  status: EnumTransferStatusFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  fromStore: StoreUpdateOneRequiredWithoutTransfersOutNestedInput
  toStore: StoreUpdateOneRequiredWithoutTransfersInNestedInput
  requestedBy: UserUpdateOneRequiredWithoutStockTransferRequestsNestedInput
  items: StockTransferItemUpdateManyWithoutTransferNestedInput
}

input UserUpdateOneRequiredWithoutStockTransferRequestsNestedInput {
  create: UserCreateWithoutStockTransferRequestsInput
  connectOrCreate: UserCreateOrConnectWithoutStockTransferRequestsInput
  upsert: UserUpsertWithoutStockTransferRequestsInput
  connect: UserWhereUniqueInput
  update: UserUpdateToOneWithWhereWithoutStockTransferRequestsInput
}

input UserUpsertWithoutStockTransferRequestsInput {
  update: UserUpdateWithoutStockTransferRequestsInput!
  create: UserCreateWithoutStockTransferRequestsInput!
  where: UserWhereInput
}

input UserUpdateWithoutStockTransferRequestsInput {
  id: StringFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  passwordHash: StringFieldUpdateOperationsInput
  tier: NullableEnumUserTierFieldUpdateOperationsInput
  referralCode: NullableStringFieldUpdateOperationsInput
  referredBy: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  isEmailVerified: BoolFieldUpdateOperationsInput
  emailVerificationToken: NullableStringFieldUpdateOperationsInput
  emailVerificationTokenExpiry: NullableDateTimeFieldUpdateOperationsInput
  role: RoleUpdateOneRequiredWithoutUsersNestedInput
  resellerProfile: ResellerProfileUpdateOneWithoutUserNestedInput
  customerProfile: CustomerProfileUpdateOneWithoutUserNestedInput
  resellerPaymentsMade: ResellerPaymentUpdateManyWithoutResellerNestedInput
  resellerPaymentsReceived: ResellerPaymentUpdateManyWithoutReceivedByNestedInput
  adminLogs: AdminActionLogUpdateManyWithoutAdminNestedInput
  supportMessages: SupportMessageUpdateManyWithoutUserNestedInput
  ConsumerSale: ConsumerSaleUpdateManyWithoutBillerNestedInput
  ConsumerSaleAdjustedBys: ConsumerSaleUpdateManyWithoutAdjustedByNestedInput
  StockReceiptBatchReceivedBys: StockReceiptBatchUpdateManyWithoutReceivedByNestedInput
  StockReceiptBatchConfirmedBys: StockReceiptBatchUpdateManyWithoutConfirmedByNestedInput
  StockTransferApprovals: StockTransferUpdateManyWithoutApprovedByNestedInput
  Store: StoreUpdateManyWithoutManagerNestedInput
  ConsumerReceipt: ConsumerReceiptUpdateManyWithoutIssuedByNestedInput
  ResellerSales: ResellerSaleUpdateManyWithoutResellerNestedInput
  BillerResellerSale: ResellerSaleUpdateManyWithoutBillerNestedInput
  ResellerSale: ResellerSaleUpdateManyWithoutApprovedByNestedInput
  SalesReturnReceivers: SalesReturnUpdateManyWithoutReceivedByNestedInput
  SalesReturnRequesters: SalesReturnUpdateManyWithoutReturnedByNestedInput
  SalesReturn: SalesReturnUpdateManyWithoutApprovedByNestedInput
  PurchaseReturnInitiators: PurchaseReturnUpdateManyWithoutInitiatedByNestedInput
  PurchaseReturnApprovers: PurchaseReturnUpdateManyWithoutApprovedByNestedInput
  Payment: PaymentUpdateManyWithoutReceivedByNestedInput
  ResellerTierHistory: ResellerTierHistoryUpdateManyWithoutUserNestedInput
  ResellerTierHistoryChangedBys: ResellerTierHistoryUpdateManyWithoutAdminNestedInput
  ResellerProfile: ResellerProfileUpdateManyWithoutBillerNestedInput
  RequestedResellers: ResellerProfileUpdateManyWithoutRequestedBillerNestedInput
  Notification: NotificationUpdateManyWithoutUserNestedInput
  Fulfillment: FulfillmentUpdateManyWithoutDeliveryPersonnelNestedInput
  BillerQuotation: QuotationUpdateManyWithoutBillerNestedInput
  ResellerQuotation: QuotationUpdateManyWithoutResellerNestedInput
  PurchaseRequisition: PurchaseRequisitionUpdateManyWithoutRequestedByNestedInput
  Supplier: SupplierUpdateManyWithoutUserNestedInput
}

input ConsumerReceiptUpdateManyWithoutIssuedByNestedInput {
  create: [ConsumerReceiptCreateWithoutIssuedByInput!]
  connectOrCreate: [ConsumerReceiptCreateOrConnectWithoutIssuedByInput!]
  upsert: [ConsumerReceiptUpsertWithWhereUniqueWithoutIssuedByInput!]
  createMany: ConsumerReceiptCreateManyIssuedByInputEnvelope
  set: [ConsumerReceiptWhereUniqueInput!]
  disconnect: [ConsumerReceiptWhereUniqueInput!]
  delete: [ConsumerReceiptWhereUniqueInput!]
  connect: [ConsumerReceiptWhereUniqueInput!]
  update: [ConsumerReceiptUpdateWithWhereUniqueWithoutIssuedByInput!]
  updateMany: [ConsumerReceiptUpdateManyWithWhereWithoutIssuedByInput!]
  deleteMany: [ConsumerReceiptScalarWhereInput!]
}

input ConsumerReceiptUpsertWithWhereUniqueWithoutIssuedByInput {
  where: ConsumerReceiptWhereUniqueInput!
  update: ConsumerReceiptUpdateWithoutIssuedByInput!
  create: ConsumerReceiptCreateWithoutIssuedByInput!
}

input ConsumerReceiptUpdateWithoutIssuedByInput {
  id: StringFieldUpdateOperationsInput
  issuedAt: DateTimeFieldUpdateOperationsInput
  receiptUrl: NullableStringFieldUpdateOperationsInput
  sale: ConsumerSaleUpdateOneRequiredWithoutReceiptNestedInput
}

input ConsumerSaleUpdateOneRequiredWithoutReceiptNestedInput {
  create: ConsumerSaleCreateWithoutReceiptInput
  connectOrCreate: ConsumerSaleCreateOrConnectWithoutReceiptInput
  upsert: ConsumerSaleUpsertWithoutReceiptInput
  connect: ConsumerSaleWhereUniqueInput
  update: ConsumerSaleUpdateToOneWithWhereWithoutReceiptInput
}

input ConsumerSaleUpsertWithoutReceiptInput {
  update: ConsumerSaleUpdateWithoutReceiptInput!
  create: ConsumerSaleCreateWithoutReceiptInput!
  where: ConsumerSaleWhereInput
}

input ConsumerSaleUpdateWithoutReceiptInput {
  id: StringFieldUpdateOperationsInput
  channel: EnumSaleChannelFieldUpdateOperationsInput
  status: EnumSaleStatusFieldUpdateOperationsInput
  totalAmount: FloatFieldUpdateOperationsInput
  adjustmentType: NullableEnumAdjustmentTypeFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  customer: CustomerUpdateOneWithoutSalesNestedInput
  store: StoreUpdateOneRequiredWithoutCustomerSalesNestedInput
  biller: UserUpdateOneRequiredWithoutConsumerSaleNestedInput
  adjustedBy: UserUpdateOneWithoutConsumerSaleAdjustedBysNestedInput
  quotation: QuotationUpdateOneWithoutConsumerSaleNestedInput
  items: ConsumerSaleItemUpdateManyWithoutSaleNestedInput
  payments: ConsumerPaymentUpdateManyWithoutSaleNestedInput
  SalesReturn: SalesReturnUpdateManyWithoutConsumerSaleNestedInput
  CustomerProfile: CustomerProfileUpdateManyWithoutSalesNestedInput
  SaleOrder: SaleOrderUpdateOneRequiredWithoutConsumerSaleNestedInput
}

input ConsumerSaleItemUpdateManyWithoutSaleNestedInput {
  create: [ConsumerSaleItemCreateWithoutSaleInput!]
  connectOrCreate: [ConsumerSaleItemCreateOrConnectWithoutSaleInput!]
  upsert: [ConsumerSaleItemUpsertWithWhereUniqueWithoutSaleInput!]
  createMany: ConsumerSaleItemCreateManySaleInputEnvelope
  set: [ConsumerSaleItemWhereUniqueInput!]
  disconnect: [ConsumerSaleItemWhereUniqueInput!]
  delete: [ConsumerSaleItemWhereUniqueInput!]
  connect: [ConsumerSaleItemWhereUniqueInput!]
  update: [ConsumerSaleItemUpdateWithWhereUniqueWithoutSaleInput!]
  updateMany: [ConsumerSaleItemUpdateManyWithWhereWithoutSaleInput!]
  deleteMany: [ConsumerSaleItemScalarWhereInput!]
}

input ConsumerSaleItemUpsertWithWhereUniqueWithoutSaleInput {
  where: ConsumerSaleItemWhereUniqueInput!
  update: ConsumerSaleItemUpdateWithoutSaleInput!
  create: ConsumerSaleItemCreateWithoutSaleInput!
}

input ConsumerSaleItemUpdateWithoutSaleInput {
  id: StringFieldUpdateOperationsInput
  quantity: IntFieldUpdateOperationsInput
  unitPrice: FloatFieldUpdateOperationsInput
  productVariant: ProductVariantUpdateOneRequiredWithoutConsumerItemsNestedInput
}

input ProductVariantUpdateOneRequiredWithoutConsumerItemsNestedInput {
  create: ProductVariantCreateWithoutConsumerItemsInput
  connectOrCreate: ProductVariantCreateOrConnectWithoutConsumerItemsInput
  upsert: ProductVariantUpsertWithoutConsumerItemsInput
  connect: ProductVariantWhereUniqueInput
  update: ProductVariantUpdateToOneWithWhereWithoutConsumerItemsInput
}

input ProductVariantUpsertWithoutConsumerItemsInput {
  update: ProductVariantUpdateWithoutConsumerItemsInput!
  create: ProductVariantCreateWithoutConsumerItemsInput!
  where: ProductVariantWhereInput
}

input ProductVariantUpdateWithoutConsumerItemsInput {
  id: StringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  size: StringFieldUpdateOperationsInput
  concentration: StringFieldUpdateOperationsInput
  packaging: StringFieldUpdateOperationsInput
  barcode: NullableStringFieldUpdateOperationsInput
  price: FloatFieldUpdateOperationsInput
  resellerPrice: FloatFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  product: ProductUpdateOneWithoutVariantsNestedInput
  stockItems: StockUpdateManyWithoutProductVariantNestedInput
  receiptItems: StockReceiptBatchItemUpdateManyWithoutProductVariantNestedInput
  quotationItems: QuotationItemUpdateManyWithoutProductVariantNestedInput
  resellerItems: ResellerSaleItemUpdateManyWithoutProductVariantNestedInput
  returnItems: SalesReturnItemUpdateManyWithoutProductVariantNestedInput
  purchaseReturnItems: PurchaseReturnItemUpdateManyWithoutProductVariantNestedInput
  transferItems: StockTransferItemUpdateManyWithoutProductVariantNestedInput
  stats: ProductSalesStatsUpdateOneWithoutProductVariantNestedInput
  PurchaseOrderItem: PurchaseOrderItemUpdateManyWithoutProductVariantNestedInput
  StockMovementItem: StockMovementItemUpdateManyWithoutProductVariantNestedInput
  PurchaseRequisitionItem: PurchaseRequisitionItemUpdateManyWithoutProductVariantNestedInput
  SupplierCatalog: SupplierCatalogUpdateManyWithoutProductVariantNestedInput
  SupplierQuoteItem: SupplierQuoteItemUpdateManyWithoutProductVariantNestedInput
  ProductVariantTierPrice: ProductVariantTierPriceUpdateManyWithoutVariantNestedInput
  facets: VariantFacetValueUpdateManyWithoutVariantNestedInput
}

input SalesReturnItemUpdateManyWithoutProductVariantNestedInput {
  create: [SalesReturnItemCreateWithoutProductVariantInput!]
  connectOrCreate: [SalesReturnItemCreateOrConnectWithoutProductVariantInput!]
  upsert: [SalesReturnItemUpsertWithWhereUniqueWithoutProductVariantInput!]
  createMany: SalesReturnItemCreateManyProductVariantInputEnvelope
  set: [SalesReturnItemWhereUniqueInput!]
  disconnect: [SalesReturnItemWhereUniqueInput!]
  delete: [SalesReturnItemWhereUniqueInput!]
  connect: [SalesReturnItemWhereUniqueInput!]
  update: [SalesReturnItemUpdateWithWhereUniqueWithoutProductVariantInput!]
  updateMany: [SalesReturnItemUpdateManyWithWhereWithoutProductVariantInput!]
  deleteMany: [SalesReturnItemScalarWhereInput!]
}

input SalesReturnItemUpsertWithWhereUniqueWithoutProductVariantInput {
  where: SalesReturnItemWhereUniqueInput!
  update: SalesReturnItemUpdateWithoutProductVariantInput!
  create: SalesReturnItemCreateWithoutProductVariantInput!
}

input SalesReturnItemUpdateWithoutProductVariantInput {
  id: StringFieldUpdateOperationsInput
  quantity: IntFieldUpdateOperationsInput
  condition: StringFieldUpdateOperationsInput
  return: SalesReturnUpdateOneRequiredWithoutItemsNestedInput
}

input SalesReturnUpdateOneRequiredWithoutItemsNestedInput {
  create: SalesReturnCreateWithoutItemsInput
  connectOrCreate: SalesReturnCreateOrConnectWithoutItemsInput
  upsert: SalesReturnUpsertWithoutItemsInput
  connect: SalesReturnWhereUniqueInput
  update: SalesReturnUpdateToOneWithWhereWithoutItemsInput
}

input SalesReturnUpsertWithoutItemsInput {
  update: SalesReturnUpdateWithoutItemsInput!
  create: SalesReturnCreateWithoutItemsInput!
  where: SalesReturnWhereInput
}

input SalesReturnUpdateWithoutItemsInput {
  id: StringFieldUpdateOperationsInput
  type: EnumSaleTypeFieldUpdateOperationsInput
  status: EnumReturnStatusFieldUpdateOperationsInput
  returnLocation: EnumReturnLocationFieldUpdateOperationsInput
  isApprovedLate: BoolFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  consumerSale: ConsumerSaleUpdateOneWithoutSalesReturnNestedInput
  resellerSale: ResellerSaleUpdateOneWithoutSalesReturnNestedInput
  returnedBy: UserUpdateOneRequiredWithoutSalesReturnRequestersNestedInput
  receivedBy: UserUpdateOneRequiredWithoutSalesReturnReceiversNestedInput
  approvedBy: UserUpdateOneWithoutSalesReturnNestedInput
  store: StoreUpdateOneRequiredWithoutSalesReturnsNestedInput
}

input ResellerSaleUpdateOneWithoutSalesReturnNestedInput {
  create: ResellerSaleCreateWithoutSalesReturnInput
  connectOrCreate: ResellerSaleCreateOrConnectWithoutSalesReturnInput
  upsert: ResellerSaleUpsertWithoutSalesReturnInput
  disconnect: ResellerSaleWhereInput
  delete: ResellerSaleWhereInput
  connect: ResellerSaleWhereUniqueInput
  update: ResellerSaleUpdateToOneWithWhereWithoutSalesReturnInput
}

input ResellerSaleUpsertWithoutSalesReturnInput {
  update: ResellerSaleUpdateWithoutSalesReturnInput!
  create: ResellerSaleCreateWithoutSalesReturnInput!
  where: ResellerSaleWhereInput
}

input ResellerSaleUpdateWithoutSalesReturnInput {
  id: StringFieldUpdateOperationsInput
  status: EnumSaleStatusFieldUpdateOperationsInput
  totalAmount: FloatFieldUpdateOperationsInput
  approvedAt: NullableDateTimeFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  reseller: UserUpdateOneRequiredWithoutResellerSalesNestedInput
  biller: UserUpdateOneRequiredWithoutBillerResellerSaleNestedInput
  approvedBy: UserUpdateOneWithoutResellerSaleNestedInput
  quotation: QuotationUpdateOneWithoutSaleNestedInput
  store: StoreUpdateOneRequiredWithoutResellerSalesNestedInput
  items: ResellerSaleItemUpdateManyWithoutSaleNestedInput
  payments: ResellerPaymentUpdateManyWithoutSaleNestedInput
  SaleOrder: SaleOrderUpdateOneRequiredWithoutResellerSaleNestedInput
}

input UserUpdateOneWithoutResellerSaleNestedInput {
  create: UserCreateWithoutResellerSaleInput
  connectOrCreate: UserCreateOrConnectWithoutResellerSaleInput
  upsert: UserUpsertWithoutResellerSaleInput
  disconnect: UserWhereInput
  delete: UserWhereInput
  connect: UserWhereUniqueInput
  update: UserUpdateToOneWithWhereWithoutResellerSaleInput
}

input UserUpsertWithoutResellerSaleInput {
  update: UserUpdateWithoutResellerSaleInput!
  create: UserCreateWithoutResellerSaleInput!
  where: UserWhereInput
}

input UserUpdateWithoutResellerSaleInput {
  id: StringFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  passwordHash: StringFieldUpdateOperationsInput
  tier: NullableEnumUserTierFieldUpdateOperationsInput
  referralCode: NullableStringFieldUpdateOperationsInput
  referredBy: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  isEmailVerified: BoolFieldUpdateOperationsInput
  emailVerificationToken: NullableStringFieldUpdateOperationsInput
  emailVerificationTokenExpiry: NullableDateTimeFieldUpdateOperationsInput
  role: RoleUpdateOneRequiredWithoutUsersNestedInput
  resellerProfile: ResellerProfileUpdateOneWithoutUserNestedInput
  customerProfile: CustomerProfileUpdateOneWithoutUserNestedInput
  resellerPaymentsMade: ResellerPaymentUpdateManyWithoutResellerNestedInput
  resellerPaymentsReceived: ResellerPaymentUpdateManyWithoutReceivedByNestedInput
  adminLogs: AdminActionLogUpdateManyWithoutAdminNestedInput
  supportMessages: SupportMessageUpdateManyWithoutUserNestedInput
  ConsumerSale: ConsumerSaleUpdateManyWithoutBillerNestedInput
  ConsumerSaleAdjustedBys: ConsumerSaleUpdateManyWithoutAdjustedByNestedInput
  StockReceiptBatchReceivedBys: StockReceiptBatchUpdateManyWithoutReceivedByNestedInput
  StockReceiptBatchConfirmedBys: StockReceiptBatchUpdateManyWithoutConfirmedByNestedInput
  StockTransferRequests: StockTransferUpdateManyWithoutRequestedByNestedInput
  StockTransferApprovals: StockTransferUpdateManyWithoutApprovedByNestedInput
  Store: StoreUpdateManyWithoutManagerNestedInput
  ConsumerReceipt: ConsumerReceiptUpdateManyWithoutIssuedByNestedInput
  ResellerSales: ResellerSaleUpdateManyWithoutResellerNestedInput
  BillerResellerSale: ResellerSaleUpdateManyWithoutBillerNestedInput
  SalesReturnReceivers: SalesReturnUpdateManyWithoutReceivedByNestedInput
  SalesReturnRequesters: SalesReturnUpdateManyWithoutReturnedByNestedInput
  SalesReturn: SalesReturnUpdateManyWithoutApprovedByNestedInput
  PurchaseReturnInitiators: PurchaseReturnUpdateManyWithoutInitiatedByNestedInput
  PurchaseReturnApprovers: PurchaseReturnUpdateManyWithoutApprovedByNestedInput
  Payment: PaymentUpdateManyWithoutReceivedByNestedInput
  ResellerTierHistory: ResellerTierHistoryUpdateManyWithoutUserNestedInput
  ResellerTierHistoryChangedBys: ResellerTierHistoryUpdateManyWithoutAdminNestedInput
  ResellerProfile: ResellerProfileUpdateManyWithoutBillerNestedInput
  RequestedResellers: ResellerProfileUpdateManyWithoutRequestedBillerNestedInput
  Notification: NotificationUpdateManyWithoutUserNestedInput
  Fulfillment: FulfillmentUpdateManyWithoutDeliveryPersonnelNestedInput
  BillerQuotation: QuotationUpdateManyWithoutBillerNestedInput
  ResellerQuotation: QuotationUpdateManyWithoutResellerNestedInput
  PurchaseRequisition: PurchaseRequisitionUpdateManyWithoutRequestedByNestedInput
  Supplier: SupplierUpdateManyWithoutUserNestedInput
}

input ResellerSaleUpdateManyWithoutResellerNestedInput {
  create: [ResellerSaleCreateWithoutResellerInput!]
  connectOrCreate: [ResellerSaleCreateOrConnectWithoutResellerInput!]
  upsert: [ResellerSaleUpsertWithWhereUniqueWithoutResellerInput!]
  createMany: ResellerSaleCreateManyResellerInputEnvelope
  set: [ResellerSaleWhereUniqueInput!]
  disconnect: [ResellerSaleWhereUniqueInput!]
  delete: [ResellerSaleWhereUniqueInput!]
  connect: [ResellerSaleWhereUniqueInput!]
  update: [ResellerSaleUpdateWithWhereUniqueWithoutResellerInput!]
  updateMany: [ResellerSaleUpdateManyWithWhereWithoutResellerInput!]
  deleteMany: [ResellerSaleScalarWhereInput!]
}

input ResellerSaleUpsertWithWhereUniqueWithoutResellerInput {
  where: ResellerSaleWhereUniqueInput!
  update: ResellerSaleUpdateWithoutResellerInput!
  create: ResellerSaleCreateWithoutResellerInput!
}

input ResellerSaleUpdateWithoutResellerInput {
  id: StringFieldUpdateOperationsInput
  status: EnumSaleStatusFieldUpdateOperationsInput
  totalAmount: FloatFieldUpdateOperationsInput
  approvedAt: NullableDateTimeFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  biller: UserUpdateOneRequiredWithoutBillerResellerSaleNestedInput
  approvedBy: UserUpdateOneWithoutResellerSaleNestedInput
  quotation: QuotationUpdateOneWithoutSaleNestedInput
  store: StoreUpdateOneRequiredWithoutResellerSalesNestedInput
  items: ResellerSaleItemUpdateManyWithoutSaleNestedInput
  payments: ResellerPaymentUpdateManyWithoutSaleNestedInput
  SalesReturn: SalesReturnUpdateManyWithoutResellerSaleNestedInput
  SaleOrder: SaleOrderUpdateOneRequiredWithoutResellerSaleNestedInput
}

input QuotationUpdateOneWithoutSaleNestedInput {
  create: QuotationCreateWithoutSaleInput
  connectOrCreate: QuotationCreateOrConnectWithoutSaleInput
  upsert: QuotationUpsertWithoutSaleInput
  disconnect: QuotationWhereInput
  delete: QuotationWhereInput
  connect: QuotationWhereUniqueInput
  update: QuotationUpdateToOneWithWhereWithoutSaleInput
}

input QuotationUpsertWithoutSaleInput {
  update: QuotationUpdateWithoutSaleInput!
  create: QuotationCreateWithoutSaleInput!
  where: QuotationWhereInput
}

input QuotationUpdateWithoutSaleInput {
  id: StringFieldUpdateOperationsInput
  type: EnumSaleTypeFieldUpdateOperationsInput
  channel: EnumSaleChannelFieldUpdateOperationsInput
  status: EnumQuotationStatusFieldUpdateOperationsInput
  totalAmount: FloatFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  store: StoreUpdateOneRequiredWithoutQuotationNestedInput
  biller: UserUpdateOneWithoutBillerQuotationNestedInput
  consumer: CustomerUpdateOneWithoutQuotationNestedInput
  reseller: UserUpdateOneWithoutResellerQuotationNestedInput
  items: QuotationItemUpdateManyWithoutQuotationNestedInput
  SaleOrder: SaleOrderUpdateOneWithoutQuotationNestedInput
  ConsumerSale: ConsumerSaleUpdateManyWithoutQuotationNestedInput
}

input CustomerUpdateOneWithoutQuotationNestedInput {
  create: CustomerCreateWithoutQuotationInput
  connectOrCreate: CustomerCreateOrConnectWithoutQuotationInput
  upsert: CustomerUpsertWithoutQuotationInput
  disconnect: CustomerWhereInput
  delete: CustomerWhereInput
  connect: CustomerWhereUniqueInput
  update: CustomerUpdateToOneWithWhereWithoutQuotationInput
}

input CustomerUpsertWithoutQuotationInput {
  update: CustomerUpdateWithoutQuotationInput!
  create: CustomerCreateWithoutQuotationInput!
  where: CustomerWhereInput
}

input CustomerUpdateWithoutQuotationInput {
  id: StringFieldUpdateOperationsInput
  fullName: StringFieldUpdateOperationsInput
  phone: NullableStringFieldUpdateOperationsInput
  email: NullableStringFieldUpdateOperationsInput
  preferredStore: StoreUpdateOneWithoutCustomerNestedInput
  sales: ConsumerSaleUpdateManyWithoutCustomerNestedInput
  CustomerPreferenceProfile: CustomerPreferenceProfileUpdateManyWithoutCustomerNestedInput
}

input ConsumerSaleUpdateManyWithoutCustomerNestedInput {
  create: [ConsumerSaleCreateWithoutCustomerInput!]
  connectOrCreate: [ConsumerSaleCreateOrConnectWithoutCustomerInput!]
  upsert: [ConsumerSaleUpsertWithWhereUniqueWithoutCustomerInput!]
  createMany: ConsumerSaleCreateManyCustomerInputEnvelope
  set: [ConsumerSaleWhereUniqueInput!]
  disconnect: [ConsumerSaleWhereUniqueInput!]
  delete: [ConsumerSaleWhereUniqueInput!]
  connect: [ConsumerSaleWhereUniqueInput!]
  update: [ConsumerSaleUpdateWithWhereUniqueWithoutCustomerInput!]
  updateMany: [ConsumerSaleUpdateManyWithWhereWithoutCustomerInput!]
  deleteMany: [ConsumerSaleScalarWhereInput!]
}

input ConsumerSaleUpsertWithWhereUniqueWithoutCustomerInput {
  where: ConsumerSaleWhereUniqueInput!
  update: ConsumerSaleUpdateWithoutCustomerInput!
  create: ConsumerSaleCreateWithoutCustomerInput!
}

input ConsumerSaleUpdateWithoutCustomerInput {
  id: StringFieldUpdateOperationsInput
  channel: EnumSaleChannelFieldUpdateOperationsInput
  status: EnumSaleStatusFieldUpdateOperationsInput
  totalAmount: FloatFieldUpdateOperationsInput
  adjustmentType: NullableEnumAdjustmentTypeFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  store: StoreUpdateOneRequiredWithoutCustomerSalesNestedInput
  biller: UserUpdateOneRequiredWithoutConsumerSaleNestedInput
  adjustedBy: UserUpdateOneWithoutConsumerSaleAdjustedBysNestedInput
  quotation: QuotationUpdateOneWithoutConsumerSaleNestedInput
  items: ConsumerSaleItemUpdateManyWithoutSaleNestedInput
  payments: ConsumerPaymentUpdateManyWithoutSaleNestedInput
  receipt: ConsumerReceiptUpdateOneWithoutSaleNestedInput
  SalesReturn: SalesReturnUpdateManyWithoutConsumerSaleNestedInput
  CustomerProfile: CustomerProfileUpdateManyWithoutSalesNestedInput
  SaleOrder: SaleOrderUpdateOneRequiredWithoutConsumerSaleNestedInput
}

input ConsumerPaymentUpdateManyWithoutSaleNestedInput {
  create: [ConsumerPaymentCreateWithoutSaleInput!]
  connectOrCreate: [ConsumerPaymentCreateOrConnectWithoutSaleInput!]
  upsert: [ConsumerPaymentUpsertWithWhereUniqueWithoutSaleInput!]
  createMany: ConsumerPaymentCreateManySaleInputEnvelope
  set: [ConsumerPaymentWhereUniqueInput!]
  disconnect: [ConsumerPaymentWhereUniqueInput!]
  delete: [ConsumerPaymentWhereUniqueInput!]
  connect: [ConsumerPaymentWhereUniqueInput!]
  update: [ConsumerPaymentUpdateWithWhereUniqueWithoutSaleInput!]
  updateMany: [ConsumerPaymentUpdateManyWithWhereWithoutSaleInput!]
  deleteMany: [ConsumerPaymentScalarWhereInput!]
}

input ConsumerPaymentUpsertWithWhereUniqueWithoutSaleInput {
  where: ConsumerPaymentWhereUniqueInput!
  update: ConsumerPaymentUpdateWithoutSaleInput!
  create: ConsumerPaymentCreateWithoutSaleInput!
}

input ConsumerPaymentUpdateWithoutSaleInput {
  id: StringFieldUpdateOperationsInput
  amount: FloatFieldUpdateOperationsInput
  method: EnumPaymentMethodFieldUpdateOperationsInput
  status: EnumPaymentStatusFieldUpdateOperationsInput
  receivedAt: DateTimeFieldUpdateOperationsInput
  reference: NullableStringFieldUpdateOperationsInput
  saleOrder: SaleOrderUpdateOneRequiredWithoutConsumerPaymentNestedInput
}

input SaleOrderUpdateOneRequiredWithoutConsumerPaymentNestedInput {
  create: SaleOrderCreateWithoutConsumerPaymentInput
  connectOrCreate: SaleOrderCreateOrConnectWithoutConsumerPaymentInput
  upsert: SaleOrderUpsertWithoutConsumerPaymentInput
  connect: SaleOrderWhereUniqueInput
  update: SaleOrderUpdateToOneWithWhereWithoutConsumerPaymentInput
}

input SaleOrderUpsertWithoutConsumerPaymentInput {
  update: SaleOrderUpdateWithoutConsumerPaymentInput!
  create: SaleOrderCreateWithoutConsumerPaymentInput!
  where: SaleOrderWhereInput
}

input SaleOrderUpdateWithoutConsumerPaymentInput {
  id: StringFieldUpdateOperationsInput
  storeId: StringFieldUpdateOperationsInput
  billerId: StringFieldUpdateOperationsInput
  type: EnumSaleTypeFieldUpdateOperationsInput
  status: EnumSaleStatusFieldUpdateOperationsInput
  phase: EnumOrderPhaseFieldUpdateOperationsInput
  totalAmount: FloatFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  resellerSaleid: NullableStringFieldUpdateOperationsInput
  consumerSale: ConsumerSaleUpdateOneWithoutSaleOrderNestedInput
  resellerSale: ResellerSaleUpdateOneWithoutSaleOrderNestedInput
  fulfillment: FulfillmentUpdateOneWithoutSaleOrderNestedInput
  quotation: QuotationUpdateOneWithoutSaleOrderNestedInput
  ResellerPayment: ResellerPaymentUpdateManyWithoutSaleOrderNestedInput
}

input ResellerSaleUpdateOneWithoutSaleOrderNestedInput {
  create: ResellerSaleCreateWithoutSaleOrderInput
  connectOrCreate: ResellerSaleCreateOrConnectWithoutSaleOrderInput
  upsert: ResellerSaleUpsertWithoutSaleOrderInput
  disconnect: ResellerSaleWhereInput
  delete: ResellerSaleWhereInput
  connect: ResellerSaleWhereUniqueInput
  update: ResellerSaleUpdateToOneWithWhereWithoutSaleOrderInput
}

input ResellerSaleUpsertWithoutSaleOrderInput {
  update: ResellerSaleUpdateWithoutSaleOrderInput!
  create: ResellerSaleCreateWithoutSaleOrderInput!
  where: ResellerSaleWhereInput
}

input ResellerSaleUpdateWithoutSaleOrderInput {
  id: StringFieldUpdateOperationsInput
  status: EnumSaleStatusFieldUpdateOperationsInput
  totalAmount: FloatFieldUpdateOperationsInput
  approvedAt: NullableDateTimeFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  reseller: UserUpdateOneRequiredWithoutResellerSalesNestedInput
  biller: UserUpdateOneRequiredWithoutBillerResellerSaleNestedInput
  approvedBy: UserUpdateOneWithoutResellerSaleNestedInput
  quotation: QuotationUpdateOneWithoutSaleNestedInput
  store: StoreUpdateOneRequiredWithoutResellerSalesNestedInput
  items: ResellerSaleItemUpdateManyWithoutSaleNestedInput
  payments: ResellerPaymentUpdateManyWithoutSaleNestedInput
  SalesReturn: SalesReturnUpdateManyWithoutResellerSaleNestedInput
}

input StoreUpdateOneRequiredWithoutResellerSalesNestedInput {
  create: StoreCreateWithoutResellerSalesInput
  connectOrCreate: StoreCreateOrConnectWithoutResellerSalesInput
  upsert: StoreUpsertWithoutResellerSalesInput
  connect: StoreWhereUniqueInput
  update: StoreUpdateToOneWithWhereWithoutResellerSalesInput
}

input StoreUpsertWithoutResellerSalesInput {
  update: StoreUpdateWithoutResellerSalesInput!
  create: StoreCreateWithoutResellerSalesInput!
  where: StoreWhereInput
}

input StoreUpdateWithoutResellerSalesInput {
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  location: NullableStringFieldUpdateOperationsInput
  isMain: BoolFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  manager: UserUpdateOneRequiredWithoutStoreNestedInput
  stocks: StockUpdateManyWithoutStoreNestedInput
  receipts: StockReceiptBatchUpdateManyWithoutStoreNestedInput
  transfersOut: StockTransferUpdateManyWithoutFromStoreNestedInput
  transfersIn: StockTransferUpdateManyWithoutToStoreNestedInput
  customerSales: ConsumerSaleUpdateManyWithoutStoreNestedInput
  salesReturns: SalesReturnUpdateManyWithoutStoreNestedInput
  movements: StockMovementUpdateManyWithoutStoreNestedInput
  Customer: CustomerUpdateManyWithoutPreferredStoreNestedInput
  CustomerProfile: CustomerProfileUpdateManyWithoutPreferredStoreNestedInput
  Quotation: QuotationUpdateManyWithoutStoreNestedInput
  PurchaseRequisition: PurchaseRequisitionUpdateManyWithoutStoreNestedInput
  purchaseOrders: PurchaseOrderUpdateManyWithoutStoreNestedInput
  InvoiceImport: InvoiceImportUpdateManyWithoutStoreNestedInput
}

input CustomerUpdateManyWithoutPreferredStoreNestedInput {
  create: [CustomerCreateWithoutPreferredStoreInput!]
  connectOrCreate: [CustomerCreateOrConnectWithoutPreferredStoreInput!]
  upsert: [CustomerUpsertWithWhereUniqueWithoutPreferredStoreInput!]
  createMany: CustomerCreateManyPreferredStoreInputEnvelope
  set: [CustomerWhereUniqueInput!]
  disconnect: [CustomerWhereUniqueInput!]
  delete: [CustomerWhereUniqueInput!]
  connect: [CustomerWhereUniqueInput!]
  update: [CustomerUpdateWithWhereUniqueWithoutPreferredStoreInput!]
  updateMany: [CustomerUpdateManyWithWhereWithoutPreferredStoreInput!]
  deleteMany: [CustomerScalarWhereInput!]
}

input CustomerUpsertWithWhereUniqueWithoutPreferredStoreInput {
  where: CustomerWhereUniqueInput!
  update: CustomerUpdateWithoutPreferredStoreInput!
  create: CustomerCreateWithoutPreferredStoreInput!
}

input CustomerUpdateWithoutPreferredStoreInput {
  id: StringFieldUpdateOperationsInput
  fullName: StringFieldUpdateOperationsInput
  phone: NullableStringFieldUpdateOperationsInput
  email: NullableStringFieldUpdateOperationsInput
  sales: ConsumerSaleUpdateManyWithoutCustomerNestedInput
  CustomerPreferenceProfile: CustomerPreferenceProfileUpdateManyWithoutCustomerNestedInput
  Quotation: QuotationUpdateManyWithoutConsumerNestedInput
}

input CustomerPreferenceProfileUpdateManyWithoutCustomerNestedInput {
  create: [CustomerPreferenceProfileCreateWithoutCustomerInput!]
  connectOrCreate: [CustomerPreferenceProfileCreateOrConnectWithoutCustomerInput!]
  upsert: [CustomerPreferenceProfileUpsertWithWhereUniqueWithoutCustomerInput!]
  createMany: CustomerPreferenceProfileCreateManyCustomerInputEnvelope
  set: [CustomerPreferenceProfileWhereUniqueInput!]
  disconnect: [CustomerPreferenceProfileWhereUniqueInput!]
  delete: [CustomerPreferenceProfileWhereUniqueInput!]
  connect: [CustomerPreferenceProfileWhereUniqueInput!]
  update: [CustomerPreferenceProfileUpdateWithWhereUniqueWithoutCustomerInput!]
  updateMany: [CustomerPreferenceProfileUpdateManyWithWhereWithoutCustomerInput!]
  deleteMany: [CustomerPreferenceProfileScalarWhereInput!]
}

input CustomerPreferenceProfileUpsertWithWhereUniqueWithoutCustomerInput {
  where: CustomerPreferenceProfileWhereUniqueInput!
  update: CustomerPreferenceProfileUpdateWithoutCustomerInput!
  create: CustomerPreferenceProfileCreateWithoutCustomerInput!
}

input CustomerPreferenceProfileUpdateWithoutCustomerInput {
  id: StringFieldUpdateOperationsInput
  frequentlyBoughtVariants: JSON
  lastPurchaseDate: NullableDateTimeFieldUpdateOperationsInput
  eligibleForDiscounts: BoolFieldUpdateOperationsInput
  CustomerProfile: CustomerProfileUpdateManyWithoutPreferencesNestedInput
}

input CustomerProfileUpdateManyWithoutPreferencesNestedInput {
  create: [CustomerProfileCreateWithoutPreferencesInput!]
  connectOrCreate: [CustomerProfileCreateOrConnectWithoutPreferencesInput!]
  upsert: [CustomerProfileUpsertWithWhereUniqueWithoutPreferencesInput!]
  createMany: CustomerProfileCreateManyPreferencesInputEnvelope
  set: [CustomerProfileWhereUniqueInput!]
  disconnect: [CustomerProfileWhereUniqueInput!]
  delete: [CustomerProfileWhereUniqueInput!]
  connect: [CustomerProfileWhereUniqueInput!]
  update: [CustomerProfileUpdateWithWhereUniqueWithoutPreferencesInput!]
  updateMany: [CustomerProfileUpdateManyWithWhereWithoutPreferencesInput!]
  deleteMany: [CustomerProfileScalarWhereInput!]
}

input CustomerProfileUpsertWithWhereUniqueWithoutPreferencesInput {
  where: CustomerProfileWhereUniqueInput!
  update: CustomerProfileUpdateWithoutPreferencesInput!
  create: CustomerProfileCreateWithoutPreferencesInput!
}

input CustomerProfileUpdateWithoutPreferencesInput {
  fullName: StringFieldUpdateOperationsInput
  phone: NullableStringFieldUpdateOperationsInput
  email: NullableStringFieldUpdateOperationsInput
  gender: NullableStringFieldUpdateOperationsInput
  birthday: NullableDateTimeFieldUpdateOperationsInput
  profileStatus: EnumProfileStatusFieldUpdateOperationsInput
  requestedAt: DateTimeFieldUpdateOperationsInput
  activatedAt: NullableDateTimeFieldUpdateOperationsInput
  isPhoneVerified: BoolFieldUpdateOperationsInput
  phoneVerificationCode: NullableStringFieldUpdateOperationsInput
  phoneVerificationCodeExpiry: NullableDateTimeFieldUpdateOperationsInput
  user: UserUpdateOneRequiredWithoutCustomerProfileNestedInput
  preferredStore: StoreUpdateOneWithoutCustomerProfileNestedInput
  referredBy: CustomerProfileUpdateOneWithoutReferralsNestedInput
  referrals: CustomerProfileUpdateManyWithoutReferredByNestedInput
  sales: ConsumerSaleUpdateManyWithoutCustomerProfileNestedInput
}

input UserUpdateOneRequiredWithoutCustomerProfileNestedInput {
  create: UserCreateWithoutCustomerProfileInput
  connectOrCreate: UserCreateOrConnectWithoutCustomerProfileInput
  upsert: UserUpsertWithoutCustomerProfileInput
  connect: UserWhereUniqueInput
  update: UserUpdateToOneWithWhereWithoutCustomerProfileInput
}

input UserUpsertWithoutCustomerProfileInput {
  update: UserUpdateWithoutCustomerProfileInput!
  create: UserCreateWithoutCustomerProfileInput!
  where: UserWhereInput
}

input UserUpdateWithoutCustomerProfileInput {
  id: StringFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  passwordHash: StringFieldUpdateOperationsInput
  tier: NullableEnumUserTierFieldUpdateOperationsInput
  referralCode: NullableStringFieldUpdateOperationsInput
  referredBy: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  isEmailVerified: BoolFieldUpdateOperationsInput
  emailVerificationToken: NullableStringFieldUpdateOperationsInput
  emailVerificationTokenExpiry: NullableDateTimeFieldUpdateOperationsInput
  role: RoleUpdateOneRequiredWithoutUsersNestedInput
  resellerProfile: ResellerProfileUpdateOneWithoutUserNestedInput
  resellerPaymentsMade: ResellerPaymentUpdateManyWithoutResellerNestedInput
  resellerPaymentsReceived: ResellerPaymentUpdateManyWithoutReceivedByNestedInput
  adminLogs: AdminActionLogUpdateManyWithoutAdminNestedInput
  supportMessages: SupportMessageUpdateManyWithoutUserNestedInput
  ConsumerSale: ConsumerSaleUpdateManyWithoutBillerNestedInput
  ConsumerSaleAdjustedBys: ConsumerSaleUpdateManyWithoutAdjustedByNestedInput
  StockReceiptBatchReceivedBys: StockReceiptBatchUpdateManyWithoutReceivedByNestedInput
  StockReceiptBatchConfirmedBys: StockReceiptBatchUpdateManyWithoutConfirmedByNestedInput
  StockTransferRequests: StockTransferUpdateManyWithoutRequestedByNestedInput
  StockTransferApprovals: StockTransferUpdateManyWithoutApprovedByNestedInput
  Store: StoreUpdateManyWithoutManagerNestedInput
  ConsumerReceipt: ConsumerReceiptUpdateManyWithoutIssuedByNestedInput
  ResellerSales: ResellerSaleUpdateManyWithoutResellerNestedInput
  BillerResellerSale: ResellerSaleUpdateManyWithoutBillerNestedInput
  ResellerSale: ResellerSaleUpdateManyWithoutApprovedByNestedInput
  SalesReturnReceivers: SalesReturnUpdateManyWithoutReceivedByNestedInput
  SalesReturnRequesters: SalesReturnUpdateManyWithoutReturnedByNestedInput
  SalesReturn: SalesReturnUpdateManyWithoutApprovedByNestedInput
  PurchaseReturnInitiators: PurchaseReturnUpdateManyWithoutInitiatedByNestedInput
  PurchaseReturnApprovers: PurchaseReturnUpdateManyWithoutApprovedByNestedInput
  Payment: PaymentUpdateManyWithoutReceivedByNestedInput
  ResellerTierHistory: ResellerTierHistoryUpdateManyWithoutUserNestedInput
  ResellerTierHistoryChangedBys: ResellerTierHistoryUpdateManyWithoutAdminNestedInput
  ResellerProfile: ResellerProfileUpdateManyWithoutBillerNestedInput
  RequestedResellers: ResellerProfileUpdateManyWithoutRequestedBillerNestedInput
  Notification: NotificationUpdateManyWithoutUserNestedInput
  Fulfillment: FulfillmentUpdateManyWithoutDeliveryPersonnelNestedInput
  BillerQuotation: QuotationUpdateManyWithoutBillerNestedInput
  ResellerQuotation: QuotationUpdateManyWithoutResellerNestedInput
  PurchaseRequisition: PurchaseRequisitionUpdateManyWithoutRequestedByNestedInput
  Supplier: SupplierUpdateManyWithoutUserNestedInput
}

input ResellerSaleUpdateManyWithoutBillerNestedInput {
  create: [ResellerSaleCreateWithoutBillerInput!]
  connectOrCreate: [ResellerSaleCreateOrConnectWithoutBillerInput!]
  upsert: [ResellerSaleUpsertWithWhereUniqueWithoutBillerInput!]
  createMany: ResellerSaleCreateManyBillerInputEnvelope
  set: [ResellerSaleWhereUniqueInput!]
  disconnect: [ResellerSaleWhereUniqueInput!]
  delete: [ResellerSaleWhereUniqueInput!]
  connect: [ResellerSaleWhereUniqueInput!]
  update: [ResellerSaleUpdateWithWhereUniqueWithoutBillerInput!]
  updateMany: [ResellerSaleUpdateManyWithWhereWithoutBillerInput!]
  deleteMany: [ResellerSaleScalarWhereInput!]
}

input ResellerSaleUpsertWithWhereUniqueWithoutBillerInput {
  where: ResellerSaleWhereUniqueInput!
  update: ResellerSaleUpdateWithoutBillerInput!
  create: ResellerSaleCreateWithoutBillerInput!
}

input ResellerSaleUpdateWithoutBillerInput {
  id: StringFieldUpdateOperationsInput
  status: EnumSaleStatusFieldUpdateOperationsInput
  totalAmount: FloatFieldUpdateOperationsInput
  approvedAt: NullableDateTimeFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  reseller: UserUpdateOneRequiredWithoutResellerSalesNestedInput
  approvedBy: UserUpdateOneWithoutResellerSaleNestedInput
  quotation: QuotationUpdateOneWithoutSaleNestedInput
  store: StoreUpdateOneRequiredWithoutResellerSalesNestedInput
  items: ResellerSaleItemUpdateManyWithoutSaleNestedInput
  payments: ResellerPaymentUpdateManyWithoutSaleNestedInput
  SalesReturn: SalesReturnUpdateManyWithoutResellerSaleNestedInput
  SaleOrder: SaleOrderUpdateOneRequiredWithoutResellerSaleNestedInput
}

input ResellerSaleItemUpdateManyWithoutSaleNestedInput {
  create: [ResellerSaleItemCreateWithoutSaleInput!]
  connectOrCreate: [ResellerSaleItemCreateOrConnectWithoutSaleInput!]
  upsert: [ResellerSaleItemUpsertWithWhereUniqueWithoutSaleInput!]
  createMany: ResellerSaleItemCreateManySaleInputEnvelope
  set: [ResellerSaleItemWhereUniqueInput!]
  disconnect: [ResellerSaleItemWhereUniqueInput!]
  delete: [ResellerSaleItemWhereUniqueInput!]
  connect: [ResellerSaleItemWhereUniqueInput!]
  update: [ResellerSaleItemUpdateWithWhereUniqueWithoutSaleInput!]
  updateMany: [ResellerSaleItemUpdateManyWithWhereWithoutSaleInput!]
  deleteMany: [ResellerSaleItemScalarWhereInput!]
}

input ResellerSaleItemUpsertWithWhereUniqueWithoutSaleInput {
  where: ResellerSaleItemWhereUniqueInput!
  update: ResellerSaleItemUpdateWithoutSaleInput!
  create: ResellerSaleItemCreateWithoutSaleInput!
}

input ResellerSaleItemUpdateWithoutSaleInput {
  id: StringFieldUpdateOperationsInput
  quantity: IntFieldUpdateOperationsInput
  unitPrice: FloatFieldUpdateOperationsInput
  productVariant: ProductVariantUpdateOneRequiredWithoutResellerItemsNestedInput
}

input ProductVariantUpdateOneRequiredWithoutResellerItemsNestedInput {
  create: ProductVariantCreateWithoutResellerItemsInput
  connectOrCreate: ProductVariantCreateOrConnectWithoutResellerItemsInput
  upsert: ProductVariantUpsertWithoutResellerItemsInput
  connect: ProductVariantWhereUniqueInput
  update: ProductVariantUpdateToOneWithWhereWithoutResellerItemsInput
}

input ProductVariantUpsertWithoutResellerItemsInput {
  update: ProductVariantUpdateWithoutResellerItemsInput!
  create: ProductVariantCreateWithoutResellerItemsInput!
  where: ProductVariantWhereInput
}

input ProductVariantUpdateWithoutResellerItemsInput {
  id: StringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  size: StringFieldUpdateOperationsInput
  concentration: StringFieldUpdateOperationsInput
  packaging: StringFieldUpdateOperationsInput
  barcode: NullableStringFieldUpdateOperationsInput
  price: FloatFieldUpdateOperationsInput
  resellerPrice: FloatFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  product: ProductUpdateOneWithoutVariantsNestedInput
  stockItems: StockUpdateManyWithoutProductVariantNestedInput
  receiptItems: StockReceiptBatchItemUpdateManyWithoutProductVariantNestedInput
  quotationItems: QuotationItemUpdateManyWithoutProductVariantNestedInput
  consumerItems: ConsumerSaleItemUpdateManyWithoutProductVariantNestedInput
  returnItems: SalesReturnItemUpdateManyWithoutProductVariantNestedInput
  purchaseReturnItems: PurchaseReturnItemUpdateManyWithoutProductVariantNestedInput
  transferItems: StockTransferItemUpdateManyWithoutProductVariantNestedInput
  stats: ProductSalesStatsUpdateOneWithoutProductVariantNestedInput
  PurchaseOrderItem: PurchaseOrderItemUpdateManyWithoutProductVariantNestedInput
  StockMovementItem: StockMovementItemUpdateManyWithoutProductVariantNestedInput
  PurchaseRequisitionItem: PurchaseRequisitionItemUpdateManyWithoutProductVariantNestedInput
  SupplierCatalog: SupplierCatalogUpdateManyWithoutProductVariantNestedInput
  SupplierQuoteItem: SupplierQuoteItemUpdateManyWithoutProductVariantNestedInput
  ProductVariantTierPrice: ProductVariantTierPriceUpdateManyWithoutVariantNestedInput
  facets: VariantFacetValueUpdateManyWithoutVariantNestedInput
}

input ConsumerSaleItemUpdateManyWithoutProductVariantNestedInput {
  create: [ConsumerSaleItemCreateWithoutProductVariantInput!]
  connectOrCreate: [ConsumerSaleItemCreateOrConnectWithoutProductVariantInput!]
  upsert: [ConsumerSaleItemUpsertWithWhereUniqueWithoutProductVariantInput!]
  createMany: ConsumerSaleItemCreateManyProductVariantInputEnvelope
  set: [ConsumerSaleItemWhereUniqueInput!]
  disconnect: [ConsumerSaleItemWhereUniqueInput!]
  delete: [ConsumerSaleItemWhereUniqueInput!]
  connect: [ConsumerSaleItemWhereUniqueInput!]
  update: [ConsumerSaleItemUpdateWithWhereUniqueWithoutProductVariantInput!]
  updateMany: [ConsumerSaleItemUpdateManyWithWhereWithoutProductVariantInput!]
  deleteMany: [ConsumerSaleItemScalarWhereInput!]
}

input ConsumerSaleItemUpsertWithWhereUniqueWithoutProductVariantInput {
  where: ConsumerSaleItemWhereUniqueInput!
  update: ConsumerSaleItemUpdateWithoutProductVariantInput!
  create: ConsumerSaleItemCreateWithoutProductVariantInput!
}

input ConsumerSaleItemUpdateWithoutProductVariantInput {
  id: StringFieldUpdateOperationsInput
  quantity: IntFieldUpdateOperationsInput
  unitPrice: FloatFieldUpdateOperationsInput
  sale: ConsumerSaleUpdateOneRequiredWithoutItemsNestedInput
}

input ConsumerSaleUpdateOneRequiredWithoutItemsNestedInput {
  create: ConsumerSaleCreateWithoutItemsInput
  connectOrCreate: ConsumerSaleCreateOrConnectWithoutItemsInput
  upsert: ConsumerSaleUpsertWithoutItemsInput
  connect: ConsumerSaleWhereUniqueInput
  update: ConsumerSaleUpdateToOneWithWhereWithoutItemsInput
}

input ConsumerSaleUpsertWithoutItemsInput {
  update: ConsumerSaleUpdateWithoutItemsInput!
  create: ConsumerSaleCreateWithoutItemsInput!
  where: ConsumerSaleWhereInput
}

input ConsumerSaleUpdateWithoutItemsInput {
  id: StringFieldUpdateOperationsInput
  channel: EnumSaleChannelFieldUpdateOperationsInput
  status: EnumSaleStatusFieldUpdateOperationsInput
  totalAmount: FloatFieldUpdateOperationsInput
  adjustmentType: NullableEnumAdjustmentTypeFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  customer: CustomerUpdateOneWithoutSalesNestedInput
  store: StoreUpdateOneRequiredWithoutCustomerSalesNestedInput
  biller: UserUpdateOneRequiredWithoutConsumerSaleNestedInput
  adjustedBy: UserUpdateOneWithoutConsumerSaleAdjustedBysNestedInput
  quotation: QuotationUpdateOneWithoutConsumerSaleNestedInput
  payments: ConsumerPaymentUpdateManyWithoutSaleNestedInput
  receipt: ConsumerReceiptUpdateOneWithoutSaleNestedInput
  SalesReturn: SalesReturnUpdateManyWithoutConsumerSaleNestedInput
  CustomerProfile: CustomerProfileUpdateManyWithoutSalesNestedInput
  SaleOrder: SaleOrderUpdateOneRequiredWithoutConsumerSaleNestedInput
}

input ConsumerReceiptUpdateOneWithoutSaleNestedInput {
  create: ConsumerReceiptCreateWithoutSaleInput
  connectOrCreate: ConsumerReceiptCreateOrConnectWithoutSaleInput
  upsert: ConsumerReceiptUpsertWithoutSaleInput
  disconnect: ConsumerReceiptWhereInput
  delete: ConsumerReceiptWhereInput
  connect: ConsumerReceiptWhereUniqueInput
  update: ConsumerReceiptUpdateToOneWithWhereWithoutSaleInput
}

input ConsumerReceiptUpsertWithoutSaleInput {
  update: ConsumerReceiptUpdateWithoutSaleInput!
  create: ConsumerReceiptCreateWithoutSaleInput!
  where: ConsumerReceiptWhereInput
}

input ConsumerReceiptUpdateWithoutSaleInput {
  id: StringFieldUpdateOperationsInput
  issuedAt: DateTimeFieldUpdateOperationsInput
  receiptUrl: NullableStringFieldUpdateOperationsInput
  issuedBy: UserUpdateOneRequiredWithoutConsumerReceiptNestedInput
}

input UserUpdateOneRequiredWithoutConsumerReceiptNestedInput {
  create: UserCreateWithoutConsumerReceiptInput
  connectOrCreate: UserCreateOrConnectWithoutConsumerReceiptInput
  upsert: UserUpsertWithoutConsumerReceiptInput
  connect: UserWhereUniqueInput
  update: UserUpdateToOneWithWhereWithoutConsumerReceiptInput
}

input UserUpsertWithoutConsumerReceiptInput {
  update: UserUpdateWithoutConsumerReceiptInput!
  create: UserCreateWithoutConsumerReceiptInput!
  where: UserWhereInput
}

input UserUpdateWithoutConsumerReceiptInput {
  id: StringFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  passwordHash: StringFieldUpdateOperationsInput
  tier: NullableEnumUserTierFieldUpdateOperationsInput
  referralCode: NullableStringFieldUpdateOperationsInput
  referredBy: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  isEmailVerified: BoolFieldUpdateOperationsInput
  emailVerificationToken: NullableStringFieldUpdateOperationsInput
  emailVerificationTokenExpiry: NullableDateTimeFieldUpdateOperationsInput
  role: RoleUpdateOneRequiredWithoutUsersNestedInput
  resellerProfile: ResellerProfileUpdateOneWithoutUserNestedInput
  customerProfile: CustomerProfileUpdateOneWithoutUserNestedInput
  resellerPaymentsMade: ResellerPaymentUpdateManyWithoutResellerNestedInput
  resellerPaymentsReceived: ResellerPaymentUpdateManyWithoutReceivedByNestedInput
  adminLogs: AdminActionLogUpdateManyWithoutAdminNestedInput
  supportMessages: SupportMessageUpdateManyWithoutUserNestedInput
  ConsumerSale: ConsumerSaleUpdateManyWithoutBillerNestedInput
  ConsumerSaleAdjustedBys: ConsumerSaleUpdateManyWithoutAdjustedByNestedInput
  StockReceiptBatchReceivedBys: StockReceiptBatchUpdateManyWithoutReceivedByNestedInput
  StockReceiptBatchConfirmedBys: StockReceiptBatchUpdateManyWithoutConfirmedByNestedInput
  StockTransferRequests: StockTransferUpdateManyWithoutRequestedByNestedInput
  StockTransferApprovals: StockTransferUpdateManyWithoutApprovedByNestedInput
  Store: StoreUpdateManyWithoutManagerNestedInput
  ResellerSales: ResellerSaleUpdateManyWithoutResellerNestedInput
  BillerResellerSale: ResellerSaleUpdateManyWithoutBillerNestedInput
  ResellerSale: ResellerSaleUpdateManyWithoutApprovedByNestedInput
  SalesReturnReceivers: SalesReturnUpdateManyWithoutReceivedByNestedInput
  SalesReturnRequesters: SalesReturnUpdateManyWithoutReturnedByNestedInput
  SalesReturn: SalesReturnUpdateManyWithoutApprovedByNestedInput
  PurchaseReturnInitiators: PurchaseReturnUpdateManyWithoutInitiatedByNestedInput
  PurchaseReturnApprovers: PurchaseReturnUpdateManyWithoutApprovedByNestedInput
  Payment: PaymentUpdateManyWithoutReceivedByNestedInput
  ResellerTierHistory: ResellerTierHistoryUpdateManyWithoutUserNestedInput
  ResellerTierHistoryChangedBys: ResellerTierHistoryUpdateManyWithoutAdminNestedInput
  ResellerProfile: ResellerProfileUpdateManyWithoutBillerNestedInput
  RequestedResellers: ResellerProfileUpdateManyWithoutRequestedBillerNestedInput
  Notification: NotificationUpdateManyWithoutUserNestedInput
  Fulfillment: FulfillmentUpdateManyWithoutDeliveryPersonnelNestedInput
  BillerQuotation: QuotationUpdateManyWithoutBillerNestedInput
  ResellerQuotation: QuotationUpdateManyWithoutResellerNestedInput
  PurchaseRequisition: PurchaseRequisitionUpdateManyWithoutRequestedByNestedInput
  Supplier: SupplierUpdateManyWithoutUserNestedInput
}

input ResellerSaleUpdateManyWithoutApprovedByNestedInput {
  create: [ResellerSaleCreateWithoutApprovedByInput!]
  connectOrCreate: [ResellerSaleCreateOrConnectWithoutApprovedByInput!]
  upsert: [ResellerSaleUpsertWithWhereUniqueWithoutApprovedByInput!]
  createMany: ResellerSaleCreateManyApprovedByInputEnvelope
  set: [ResellerSaleWhereUniqueInput!]
  disconnect: [ResellerSaleWhereUniqueInput!]
  delete: [ResellerSaleWhereUniqueInput!]
  connect: [ResellerSaleWhereUniqueInput!]
  update: [ResellerSaleUpdateWithWhereUniqueWithoutApprovedByInput!]
  updateMany: [ResellerSaleUpdateManyWithWhereWithoutApprovedByInput!]
  deleteMany: [ResellerSaleScalarWhereInput!]
}

input ResellerSaleUpsertWithWhereUniqueWithoutApprovedByInput {
  where: ResellerSaleWhereUniqueInput!
  update: ResellerSaleUpdateWithoutApprovedByInput!
  create: ResellerSaleCreateWithoutApprovedByInput!
}

input ResellerSaleUpdateWithoutApprovedByInput {
  id: StringFieldUpdateOperationsInput
  status: EnumSaleStatusFieldUpdateOperationsInput
  totalAmount: FloatFieldUpdateOperationsInput
  approvedAt: NullableDateTimeFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  reseller: UserUpdateOneRequiredWithoutResellerSalesNestedInput
  biller: UserUpdateOneRequiredWithoutBillerResellerSaleNestedInput
  quotation: QuotationUpdateOneWithoutSaleNestedInput
  store: StoreUpdateOneRequiredWithoutResellerSalesNestedInput
  items: ResellerSaleItemUpdateManyWithoutSaleNestedInput
  payments: ResellerPaymentUpdateManyWithoutSaleNestedInput
  SalesReturn: SalesReturnUpdateManyWithoutResellerSaleNestedInput
  SaleOrder: SaleOrderUpdateOneRequiredWithoutResellerSaleNestedInput
}

input ResellerPaymentUpdateManyWithoutSaleNestedInput {
  create: [ResellerPaymentCreateWithoutSaleInput!]
  connectOrCreate: [ResellerPaymentCreateOrConnectWithoutSaleInput!]
  upsert: [ResellerPaymentUpsertWithWhereUniqueWithoutSaleInput!]
  createMany: ResellerPaymentCreateManySaleInputEnvelope
  set: [ResellerPaymentWhereUniqueInput!]
  disconnect: [ResellerPaymentWhereUniqueInput!]
  delete: [ResellerPaymentWhereUniqueInput!]
  connect: [ResellerPaymentWhereUniqueInput!]
  update: [ResellerPaymentUpdateWithWhereUniqueWithoutSaleInput!]
  updateMany: [ResellerPaymentUpdateManyWithWhereWithoutSaleInput!]
  deleteMany: [ResellerPaymentScalarWhereInput!]
}

input ResellerPaymentUpsertWithWhereUniqueWithoutSaleInput {
  where: ResellerPaymentWhereUniqueInput!
  update: ResellerPaymentUpdateWithoutSaleInput!
  create: ResellerPaymentCreateWithoutSaleInput!
}

input ResellerPaymentUpdateWithoutSaleInput {
  id: StringFieldUpdateOperationsInput
  amount: FloatFieldUpdateOperationsInput
  method: EnumPaymentMethodFieldUpdateOperationsInput
  reference: NullableStringFieldUpdateOperationsInput
  status: EnumPaymentStatusFieldUpdateOperationsInput
  receivedAt: DateTimeFieldUpdateOperationsInput
  saleOrder: SaleOrderUpdateOneRequiredWithoutResellerPaymentNestedInput
  reseller: UserUpdateOneRequiredWithoutResellerPaymentsMadeNestedInput
  receivedBy: UserUpdateOneRequiredWithoutResellerPaymentsReceivedNestedInput
}

input UserUpdateOneRequiredWithoutResellerPaymentsReceivedNestedInput {
  create: UserCreateWithoutResellerPaymentsReceivedInput
  connectOrCreate: UserCreateOrConnectWithoutResellerPaymentsReceivedInput
  upsert: UserUpsertWithoutResellerPaymentsReceivedInput
  connect: UserWhereUniqueInput
  update: UserUpdateToOneWithWhereWithoutResellerPaymentsReceivedInput
}

input UserUpsertWithoutResellerPaymentsReceivedInput {
  update: UserUpdateWithoutResellerPaymentsReceivedInput!
  create: UserCreateWithoutResellerPaymentsReceivedInput!
  where: UserWhereInput
}

input UserUpdateWithoutResellerPaymentsReceivedInput {
  id: StringFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  passwordHash: StringFieldUpdateOperationsInput
  tier: NullableEnumUserTierFieldUpdateOperationsInput
  referralCode: NullableStringFieldUpdateOperationsInput
  referredBy: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  isEmailVerified: BoolFieldUpdateOperationsInput
  emailVerificationToken: NullableStringFieldUpdateOperationsInput
  emailVerificationTokenExpiry: NullableDateTimeFieldUpdateOperationsInput
  role: RoleUpdateOneRequiredWithoutUsersNestedInput
  resellerProfile: ResellerProfileUpdateOneWithoutUserNestedInput
  customerProfile: CustomerProfileUpdateOneWithoutUserNestedInput
  resellerPaymentsMade: ResellerPaymentUpdateManyWithoutResellerNestedInput
  adminLogs: AdminActionLogUpdateManyWithoutAdminNestedInput
  supportMessages: SupportMessageUpdateManyWithoutUserNestedInput
  ConsumerSale: ConsumerSaleUpdateManyWithoutBillerNestedInput
  ConsumerSaleAdjustedBys: ConsumerSaleUpdateManyWithoutAdjustedByNestedInput
  StockReceiptBatchReceivedBys: StockReceiptBatchUpdateManyWithoutReceivedByNestedInput
  StockReceiptBatchConfirmedBys: StockReceiptBatchUpdateManyWithoutConfirmedByNestedInput
  StockTransferRequests: StockTransferUpdateManyWithoutRequestedByNestedInput
  StockTransferApprovals: StockTransferUpdateManyWithoutApprovedByNestedInput
  Store: StoreUpdateManyWithoutManagerNestedInput
  ConsumerReceipt: ConsumerReceiptUpdateManyWithoutIssuedByNestedInput
  ResellerSales: ResellerSaleUpdateManyWithoutResellerNestedInput
  BillerResellerSale: ResellerSaleUpdateManyWithoutBillerNestedInput
  ResellerSale: ResellerSaleUpdateManyWithoutApprovedByNestedInput
  SalesReturnReceivers: SalesReturnUpdateManyWithoutReceivedByNestedInput
  SalesReturnRequesters: SalesReturnUpdateManyWithoutReturnedByNestedInput
  SalesReturn: SalesReturnUpdateManyWithoutApprovedByNestedInput
  PurchaseReturnInitiators: PurchaseReturnUpdateManyWithoutInitiatedByNestedInput
  PurchaseReturnApprovers: PurchaseReturnUpdateManyWithoutApprovedByNestedInput
  Payment: PaymentUpdateManyWithoutReceivedByNestedInput
  ResellerTierHistory: ResellerTierHistoryUpdateManyWithoutUserNestedInput
  ResellerTierHistoryChangedBys: ResellerTierHistoryUpdateManyWithoutAdminNestedInput
  ResellerProfile: ResellerProfileUpdateManyWithoutBillerNestedInput
  RequestedResellers: ResellerProfileUpdateManyWithoutRequestedBillerNestedInput
  Notification: NotificationUpdateManyWithoutUserNestedInput
  Fulfillment: FulfillmentUpdateManyWithoutDeliveryPersonnelNestedInput
  BillerQuotation: QuotationUpdateManyWithoutBillerNestedInput
  ResellerQuotation: QuotationUpdateManyWithoutResellerNestedInput
  PurchaseRequisition: PurchaseRequisitionUpdateManyWithoutRequestedByNestedInput
  Supplier: SupplierUpdateManyWithoutUserNestedInput
}

input SalesReturnUpdateManyWithoutReceivedByNestedInput {
  create: [SalesReturnCreateWithoutReceivedByInput!]
  connectOrCreate: [SalesReturnCreateOrConnectWithoutReceivedByInput!]
  upsert: [SalesReturnUpsertWithWhereUniqueWithoutReceivedByInput!]
  createMany: SalesReturnCreateManyReceivedByInputEnvelope
  set: [SalesReturnWhereUniqueInput!]
  disconnect: [SalesReturnWhereUniqueInput!]
  delete: [SalesReturnWhereUniqueInput!]
  connect: [SalesReturnWhereUniqueInput!]
  update: [SalesReturnUpdateWithWhereUniqueWithoutReceivedByInput!]
  updateMany: [SalesReturnUpdateManyWithWhereWithoutReceivedByInput!]
  deleteMany: [SalesReturnScalarWhereInput!]
}

input SalesReturnUpsertWithWhereUniqueWithoutReceivedByInput {
  where: SalesReturnWhereUniqueInput!
  update: SalesReturnUpdateWithoutReceivedByInput!
  create: SalesReturnCreateWithoutReceivedByInput!
}

input SalesReturnUpdateWithoutReceivedByInput {
  id: StringFieldUpdateOperationsInput
  type: EnumSaleTypeFieldUpdateOperationsInput
  status: EnumReturnStatusFieldUpdateOperationsInput
  returnLocation: EnumReturnLocationFieldUpdateOperationsInput
  isApprovedLate: BoolFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  consumerSale: ConsumerSaleUpdateOneWithoutSalesReturnNestedInput
  resellerSale: ResellerSaleUpdateOneWithoutSalesReturnNestedInput
  returnedBy: UserUpdateOneRequiredWithoutSalesReturnRequestersNestedInput
  approvedBy: UserUpdateOneWithoutSalesReturnNestedInput
  store: StoreUpdateOneRequiredWithoutSalesReturnsNestedInput
  items: SalesReturnItemUpdateManyWithoutReturnNestedInput
}

input UserUpdateOneRequiredWithoutSalesReturnRequestersNestedInput {
  create: UserCreateWithoutSalesReturnRequestersInput
  connectOrCreate: UserCreateOrConnectWithoutSalesReturnRequestersInput
  upsert: UserUpsertWithoutSalesReturnRequestersInput
  connect: UserWhereUniqueInput
  update: UserUpdateToOneWithWhereWithoutSalesReturnRequestersInput
}

input UserUpsertWithoutSalesReturnRequestersInput {
  update: UserUpdateWithoutSalesReturnRequestersInput!
  create: UserCreateWithoutSalesReturnRequestersInput!
  where: UserWhereInput
}

input UserUpdateWithoutSalesReturnRequestersInput {
  id: StringFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  passwordHash: StringFieldUpdateOperationsInput
  tier: NullableEnumUserTierFieldUpdateOperationsInput
  referralCode: NullableStringFieldUpdateOperationsInput
  referredBy: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  isEmailVerified: BoolFieldUpdateOperationsInput
  emailVerificationToken: NullableStringFieldUpdateOperationsInput
  emailVerificationTokenExpiry: NullableDateTimeFieldUpdateOperationsInput
  role: RoleUpdateOneRequiredWithoutUsersNestedInput
  resellerProfile: ResellerProfileUpdateOneWithoutUserNestedInput
  customerProfile: CustomerProfileUpdateOneWithoutUserNestedInput
  resellerPaymentsMade: ResellerPaymentUpdateManyWithoutResellerNestedInput
  resellerPaymentsReceived: ResellerPaymentUpdateManyWithoutReceivedByNestedInput
  adminLogs: AdminActionLogUpdateManyWithoutAdminNestedInput
  supportMessages: SupportMessageUpdateManyWithoutUserNestedInput
  ConsumerSale: ConsumerSaleUpdateManyWithoutBillerNestedInput
  ConsumerSaleAdjustedBys: ConsumerSaleUpdateManyWithoutAdjustedByNestedInput
  StockReceiptBatchReceivedBys: StockReceiptBatchUpdateManyWithoutReceivedByNestedInput
  StockReceiptBatchConfirmedBys: StockReceiptBatchUpdateManyWithoutConfirmedByNestedInput
  StockTransferRequests: StockTransferUpdateManyWithoutRequestedByNestedInput
  StockTransferApprovals: StockTransferUpdateManyWithoutApprovedByNestedInput
  Store: StoreUpdateManyWithoutManagerNestedInput
  ConsumerReceipt: ConsumerReceiptUpdateManyWithoutIssuedByNestedInput
  ResellerSales: ResellerSaleUpdateManyWithoutResellerNestedInput
  BillerResellerSale: ResellerSaleUpdateManyWithoutBillerNestedInput
  ResellerSale: ResellerSaleUpdateManyWithoutApprovedByNestedInput
  SalesReturnReceivers: SalesReturnUpdateManyWithoutReceivedByNestedInput
  SalesReturn: SalesReturnUpdateManyWithoutApprovedByNestedInput
  PurchaseReturnInitiators: PurchaseReturnUpdateManyWithoutInitiatedByNestedInput
  PurchaseReturnApprovers: PurchaseReturnUpdateManyWithoutApprovedByNestedInput
  Payment: PaymentUpdateManyWithoutReceivedByNestedInput
  ResellerTierHistory: ResellerTierHistoryUpdateManyWithoutUserNestedInput
  ResellerTierHistoryChangedBys: ResellerTierHistoryUpdateManyWithoutAdminNestedInput
  ResellerProfile: ResellerProfileUpdateManyWithoutBillerNestedInput
  RequestedResellers: ResellerProfileUpdateManyWithoutRequestedBillerNestedInput
  Notification: NotificationUpdateManyWithoutUserNestedInput
  Fulfillment: FulfillmentUpdateManyWithoutDeliveryPersonnelNestedInput
  BillerQuotation: QuotationUpdateManyWithoutBillerNestedInput
  ResellerQuotation: QuotationUpdateManyWithoutResellerNestedInput
  PurchaseRequisition: PurchaseRequisitionUpdateManyWithoutRequestedByNestedInput
  Supplier: SupplierUpdateManyWithoutUserNestedInput
}

input SalesReturnUpdateManyWithoutApprovedByNestedInput {
  create: [SalesReturnCreateWithoutApprovedByInput!]
  connectOrCreate: [SalesReturnCreateOrConnectWithoutApprovedByInput!]
  upsert: [SalesReturnUpsertWithWhereUniqueWithoutApprovedByInput!]
  createMany: SalesReturnCreateManyApprovedByInputEnvelope
  set: [SalesReturnWhereUniqueInput!]
  disconnect: [SalesReturnWhereUniqueInput!]
  delete: [SalesReturnWhereUniqueInput!]
  connect: [SalesReturnWhereUniqueInput!]
  update: [SalesReturnUpdateWithWhereUniqueWithoutApprovedByInput!]
  updateMany: [SalesReturnUpdateManyWithWhereWithoutApprovedByInput!]
  deleteMany: [SalesReturnScalarWhereInput!]
}

input SalesReturnUpsertWithWhereUniqueWithoutApprovedByInput {
  where: SalesReturnWhereUniqueInput!
  update: SalesReturnUpdateWithoutApprovedByInput!
  create: SalesReturnCreateWithoutApprovedByInput!
}

input SalesReturnUpdateWithoutApprovedByInput {
  id: StringFieldUpdateOperationsInput
  type: EnumSaleTypeFieldUpdateOperationsInput
  status: EnumReturnStatusFieldUpdateOperationsInput
  returnLocation: EnumReturnLocationFieldUpdateOperationsInput
  isApprovedLate: BoolFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  consumerSale: ConsumerSaleUpdateOneWithoutSalesReturnNestedInput
  resellerSale: ResellerSaleUpdateOneWithoutSalesReturnNestedInput
  returnedBy: UserUpdateOneRequiredWithoutSalesReturnRequestersNestedInput
  receivedBy: UserUpdateOneRequiredWithoutSalesReturnReceiversNestedInput
  store: StoreUpdateOneRequiredWithoutSalesReturnsNestedInput
  items: SalesReturnItemUpdateManyWithoutReturnNestedInput
}

input UserUpdateOneRequiredWithoutSalesReturnReceiversNestedInput {
  create: UserCreateWithoutSalesReturnReceiversInput
  connectOrCreate: UserCreateOrConnectWithoutSalesReturnReceiversInput
  upsert: UserUpsertWithoutSalesReturnReceiversInput
  connect: UserWhereUniqueInput
  update: UserUpdateToOneWithWhereWithoutSalesReturnReceiversInput
}

input UserUpsertWithoutSalesReturnReceiversInput {
  update: UserUpdateWithoutSalesReturnReceiversInput!
  create: UserCreateWithoutSalesReturnReceiversInput!
  where: UserWhereInput
}

input UserUpdateWithoutSalesReturnReceiversInput {
  id: StringFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  passwordHash: StringFieldUpdateOperationsInput
  tier: NullableEnumUserTierFieldUpdateOperationsInput
  referralCode: NullableStringFieldUpdateOperationsInput
  referredBy: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  isEmailVerified: BoolFieldUpdateOperationsInput
  emailVerificationToken: NullableStringFieldUpdateOperationsInput
  emailVerificationTokenExpiry: NullableDateTimeFieldUpdateOperationsInput
  role: RoleUpdateOneRequiredWithoutUsersNestedInput
  resellerProfile: ResellerProfileUpdateOneWithoutUserNestedInput
  customerProfile: CustomerProfileUpdateOneWithoutUserNestedInput
  resellerPaymentsMade: ResellerPaymentUpdateManyWithoutResellerNestedInput
  resellerPaymentsReceived: ResellerPaymentUpdateManyWithoutReceivedByNestedInput
  adminLogs: AdminActionLogUpdateManyWithoutAdminNestedInput
  supportMessages: SupportMessageUpdateManyWithoutUserNestedInput
  ConsumerSale: ConsumerSaleUpdateManyWithoutBillerNestedInput
  ConsumerSaleAdjustedBys: ConsumerSaleUpdateManyWithoutAdjustedByNestedInput
  StockReceiptBatchReceivedBys: StockReceiptBatchUpdateManyWithoutReceivedByNestedInput
  StockReceiptBatchConfirmedBys: StockReceiptBatchUpdateManyWithoutConfirmedByNestedInput
  StockTransferRequests: StockTransferUpdateManyWithoutRequestedByNestedInput
  StockTransferApprovals: StockTransferUpdateManyWithoutApprovedByNestedInput
  Store: StoreUpdateManyWithoutManagerNestedInput
  ConsumerReceipt: ConsumerReceiptUpdateManyWithoutIssuedByNestedInput
  ResellerSales: ResellerSaleUpdateManyWithoutResellerNestedInput
  BillerResellerSale: ResellerSaleUpdateManyWithoutBillerNestedInput
  ResellerSale: ResellerSaleUpdateManyWithoutApprovedByNestedInput
  SalesReturnRequesters: SalesReturnUpdateManyWithoutReturnedByNestedInput
  SalesReturn: SalesReturnUpdateManyWithoutApprovedByNestedInput
  PurchaseReturnInitiators: PurchaseReturnUpdateManyWithoutInitiatedByNestedInput
  PurchaseReturnApprovers: PurchaseReturnUpdateManyWithoutApprovedByNestedInput
  Payment: PaymentUpdateManyWithoutReceivedByNestedInput
  ResellerTierHistory: ResellerTierHistoryUpdateManyWithoutUserNestedInput
  ResellerTierHistoryChangedBys: ResellerTierHistoryUpdateManyWithoutAdminNestedInput
  ResellerProfile: ResellerProfileUpdateManyWithoutBillerNestedInput
  RequestedResellers: ResellerProfileUpdateManyWithoutRequestedBillerNestedInput
  Notification: NotificationUpdateManyWithoutUserNestedInput
  Fulfillment: FulfillmentUpdateManyWithoutDeliveryPersonnelNestedInput
  BillerQuotation: QuotationUpdateManyWithoutBillerNestedInput
  ResellerQuotation: QuotationUpdateManyWithoutResellerNestedInput
  PurchaseRequisition: PurchaseRequisitionUpdateManyWithoutRequestedByNestedInput
  Supplier: SupplierUpdateManyWithoutUserNestedInput
}

input SalesReturnUpdateManyWithoutReturnedByNestedInput {
  create: [SalesReturnCreateWithoutReturnedByInput!]
  connectOrCreate: [SalesReturnCreateOrConnectWithoutReturnedByInput!]
  upsert: [SalesReturnUpsertWithWhereUniqueWithoutReturnedByInput!]
  createMany: SalesReturnCreateManyReturnedByInputEnvelope
  set: [SalesReturnWhereUniqueInput!]
  disconnect: [SalesReturnWhereUniqueInput!]
  delete: [SalesReturnWhereUniqueInput!]
  connect: [SalesReturnWhereUniqueInput!]
  update: [SalesReturnUpdateWithWhereUniqueWithoutReturnedByInput!]
  updateMany: [SalesReturnUpdateManyWithWhereWithoutReturnedByInput!]
  deleteMany: [SalesReturnScalarWhereInput!]
}

input SalesReturnUpsertWithWhereUniqueWithoutReturnedByInput {
  where: SalesReturnWhereUniqueInput!
  update: SalesReturnUpdateWithoutReturnedByInput!
  create: SalesReturnCreateWithoutReturnedByInput!
}

input SalesReturnUpdateWithoutReturnedByInput {
  id: StringFieldUpdateOperationsInput
  type: EnumSaleTypeFieldUpdateOperationsInput
  status: EnumReturnStatusFieldUpdateOperationsInput
  returnLocation: EnumReturnLocationFieldUpdateOperationsInput
  isApprovedLate: BoolFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  consumerSale: ConsumerSaleUpdateOneWithoutSalesReturnNestedInput
  resellerSale: ResellerSaleUpdateOneWithoutSalesReturnNestedInput
  receivedBy: UserUpdateOneRequiredWithoutSalesReturnReceiversNestedInput
  approvedBy: UserUpdateOneWithoutSalesReturnNestedInput
  store: StoreUpdateOneRequiredWithoutSalesReturnsNestedInput
  items: SalesReturnItemUpdateManyWithoutReturnNestedInput
}

input UserUpdateOneWithoutSalesReturnNestedInput {
  create: UserCreateWithoutSalesReturnInput
  connectOrCreate: UserCreateOrConnectWithoutSalesReturnInput
  upsert: UserUpsertWithoutSalesReturnInput
  disconnect: UserWhereInput
  delete: UserWhereInput
  connect: UserWhereUniqueInput
  update: UserUpdateToOneWithWhereWithoutSalesReturnInput
}

input UserUpsertWithoutSalesReturnInput {
  update: UserUpdateWithoutSalesReturnInput!
  create: UserCreateWithoutSalesReturnInput!
  where: UserWhereInput
}

input UserUpdateWithoutSalesReturnInput {
  id: StringFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  passwordHash: StringFieldUpdateOperationsInput
  tier: NullableEnumUserTierFieldUpdateOperationsInput
  referralCode: NullableStringFieldUpdateOperationsInput
  referredBy: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  isEmailVerified: BoolFieldUpdateOperationsInput
  emailVerificationToken: NullableStringFieldUpdateOperationsInput
  emailVerificationTokenExpiry: NullableDateTimeFieldUpdateOperationsInput
  role: RoleUpdateOneRequiredWithoutUsersNestedInput
  resellerProfile: ResellerProfileUpdateOneWithoutUserNestedInput
  customerProfile: CustomerProfileUpdateOneWithoutUserNestedInput
  resellerPaymentsMade: ResellerPaymentUpdateManyWithoutResellerNestedInput
  resellerPaymentsReceived: ResellerPaymentUpdateManyWithoutReceivedByNestedInput
  adminLogs: AdminActionLogUpdateManyWithoutAdminNestedInput
  supportMessages: SupportMessageUpdateManyWithoutUserNestedInput
  ConsumerSale: ConsumerSaleUpdateManyWithoutBillerNestedInput
  ConsumerSaleAdjustedBys: ConsumerSaleUpdateManyWithoutAdjustedByNestedInput
  StockReceiptBatchReceivedBys: StockReceiptBatchUpdateManyWithoutReceivedByNestedInput
  StockReceiptBatchConfirmedBys: StockReceiptBatchUpdateManyWithoutConfirmedByNestedInput
  StockTransferRequests: StockTransferUpdateManyWithoutRequestedByNestedInput
  StockTransferApprovals: StockTransferUpdateManyWithoutApprovedByNestedInput
  Store: StoreUpdateManyWithoutManagerNestedInput
  ConsumerReceipt: ConsumerReceiptUpdateManyWithoutIssuedByNestedInput
  ResellerSales: ResellerSaleUpdateManyWithoutResellerNestedInput
  BillerResellerSale: ResellerSaleUpdateManyWithoutBillerNestedInput
  ResellerSale: ResellerSaleUpdateManyWithoutApprovedByNestedInput
  SalesReturnReceivers: SalesReturnUpdateManyWithoutReceivedByNestedInput
  SalesReturnRequesters: SalesReturnUpdateManyWithoutReturnedByNestedInput
  PurchaseReturnInitiators: PurchaseReturnUpdateManyWithoutInitiatedByNestedInput
  PurchaseReturnApprovers: PurchaseReturnUpdateManyWithoutApprovedByNestedInput
  Payment: PaymentUpdateManyWithoutReceivedByNestedInput
  ResellerTierHistory: ResellerTierHistoryUpdateManyWithoutUserNestedInput
  ResellerTierHistoryChangedBys: ResellerTierHistoryUpdateManyWithoutAdminNestedInput
  ResellerProfile: ResellerProfileUpdateManyWithoutBillerNestedInput
  RequestedResellers: ResellerProfileUpdateManyWithoutRequestedBillerNestedInput
  Notification: NotificationUpdateManyWithoutUserNestedInput
  Fulfillment: FulfillmentUpdateManyWithoutDeliveryPersonnelNestedInput
  BillerQuotation: QuotationUpdateManyWithoutBillerNestedInput
  ResellerQuotation: QuotationUpdateManyWithoutResellerNestedInput
  PurchaseRequisition: PurchaseRequisitionUpdateManyWithoutRequestedByNestedInput
  Supplier: SupplierUpdateManyWithoutUserNestedInput
}

input PurchaseReturnUpdateManyWithoutInitiatedByNestedInput {
  create: [PurchaseReturnCreateWithoutInitiatedByInput!]
  connectOrCreate: [PurchaseReturnCreateOrConnectWithoutInitiatedByInput!]
  upsert: [PurchaseReturnUpsertWithWhereUniqueWithoutInitiatedByInput!]
  createMany: PurchaseReturnCreateManyInitiatedByInputEnvelope
  set: [PurchaseReturnWhereUniqueInput!]
  disconnect: [PurchaseReturnWhereUniqueInput!]
  delete: [PurchaseReturnWhereUniqueInput!]
  connect: [PurchaseReturnWhereUniqueInput!]
  update: [PurchaseReturnUpdateWithWhereUniqueWithoutInitiatedByInput!]
  updateMany: [PurchaseReturnUpdateManyWithWhereWithoutInitiatedByInput!]
  deleteMany: [PurchaseReturnScalarWhereInput!]
}

input PurchaseReturnUpsertWithWhereUniqueWithoutInitiatedByInput {
  where: PurchaseReturnWhereUniqueInput!
  update: PurchaseReturnUpdateWithoutInitiatedByInput!
  create: PurchaseReturnCreateWithoutInitiatedByInput!
}

input PurchaseReturnUpdateWithoutInitiatedByInput {
  id: StringFieldUpdateOperationsInput
  status: EnumReturnStatusFieldUpdateOperationsInput
  reason: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  supplier: SupplierUpdateOneRequiredWithoutReturnsNestedInput
  approvedBy: UserUpdateOneRequiredWithoutPurchaseReturnApproversNestedInput
  items: PurchaseReturnItemUpdateManyWithoutReturnNestedInput
}

input SupplierUpdateOneRequiredWithoutReturnsNestedInput {
  create: SupplierCreateWithoutReturnsInput
  connectOrCreate: SupplierCreateOrConnectWithoutReturnsInput
  upsert: SupplierUpsertWithoutReturnsInput
  connect: SupplierWhereUniqueInput
  update: SupplierUpdateToOneWithWhereWithoutReturnsInput
}

input SupplierUpsertWithoutReturnsInput {
  update: SupplierUpdateWithoutReturnsInput!
  create: SupplierCreateWithoutReturnsInput!
  where: SupplierWhereInput
}

input SupplierUpdateWithoutReturnsInput {
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  contactInfo: JSON
  isFrequent: BoolFieldUpdateOperationsInput
  creditLimit: FloatFieldUpdateOperationsInput
  currentBalance: FloatFieldUpdateOperationsInput
  paymentTerms: NullableStringFieldUpdateOperationsInput
  notes: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  purchaseOrders: PurchaseOrderUpdateManyWithoutSupplierNestedInput
  payments: SupplierPaymentUpdateManyWithoutSupplierNestedInput
  catalogs: SupplierCatalogUpdateManyWithoutSupplierNestedInput
  quotes: SupplierQuoteUpdateManyWithoutSupplierNestedInput
  user: UserUpdateOneWithoutSupplierNestedInput
}

input PurchaseOrderUpdateManyWithoutSupplierNestedInput {
  create: [PurchaseOrderCreateWithoutSupplierInput!]
  connectOrCreate: [PurchaseOrderCreateOrConnectWithoutSupplierInput!]
  upsert: [PurchaseOrderUpsertWithWhereUniqueWithoutSupplierInput!]
  createMany: PurchaseOrderCreateManySupplierInputEnvelope
  set: [PurchaseOrderWhereUniqueInput!]
  disconnect: [PurchaseOrderWhereUniqueInput!]
  delete: [PurchaseOrderWhereUniqueInput!]
  connect: [PurchaseOrderWhereUniqueInput!]
  update: [PurchaseOrderUpdateWithWhereUniqueWithoutSupplierInput!]
  updateMany: [PurchaseOrderUpdateManyWithWhereWithoutSupplierInput!]
  deleteMany: [PurchaseOrderScalarWhereInput!]
}

input PurchaseOrderUpsertWithWhereUniqueWithoutSupplierInput {
  where: PurchaseOrderWhereUniqueInput!
  update: PurchaseOrderUpdateWithoutSupplierInput!
  create: PurchaseOrderCreateWithoutSupplierInput!
}

input PurchaseOrderUpdateWithoutSupplierInput {
  id: StringFieldUpdateOperationsInput
  invoiceNumber: StringFieldUpdateOperationsInput
  status: EnumPurchaseOrderStatusFieldUpdateOperationsInput
  phase: EnumPurchasePhaseFieldUpdateOperationsInput
  dueDate: DateTimeFieldUpdateOperationsInput
  totalAmount: FloatFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  store: StoreUpdateOneWithoutPurchaseOrdersNestedInput
  items: PurchaseOrderItemUpdateManyWithoutPurchaseOrderNestedInput
  receipts: StockReceiptBatchUpdateManyWithoutPurchaseOrderNestedInput
  payments: SupplierPaymentUpdateManyWithoutPurchaseOrderNestedInput
}

input EnumPurchaseOrderStatusFieldUpdateOperationsInput {
  set: PurchaseOrderStatus
}

input EnumPurchasePhaseFieldUpdateOperationsInput {
  set: PurchasePhase
}

input StoreUpdateOneWithoutPurchaseOrdersNestedInput {
  create: StoreCreateWithoutPurchaseOrdersInput
  connectOrCreate: StoreCreateOrConnectWithoutPurchaseOrdersInput
  upsert: StoreUpsertWithoutPurchaseOrdersInput
  disconnect: StoreWhereInput
  delete: StoreWhereInput
  connect: StoreWhereUniqueInput
  update: StoreUpdateToOneWithWhereWithoutPurchaseOrdersInput
}

input StoreUpsertWithoutPurchaseOrdersInput {
  update: StoreUpdateWithoutPurchaseOrdersInput!
  create: StoreCreateWithoutPurchaseOrdersInput!
  where: StoreWhereInput
}

input StoreUpdateWithoutPurchaseOrdersInput {
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  location: NullableStringFieldUpdateOperationsInput
  isMain: BoolFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  manager: UserUpdateOneRequiredWithoutStoreNestedInput
  stocks: StockUpdateManyWithoutStoreNestedInput
  receipts: StockReceiptBatchUpdateManyWithoutStoreNestedInput
  transfersOut: StockTransferUpdateManyWithoutFromStoreNestedInput
  transfersIn: StockTransferUpdateManyWithoutToStoreNestedInput
  customerSales: ConsumerSaleUpdateManyWithoutStoreNestedInput
  salesReturns: SalesReturnUpdateManyWithoutStoreNestedInput
  resellerSales: ResellerSaleUpdateManyWithoutStoreNestedInput
  movements: StockMovementUpdateManyWithoutStoreNestedInput
  Customer: CustomerUpdateManyWithoutPreferredStoreNestedInput
  CustomerProfile: CustomerProfileUpdateManyWithoutPreferredStoreNestedInput
  Quotation: QuotationUpdateManyWithoutStoreNestedInput
  PurchaseRequisition: PurchaseRequisitionUpdateManyWithoutStoreNestedInput
  InvoiceImport: InvoiceImportUpdateManyWithoutStoreNestedInput
}

input CustomerProfileUpdateManyWithoutPreferredStoreNestedInput {
  create: [CustomerProfileCreateWithoutPreferredStoreInput!]
  connectOrCreate: [CustomerProfileCreateOrConnectWithoutPreferredStoreInput!]
  upsert: [CustomerProfileUpsertWithWhereUniqueWithoutPreferredStoreInput!]
  createMany: CustomerProfileCreateManyPreferredStoreInputEnvelope
  set: [CustomerProfileWhereUniqueInput!]
  disconnect: [CustomerProfileWhereUniqueInput!]
  delete: [CustomerProfileWhereUniqueInput!]
  connect: [CustomerProfileWhereUniqueInput!]
  update: [CustomerProfileUpdateWithWhereUniqueWithoutPreferredStoreInput!]
  updateMany: [CustomerProfileUpdateManyWithWhereWithoutPreferredStoreInput!]
  deleteMany: [CustomerProfileScalarWhereInput!]
}

input CustomerProfileUpsertWithWhereUniqueWithoutPreferredStoreInput {
  where: CustomerProfileWhereUniqueInput!
  update: CustomerProfileUpdateWithoutPreferredStoreInput!
  create: CustomerProfileCreateWithoutPreferredStoreInput!
}

input CustomerProfileUpdateWithoutPreferredStoreInput {
  fullName: StringFieldUpdateOperationsInput
  phone: NullableStringFieldUpdateOperationsInput
  email: NullableStringFieldUpdateOperationsInput
  gender: NullableStringFieldUpdateOperationsInput
  birthday: NullableDateTimeFieldUpdateOperationsInput
  profileStatus: EnumProfileStatusFieldUpdateOperationsInput
  requestedAt: DateTimeFieldUpdateOperationsInput
  activatedAt: NullableDateTimeFieldUpdateOperationsInput
  isPhoneVerified: BoolFieldUpdateOperationsInput
  phoneVerificationCode: NullableStringFieldUpdateOperationsInput
  phoneVerificationCodeExpiry: NullableDateTimeFieldUpdateOperationsInput
  user: UserUpdateOneRequiredWithoutCustomerProfileNestedInput
  referredBy: CustomerProfileUpdateOneWithoutReferralsNestedInput
  referrals: CustomerProfileUpdateManyWithoutReferredByNestedInput
  sales: ConsumerSaleUpdateManyWithoutCustomerProfileNestedInput
  preferences: CustomerPreferenceProfileUpdateOneWithoutCustomerProfileNestedInput
}

input CustomerProfileUpdateOneWithoutReferralsNestedInput {
  create: CustomerProfileCreateWithoutReferralsInput
  connectOrCreate: CustomerProfileCreateOrConnectWithoutReferralsInput
  upsert: CustomerProfileUpsertWithoutReferralsInput
  disconnect: CustomerProfileWhereInput
  delete: CustomerProfileWhereInput
  connect: CustomerProfileWhereUniqueInput
  update: CustomerProfileUpdateToOneWithWhereWithoutReferralsInput
}

input CustomerProfileUpsertWithoutReferralsInput {
  update: CustomerProfileUpdateWithoutReferralsInput!
  create: CustomerProfileCreateWithoutReferralsInput!
  where: CustomerProfileWhereInput
}

input CustomerProfileUpdateWithoutReferralsInput {
  fullName: StringFieldUpdateOperationsInput
  phone: NullableStringFieldUpdateOperationsInput
  email: NullableStringFieldUpdateOperationsInput
  gender: NullableStringFieldUpdateOperationsInput
  birthday: NullableDateTimeFieldUpdateOperationsInput
  profileStatus: EnumProfileStatusFieldUpdateOperationsInput
  requestedAt: DateTimeFieldUpdateOperationsInput
  activatedAt: NullableDateTimeFieldUpdateOperationsInput
  isPhoneVerified: BoolFieldUpdateOperationsInput
  phoneVerificationCode: NullableStringFieldUpdateOperationsInput
  phoneVerificationCodeExpiry: NullableDateTimeFieldUpdateOperationsInput
  user: UserUpdateOneRequiredWithoutCustomerProfileNestedInput
  preferredStore: StoreUpdateOneWithoutCustomerProfileNestedInput
  referredBy: CustomerProfileUpdateOneWithoutReferralsNestedInput
  sales: ConsumerSaleUpdateManyWithoutCustomerProfileNestedInput
  preferences: CustomerPreferenceProfileUpdateOneWithoutCustomerProfileNestedInput
}

input ConsumerSaleUpdateManyWithoutCustomerProfileNestedInput {
  create: [ConsumerSaleCreateWithoutCustomerProfileInput!]
  connectOrCreate: [ConsumerSaleCreateOrConnectWithoutCustomerProfileInput!]
  upsert: [ConsumerSaleUpsertWithWhereUniqueWithoutCustomerProfileInput!]
  set: [ConsumerSaleWhereUniqueInput!]
  disconnect: [ConsumerSaleWhereUniqueInput!]
  delete: [ConsumerSaleWhereUniqueInput!]
  connect: [ConsumerSaleWhereUniqueInput!]
  update: [ConsumerSaleUpdateWithWhereUniqueWithoutCustomerProfileInput!]
  updateMany: [ConsumerSaleUpdateManyWithWhereWithoutCustomerProfileInput!]
  deleteMany: [ConsumerSaleScalarWhereInput!]
}

input ConsumerSaleUpsertWithWhereUniqueWithoutCustomerProfileInput {
  where: ConsumerSaleWhereUniqueInput!
  update: ConsumerSaleUpdateWithoutCustomerProfileInput!
  create: ConsumerSaleCreateWithoutCustomerProfileInput!
}

input ConsumerSaleUpdateWithoutCustomerProfileInput {
  id: StringFieldUpdateOperationsInput
  channel: EnumSaleChannelFieldUpdateOperationsInput
  status: EnumSaleStatusFieldUpdateOperationsInput
  totalAmount: FloatFieldUpdateOperationsInput
  adjustmentType: NullableEnumAdjustmentTypeFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  customer: CustomerUpdateOneWithoutSalesNestedInput
  store: StoreUpdateOneRequiredWithoutCustomerSalesNestedInput
  biller: UserUpdateOneRequiredWithoutConsumerSaleNestedInput
  adjustedBy: UserUpdateOneWithoutConsumerSaleAdjustedBysNestedInput
  quotation: QuotationUpdateOneWithoutConsumerSaleNestedInput
  items: ConsumerSaleItemUpdateManyWithoutSaleNestedInput
  payments: ConsumerPaymentUpdateManyWithoutSaleNestedInput
  receipt: ConsumerReceiptUpdateOneWithoutSaleNestedInput
  SalesReturn: SalesReturnUpdateManyWithoutConsumerSaleNestedInput
  SaleOrder: SaleOrderUpdateOneRequiredWithoutConsumerSaleNestedInput
}

input SalesReturnUpdateManyWithoutConsumerSaleNestedInput {
  create: [SalesReturnCreateWithoutConsumerSaleInput!]
  connectOrCreate: [SalesReturnCreateOrConnectWithoutConsumerSaleInput!]
  upsert: [SalesReturnUpsertWithWhereUniqueWithoutConsumerSaleInput!]
  createMany: SalesReturnCreateManyConsumerSaleInputEnvelope
  set: [SalesReturnWhereUniqueInput!]
  disconnect: [SalesReturnWhereUniqueInput!]
  delete: [SalesReturnWhereUniqueInput!]
  connect: [SalesReturnWhereUniqueInput!]
  update: [SalesReturnUpdateWithWhereUniqueWithoutConsumerSaleInput!]
  updateMany: [SalesReturnUpdateManyWithWhereWithoutConsumerSaleInput!]
  deleteMany: [SalesReturnScalarWhereInput!]
}

input SalesReturnUpsertWithWhereUniqueWithoutConsumerSaleInput {
  where: SalesReturnWhereUniqueInput!
  update: SalesReturnUpdateWithoutConsumerSaleInput!
  create: SalesReturnCreateWithoutConsumerSaleInput!
}

input SalesReturnUpdateWithoutConsumerSaleInput {
  id: StringFieldUpdateOperationsInput
  type: EnumSaleTypeFieldUpdateOperationsInput
  status: EnumReturnStatusFieldUpdateOperationsInput
  returnLocation: EnumReturnLocationFieldUpdateOperationsInput
  isApprovedLate: BoolFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  resellerSale: ResellerSaleUpdateOneWithoutSalesReturnNestedInput
  returnedBy: UserUpdateOneRequiredWithoutSalesReturnRequestersNestedInput
  receivedBy: UserUpdateOneRequiredWithoutSalesReturnReceiversNestedInput
  approvedBy: UserUpdateOneWithoutSalesReturnNestedInput
  store: StoreUpdateOneRequiredWithoutSalesReturnsNestedInput
  items: SalesReturnItemUpdateManyWithoutReturnNestedInput
}

input StoreUpdateOneRequiredWithoutSalesReturnsNestedInput {
  create: StoreCreateWithoutSalesReturnsInput
  connectOrCreate: StoreCreateOrConnectWithoutSalesReturnsInput
  upsert: StoreUpsertWithoutSalesReturnsInput
  connect: StoreWhereUniqueInput
  update: StoreUpdateToOneWithWhereWithoutSalesReturnsInput
}

input StoreUpsertWithoutSalesReturnsInput {
  update: StoreUpdateWithoutSalesReturnsInput!
  create: StoreCreateWithoutSalesReturnsInput!
  where: StoreWhereInput
}

input StoreUpdateWithoutSalesReturnsInput {
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  location: NullableStringFieldUpdateOperationsInput
  isMain: BoolFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  manager: UserUpdateOneRequiredWithoutStoreNestedInput
  stocks: StockUpdateManyWithoutStoreNestedInput
  receipts: StockReceiptBatchUpdateManyWithoutStoreNestedInput
  transfersOut: StockTransferUpdateManyWithoutFromStoreNestedInput
  transfersIn: StockTransferUpdateManyWithoutToStoreNestedInput
  customerSales: ConsumerSaleUpdateManyWithoutStoreNestedInput
  resellerSales: ResellerSaleUpdateManyWithoutStoreNestedInput
  movements: StockMovementUpdateManyWithoutStoreNestedInput
  Customer: CustomerUpdateManyWithoutPreferredStoreNestedInput
  CustomerProfile: CustomerProfileUpdateManyWithoutPreferredStoreNestedInput
  Quotation: QuotationUpdateManyWithoutStoreNestedInput
  PurchaseRequisition: PurchaseRequisitionUpdateManyWithoutStoreNestedInput
  purchaseOrders: PurchaseOrderUpdateManyWithoutStoreNestedInput
  InvoiceImport: InvoiceImportUpdateManyWithoutStoreNestedInput
}

input QuotationUpdateManyWithoutStoreNestedInput {
  create: [QuotationCreateWithoutStoreInput!]
  connectOrCreate: [QuotationCreateOrConnectWithoutStoreInput!]
  upsert: [QuotationUpsertWithWhereUniqueWithoutStoreInput!]
  createMany: QuotationCreateManyStoreInputEnvelope
  set: [QuotationWhereUniqueInput!]
  disconnect: [QuotationWhereUniqueInput!]
  delete: [QuotationWhereUniqueInput!]
  connect: [QuotationWhereUniqueInput!]
  update: [QuotationUpdateWithWhereUniqueWithoutStoreInput!]
  updateMany: [QuotationUpdateManyWithWhereWithoutStoreInput!]
  deleteMany: [QuotationScalarWhereInput!]
}

input QuotationUpsertWithWhereUniqueWithoutStoreInput {
  where: QuotationWhereUniqueInput!
  update: QuotationUpdateWithoutStoreInput!
  create: QuotationCreateWithoutStoreInput!
}

input QuotationUpdateWithoutStoreInput {
  id: StringFieldUpdateOperationsInput
  type: EnumSaleTypeFieldUpdateOperationsInput
  channel: EnumSaleChannelFieldUpdateOperationsInput
  status: EnumQuotationStatusFieldUpdateOperationsInput
  totalAmount: FloatFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  biller: UserUpdateOneWithoutBillerQuotationNestedInput
  consumer: CustomerUpdateOneWithoutQuotationNestedInput
  reseller: UserUpdateOneWithoutResellerQuotationNestedInput
  items: QuotationItemUpdateManyWithoutQuotationNestedInput
  sale: ResellerSaleUpdateOneWithoutQuotationNestedInput
  SaleOrder: SaleOrderUpdateOneWithoutQuotationNestedInput
  ConsumerSale: ConsumerSaleUpdateManyWithoutQuotationNestedInput
}

input UserUpdateOneWithoutResellerQuotationNestedInput {
  create: UserCreateWithoutResellerQuotationInput
  connectOrCreate: UserCreateOrConnectWithoutResellerQuotationInput
  upsert: UserUpsertWithoutResellerQuotationInput
  disconnect: UserWhereInput
  delete: UserWhereInput
  connect: UserWhereUniqueInput
  update: UserUpdateToOneWithWhereWithoutResellerQuotationInput
}

input UserUpsertWithoutResellerQuotationInput {
  update: UserUpdateWithoutResellerQuotationInput!
  create: UserCreateWithoutResellerQuotationInput!
  where: UserWhereInput
}

input UserUpdateWithoutResellerQuotationInput {
  id: StringFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  passwordHash: StringFieldUpdateOperationsInput
  tier: NullableEnumUserTierFieldUpdateOperationsInput
  referralCode: NullableStringFieldUpdateOperationsInput
  referredBy: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  isEmailVerified: BoolFieldUpdateOperationsInput
  emailVerificationToken: NullableStringFieldUpdateOperationsInput
  emailVerificationTokenExpiry: NullableDateTimeFieldUpdateOperationsInput
  role: RoleUpdateOneRequiredWithoutUsersNestedInput
  resellerProfile: ResellerProfileUpdateOneWithoutUserNestedInput
  customerProfile: CustomerProfileUpdateOneWithoutUserNestedInput
  resellerPaymentsMade: ResellerPaymentUpdateManyWithoutResellerNestedInput
  resellerPaymentsReceived: ResellerPaymentUpdateManyWithoutReceivedByNestedInput
  adminLogs: AdminActionLogUpdateManyWithoutAdminNestedInput
  supportMessages: SupportMessageUpdateManyWithoutUserNestedInput
  ConsumerSale: ConsumerSaleUpdateManyWithoutBillerNestedInput
  ConsumerSaleAdjustedBys: ConsumerSaleUpdateManyWithoutAdjustedByNestedInput
  StockReceiptBatchReceivedBys: StockReceiptBatchUpdateManyWithoutReceivedByNestedInput
  StockReceiptBatchConfirmedBys: StockReceiptBatchUpdateManyWithoutConfirmedByNestedInput
  StockTransferRequests: StockTransferUpdateManyWithoutRequestedByNestedInput
  StockTransferApprovals: StockTransferUpdateManyWithoutApprovedByNestedInput
  Store: StoreUpdateManyWithoutManagerNestedInput
  ConsumerReceipt: ConsumerReceiptUpdateManyWithoutIssuedByNestedInput
  ResellerSales: ResellerSaleUpdateManyWithoutResellerNestedInput
  BillerResellerSale: ResellerSaleUpdateManyWithoutBillerNestedInput
  ResellerSale: ResellerSaleUpdateManyWithoutApprovedByNestedInput
  SalesReturnReceivers: SalesReturnUpdateManyWithoutReceivedByNestedInput
  SalesReturnRequesters: SalesReturnUpdateManyWithoutReturnedByNestedInput
  SalesReturn: SalesReturnUpdateManyWithoutApprovedByNestedInput
  PurchaseReturnInitiators: PurchaseReturnUpdateManyWithoutInitiatedByNestedInput
  PurchaseReturnApprovers: PurchaseReturnUpdateManyWithoutApprovedByNestedInput
  Payment: PaymentUpdateManyWithoutReceivedByNestedInput
  ResellerTierHistory: ResellerTierHistoryUpdateManyWithoutUserNestedInput
  ResellerTierHistoryChangedBys: ResellerTierHistoryUpdateManyWithoutAdminNestedInput
  ResellerProfile: ResellerProfileUpdateManyWithoutBillerNestedInput
  RequestedResellers: ResellerProfileUpdateManyWithoutRequestedBillerNestedInput
  Notification: NotificationUpdateManyWithoutUserNestedInput
  Fulfillment: FulfillmentUpdateManyWithoutDeliveryPersonnelNestedInput
  BillerQuotation: QuotationUpdateManyWithoutBillerNestedInput
  PurchaseRequisition: PurchaseRequisitionUpdateManyWithoutRequestedByNestedInput
  Supplier: SupplierUpdateManyWithoutUserNestedInput
}

input PurchaseReturnUpdateManyWithoutApprovedByNestedInput {
  create: [PurchaseReturnCreateWithoutApprovedByInput!]
  connectOrCreate: [PurchaseReturnCreateOrConnectWithoutApprovedByInput!]
  upsert: [PurchaseReturnUpsertWithWhereUniqueWithoutApprovedByInput!]
  createMany: PurchaseReturnCreateManyApprovedByInputEnvelope
  set: [PurchaseReturnWhereUniqueInput!]
  disconnect: [PurchaseReturnWhereUniqueInput!]
  delete: [PurchaseReturnWhereUniqueInput!]
  connect: [PurchaseReturnWhereUniqueInput!]
  update: [PurchaseReturnUpdateWithWhereUniqueWithoutApprovedByInput!]
  updateMany: [PurchaseReturnUpdateManyWithWhereWithoutApprovedByInput!]
  deleteMany: [PurchaseReturnScalarWhereInput!]
}

input PurchaseReturnUpsertWithWhereUniqueWithoutApprovedByInput {
  where: PurchaseReturnWhereUniqueInput!
  update: PurchaseReturnUpdateWithoutApprovedByInput!
  create: PurchaseReturnCreateWithoutApprovedByInput!
}

input PurchaseReturnUpdateWithoutApprovedByInput {
  id: StringFieldUpdateOperationsInput
  status: EnumReturnStatusFieldUpdateOperationsInput
  reason: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  supplier: SupplierUpdateOneRequiredWithoutReturnsNestedInput
  initiatedBy: UserUpdateOneRequiredWithoutPurchaseReturnInitiatorsNestedInput
  items: PurchaseReturnItemUpdateManyWithoutReturnNestedInput
}

input UserUpdateOneRequiredWithoutPurchaseReturnInitiatorsNestedInput {
  create: UserCreateWithoutPurchaseReturnInitiatorsInput
  connectOrCreate: UserCreateOrConnectWithoutPurchaseReturnInitiatorsInput
  upsert: UserUpsertWithoutPurchaseReturnInitiatorsInput
  connect: UserWhereUniqueInput
  update: UserUpdateToOneWithWhereWithoutPurchaseReturnInitiatorsInput
}

input UserUpsertWithoutPurchaseReturnInitiatorsInput {
  update: UserUpdateWithoutPurchaseReturnInitiatorsInput!
  create: UserCreateWithoutPurchaseReturnInitiatorsInput!
  where: UserWhereInput
}

input UserUpdateWithoutPurchaseReturnInitiatorsInput {
  id: StringFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  passwordHash: StringFieldUpdateOperationsInput
  tier: NullableEnumUserTierFieldUpdateOperationsInput
  referralCode: NullableStringFieldUpdateOperationsInput
  referredBy: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  isEmailVerified: BoolFieldUpdateOperationsInput
  emailVerificationToken: NullableStringFieldUpdateOperationsInput
  emailVerificationTokenExpiry: NullableDateTimeFieldUpdateOperationsInput
  role: RoleUpdateOneRequiredWithoutUsersNestedInput
  resellerProfile: ResellerProfileUpdateOneWithoutUserNestedInput
  customerProfile: CustomerProfileUpdateOneWithoutUserNestedInput
  resellerPaymentsMade: ResellerPaymentUpdateManyWithoutResellerNestedInput
  resellerPaymentsReceived: ResellerPaymentUpdateManyWithoutReceivedByNestedInput
  adminLogs: AdminActionLogUpdateManyWithoutAdminNestedInput
  supportMessages: SupportMessageUpdateManyWithoutUserNestedInput
  ConsumerSale: ConsumerSaleUpdateManyWithoutBillerNestedInput
  ConsumerSaleAdjustedBys: ConsumerSaleUpdateManyWithoutAdjustedByNestedInput
  StockReceiptBatchReceivedBys: StockReceiptBatchUpdateManyWithoutReceivedByNestedInput
  StockReceiptBatchConfirmedBys: StockReceiptBatchUpdateManyWithoutConfirmedByNestedInput
  StockTransferRequests: StockTransferUpdateManyWithoutRequestedByNestedInput
  StockTransferApprovals: StockTransferUpdateManyWithoutApprovedByNestedInput
  Store: StoreUpdateManyWithoutManagerNestedInput
  ConsumerReceipt: ConsumerReceiptUpdateManyWithoutIssuedByNestedInput
  ResellerSales: ResellerSaleUpdateManyWithoutResellerNestedInput
  BillerResellerSale: ResellerSaleUpdateManyWithoutBillerNestedInput
  ResellerSale: ResellerSaleUpdateManyWithoutApprovedByNestedInput
  SalesReturnReceivers: SalesReturnUpdateManyWithoutReceivedByNestedInput
  SalesReturnRequesters: SalesReturnUpdateManyWithoutReturnedByNestedInput
  SalesReturn: SalesReturnUpdateManyWithoutApprovedByNestedInput
  PurchaseReturnApprovers: PurchaseReturnUpdateManyWithoutApprovedByNestedInput
  Payment: PaymentUpdateManyWithoutReceivedByNestedInput
  ResellerTierHistory: ResellerTierHistoryUpdateManyWithoutUserNestedInput
  ResellerTierHistoryChangedBys: ResellerTierHistoryUpdateManyWithoutAdminNestedInput
  ResellerProfile: ResellerProfileUpdateManyWithoutBillerNestedInput
  RequestedResellers: ResellerProfileUpdateManyWithoutRequestedBillerNestedInput
  Notification: NotificationUpdateManyWithoutUserNestedInput
  Fulfillment: FulfillmentUpdateManyWithoutDeliveryPersonnelNestedInput
  BillerQuotation: QuotationUpdateManyWithoutBillerNestedInput
  ResellerQuotation: QuotationUpdateManyWithoutResellerNestedInput
  PurchaseRequisition: PurchaseRequisitionUpdateManyWithoutRequestedByNestedInput
  Supplier: SupplierUpdateManyWithoutUserNestedInput
}

input PaymentUpdateManyWithoutReceivedByNestedInput {
  create: [PaymentCreateWithoutReceivedByInput!]
  connectOrCreate: [PaymentCreateOrConnectWithoutReceivedByInput!]
  upsert: [PaymentUpsertWithWhereUniqueWithoutReceivedByInput!]
  createMany: PaymentCreateManyReceivedByInputEnvelope
  set: [PaymentWhereUniqueInput!]
  disconnect: [PaymentWhereUniqueInput!]
  delete: [PaymentWhereUniqueInput!]
  connect: [PaymentWhereUniqueInput!]
  update: [PaymentUpdateWithWhereUniqueWithoutReceivedByInput!]
  updateMany: [PaymentUpdateManyWithWhereWithoutReceivedByInput!]
  deleteMany: [PaymentScalarWhereInput!]
}

input PaymentUpsertWithWhereUniqueWithoutReceivedByInput {
  where: PaymentWhereUniqueInput!
  update: PaymentUpdateWithoutReceivedByInput!
  create: PaymentCreateWithoutReceivedByInput!
}

input PaymentUpdateWithoutReceivedByInput {
  id: StringFieldUpdateOperationsInput
  type: EnumPaymentTypeFieldUpdateOperationsInput
  sourceId: StringFieldUpdateOperationsInput
  referenceEntity: StringFieldUpdateOperationsInput
  referenceId: StringFieldUpdateOperationsInput
  amount: FloatFieldUpdateOperationsInput
  method: EnumPaymentMethodFieldUpdateOperationsInput
  receivedAt: DateTimeFieldUpdateOperationsInput
}

input EnumPaymentTypeFieldUpdateOperationsInput {
  set: PaymentType
}

input PaymentUpdateWithWhereUniqueWithoutReceivedByInput {
  where: PaymentWhereUniqueInput!
  data: PaymentUpdateWithoutReceivedByInput!
}

input PaymentUpdateManyWithWhereWithoutReceivedByInput {
  where: PaymentScalarWhereInput!
  data: PaymentUpdateManyMutationInput!
}

input PaymentScalarWhereInput {
  AND: [PaymentScalarWhereInput!]
  OR: [PaymentScalarWhereInput!]
  NOT: [PaymentScalarWhereInput!]
  id: StringFilter
  type: EnumPaymentTypeFilter
  sourceId: StringFilter
  referenceEntity: StringFilter
  referenceId: StringFilter
  amount: FloatFilter
  method: EnumPaymentMethodFilter
  receivedAt: DateTimeFilter
  receivedById: StringFilter
}

input PaymentUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
  type: EnumPaymentTypeFieldUpdateOperationsInput
  sourceId: StringFieldUpdateOperationsInput
  referenceEntity: StringFieldUpdateOperationsInput
  referenceId: StringFieldUpdateOperationsInput
  amount: FloatFieldUpdateOperationsInput
  method: EnumPaymentMethodFieldUpdateOperationsInput
  receivedAt: DateTimeFieldUpdateOperationsInput
}

input ResellerTierHistoryUpdateManyWithoutUserNestedInput {
  create: [ResellerTierHistoryCreateWithoutUserInput!]
  connectOrCreate: [ResellerTierHistoryCreateOrConnectWithoutUserInput!]
  upsert: [ResellerTierHistoryUpsertWithWhereUniqueWithoutUserInput!]
  createMany: ResellerTierHistoryCreateManyUserInputEnvelope
  set: [ResellerTierHistoryWhereUniqueInput!]
  disconnect: [ResellerTierHistoryWhereUniqueInput!]
  delete: [ResellerTierHistoryWhereUniqueInput!]
  connect: [ResellerTierHistoryWhereUniqueInput!]
  update: [ResellerTierHistoryUpdateWithWhereUniqueWithoutUserInput!]
  updateMany: [ResellerTierHistoryUpdateManyWithWhereWithoutUserInput!]
  deleteMany: [ResellerTierHistoryScalarWhereInput!]
}

input ResellerTierHistoryUpsertWithWhereUniqueWithoutUserInput {
  where: ResellerTierHistoryWhereUniqueInput!
  update: ResellerTierHistoryUpdateWithoutUserInput!
  create: ResellerTierHistoryCreateWithoutUserInput!
}

input ResellerTierHistoryUpdateWithoutUserInput {
  id: StringFieldUpdateOperationsInput
  fromTier: EnumUserTierFieldUpdateOperationsInput
  toTier: EnumUserTierFieldUpdateOperationsInput
  changedAt: DateTimeFieldUpdateOperationsInput
  admin: UserUpdateOneRequiredWithoutResellerTierHistoryChangedBysNestedInput
}

input UserUpdateOneRequiredWithoutResellerTierHistoryChangedBysNestedInput {
  create: UserCreateWithoutResellerTierHistoryChangedBysInput
  connectOrCreate: UserCreateOrConnectWithoutResellerTierHistoryChangedBysInput
  upsert: UserUpsertWithoutResellerTierHistoryChangedBysInput
  connect: UserWhereUniqueInput
  update: UserUpdateToOneWithWhereWithoutResellerTierHistoryChangedBysInput
}

input UserUpsertWithoutResellerTierHistoryChangedBysInput {
  update: UserUpdateWithoutResellerTierHistoryChangedBysInput!
  create: UserCreateWithoutResellerTierHistoryChangedBysInput!
  where: UserWhereInput
}

input UserUpdateWithoutResellerTierHistoryChangedBysInput {
  id: StringFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  passwordHash: StringFieldUpdateOperationsInput
  tier: NullableEnumUserTierFieldUpdateOperationsInput
  referralCode: NullableStringFieldUpdateOperationsInput
  referredBy: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  isEmailVerified: BoolFieldUpdateOperationsInput
  emailVerificationToken: NullableStringFieldUpdateOperationsInput
  emailVerificationTokenExpiry: NullableDateTimeFieldUpdateOperationsInput
  role: RoleUpdateOneRequiredWithoutUsersNestedInput
  resellerProfile: ResellerProfileUpdateOneWithoutUserNestedInput
  customerProfile: CustomerProfileUpdateOneWithoutUserNestedInput
  resellerPaymentsMade: ResellerPaymentUpdateManyWithoutResellerNestedInput
  resellerPaymentsReceived: ResellerPaymentUpdateManyWithoutReceivedByNestedInput
  adminLogs: AdminActionLogUpdateManyWithoutAdminNestedInput
  supportMessages: SupportMessageUpdateManyWithoutUserNestedInput
  ConsumerSale: ConsumerSaleUpdateManyWithoutBillerNestedInput
  ConsumerSaleAdjustedBys: ConsumerSaleUpdateManyWithoutAdjustedByNestedInput
  StockReceiptBatchReceivedBys: StockReceiptBatchUpdateManyWithoutReceivedByNestedInput
  StockReceiptBatchConfirmedBys: StockReceiptBatchUpdateManyWithoutConfirmedByNestedInput
  StockTransferRequests: StockTransferUpdateManyWithoutRequestedByNestedInput
  StockTransferApprovals: StockTransferUpdateManyWithoutApprovedByNestedInput
  Store: StoreUpdateManyWithoutManagerNestedInput
  ConsumerReceipt: ConsumerReceiptUpdateManyWithoutIssuedByNestedInput
  ResellerSales: ResellerSaleUpdateManyWithoutResellerNestedInput
  BillerResellerSale: ResellerSaleUpdateManyWithoutBillerNestedInput
  ResellerSale: ResellerSaleUpdateManyWithoutApprovedByNestedInput
  SalesReturnReceivers: SalesReturnUpdateManyWithoutReceivedByNestedInput
  SalesReturnRequesters: SalesReturnUpdateManyWithoutReturnedByNestedInput
  SalesReturn: SalesReturnUpdateManyWithoutApprovedByNestedInput
  PurchaseReturnInitiators: PurchaseReturnUpdateManyWithoutInitiatedByNestedInput
  PurchaseReturnApprovers: PurchaseReturnUpdateManyWithoutApprovedByNestedInput
  Payment: PaymentUpdateManyWithoutReceivedByNestedInput
  ResellerTierHistory: ResellerTierHistoryUpdateManyWithoutUserNestedInput
  ResellerProfile: ResellerProfileUpdateManyWithoutBillerNestedInput
  RequestedResellers: ResellerProfileUpdateManyWithoutRequestedBillerNestedInput
  Notification: NotificationUpdateManyWithoutUserNestedInput
  Fulfillment: FulfillmentUpdateManyWithoutDeliveryPersonnelNestedInput
  BillerQuotation: QuotationUpdateManyWithoutBillerNestedInput
  ResellerQuotation: QuotationUpdateManyWithoutResellerNestedInput
  PurchaseRequisition: PurchaseRequisitionUpdateManyWithoutRequestedByNestedInput
  Supplier: SupplierUpdateManyWithoutUserNestedInput
}

input ResellerProfileUpdateManyWithoutBillerNestedInput {
  create: [ResellerProfileCreateWithoutBillerInput!]
  connectOrCreate: [ResellerProfileCreateOrConnectWithoutBillerInput!]
  upsert: [ResellerProfileUpsertWithWhereUniqueWithoutBillerInput!]
  createMany: ResellerProfileCreateManyBillerInputEnvelope
  set: [ResellerProfileWhereUniqueInput!]
  disconnect: [ResellerProfileWhereUniqueInput!]
  delete: [ResellerProfileWhereUniqueInput!]
  connect: [ResellerProfileWhereUniqueInput!]
  update: [ResellerProfileUpdateWithWhereUniqueWithoutBillerInput!]
  updateMany: [ResellerProfileUpdateManyWithWhereWithoutBillerInput!]
  deleteMany: [ResellerProfileScalarWhereInput!]
}

input ResellerProfileUpsertWithWhereUniqueWithoutBillerInput {
  where: ResellerProfileWhereUniqueInput!
  update: ResellerProfileUpdateWithoutBillerInput!
  create: ResellerProfileCreateWithoutBillerInput!
}

input ResellerProfileUpdateWithoutBillerInput {
  tier: EnumUserTierFieldUpdateOperationsInput
  creditLimit: FloatFieldUpdateOperationsInput
  outstandingBalance: FloatFieldUpdateOperationsInput
  isActive: BoolFieldUpdateOperationsInput
  profileStatus: EnumProfileStatusFieldUpdateOperationsInput
  requestedAt: DateTimeFieldUpdateOperationsInput
  activatedAt: NullableDateTimeFieldUpdateOperationsInput
  rejectedAt: NullableDateTimeFieldUpdateOperationsInput
  rejectionReason: NullableStringFieldUpdateOperationsInput
  user: UserUpdateOneRequiredWithoutResellerProfileNestedInput
  requestedBiller: UserUpdateOneWithoutRequestedResellersNestedInput
}

input UserUpdateOneRequiredWithoutResellerProfileNestedInput {
  create: UserCreateWithoutResellerProfileInput
  connectOrCreate: UserCreateOrConnectWithoutResellerProfileInput
  upsert: UserUpsertWithoutResellerProfileInput
  connect: UserWhereUniqueInput
  update: UserUpdateToOneWithWhereWithoutResellerProfileInput
}

input UserUpdateToOneWithWhereWithoutResellerProfileInput {
  where: UserWhereInput
  data: UserUpdateWithoutResellerProfileInput!
}

input UserUpdateOneWithoutRequestedResellersNestedInput {
  create: UserCreateWithoutRequestedResellersInput
  connectOrCreate: UserCreateOrConnectWithoutRequestedResellersInput
  upsert: UserUpsertWithoutRequestedResellersInput
  disconnect: UserWhereInput
  delete: UserWhereInput
  connect: UserWhereUniqueInput
  update: UserUpdateToOneWithWhereWithoutRequestedResellersInput
}

input UserUpsertWithoutRequestedResellersInput {
  update: UserUpdateWithoutRequestedResellersInput!
  create: UserCreateWithoutRequestedResellersInput!
  where: UserWhereInput
}

input UserUpdateWithoutRequestedResellersInput {
  id: StringFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  passwordHash: StringFieldUpdateOperationsInput
  tier: NullableEnumUserTierFieldUpdateOperationsInput
  referralCode: NullableStringFieldUpdateOperationsInput
  referredBy: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  isEmailVerified: BoolFieldUpdateOperationsInput
  emailVerificationToken: NullableStringFieldUpdateOperationsInput
  emailVerificationTokenExpiry: NullableDateTimeFieldUpdateOperationsInput
  role: RoleUpdateOneRequiredWithoutUsersNestedInput
  resellerProfile: ResellerProfileUpdateOneWithoutUserNestedInput
  customerProfile: CustomerProfileUpdateOneWithoutUserNestedInput
  resellerPaymentsMade: ResellerPaymentUpdateManyWithoutResellerNestedInput
  resellerPaymentsReceived: ResellerPaymentUpdateManyWithoutReceivedByNestedInput
  adminLogs: AdminActionLogUpdateManyWithoutAdminNestedInput
  supportMessages: SupportMessageUpdateManyWithoutUserNestedInput
  ConsumerSale: ConsumerSaleUpdateManyWithoutBillerNestedInput
  ConsumerSaleAdjustedBys: ConsumerSaleUpdateManyWithoutAdjustedByNestedInput
  StockReceiptBatchReceivedBys: StockReceiptBatchUpdateManyWithoutReceivedByNestedInput
  StockReceiptBatchConfirmedBys: StockReceiptBatchUpdateManyWithoutConfirmedByNestedInput
  StockTransferRequests: StockTransferUpdateManyWithoutRequestedByNestedInput
  StockTransferApprovals: StockTransferUpdateManyWithoutApprovedByNestedInput
  Store: StoreUpdateManyWithoutManagerNestedInput
  ConsumerReceipt: ConsumerReceiptUpdateManyWithoutIssuedByNestedInput
  ResellerSales: ResellerSaleUpdateManyWithoutResellerNestedInput
  BillerResellerSale: ResellerSaleUpdateManyWithoutBillerNestedInput
  ResellerSale: ResellerSaleUpdateManyWithoutApprovedByNestedInput
  SalesReturnReceivers: SalesReturnUpdateManyWithoutReceivedByNestedInput
  SalesReturnRequesters: SalesReturnUpdateManyWithoutReturnedByNestedInput
  SalesReturn: SalesReturnUpdateManyWithoutApprovedByNestedInput
  PurchaseReturnInitiators: PurchaseReturnUpdateManyWithoutInitiatedByNestedInput
  PurchaseReturnApprovers: PurchaseReturnUpdateManyWithoutApprovedByNestedInput
  Payment: PaymentUpdateManyWithoutReceivedByNestedInput
  ResellerTierHistory: ResellerTierHistoryUpdateManyWithoutUserNestedInput
  ResellerTierHistoryChangedBys: ResellerTierHistoryUpdateManyWithoutAdminNestedInput
  ResellerProfile: ResellerProfileUpdateManyWithoutBillerNestedInput
  Notification: NotificationUpdateManyWithoutUserNestedInput
  Fulfillment: FulfillmentUpdateManyWithoutDeliveryPersonnelNestedInput
  BillerQuotation: QuotationUpdateManyWithoutBillerNestedInput
  ResellerQuotation: QuotationUpdateManyWithoutResellerNestedInput
  PurchaseRequisition: PurchaseRequisitionUpdateManyWithoutRequestedByNestedInput
  Supplier: SupplierUpdateManyWithoutUserNestedInput
}

input ResellerTierHistoryUpdateManyWithoutAdminNestedInput {
  create: [ResellerTierHistoryCreateWithoutAdminInput!]
  connectOrCreate: [ResellerTierHistoryCreateOrConnectWithoutAdminInput!]
  upsert: [ResellerTierHistoryUpsertWithWhereUniqueWithoutAdminInput!]
  createMany: ResellerTierHistoryCreateManyAdminInputEnvelope
  set: [ResellerTierHistoryWhereUniqueInput!]
  disconnect: [ResellerTierHistoryWhereUniqueInput!]
  delete: [ResellerTierHistoryWhereUniqueInput!]
  connect: [ResellerTierHistoryWhereUniqueInput!]
  update: [ResellerTierHistoryUpdateWithWhereUniqueWithoutAdminInput!]
  updateMany: [ResellerTierHistoryUpdateManyWithWhereWithoutAdminInput!]
  deleteMany: [ResellerTierHistoryScalarWhereInput!]
}

input ResellerTierHistoryUpsertWithWhereUniqueWithoutAdminInput {
  where: ResellerTierHistoryWhereUniqueInput!
  update: ResellerTierHistoryUpdateWithoutAdminInput!
  create: ResellerTierHistoryCreateWithoutAdminInput!
}

input ResellerTierHistoryUpdateWithoutAdminInput {
  id: StringFieldUpdateOperationsInput
  fromTier: EnumUserTierFieldUpdateOperationsInput
  toTier: EnumUserTierFieldUpdateOperationsInput
  changedAt: DateTimeFieldUpdateOperationsInput
  user: UserUpdateOneRequiredWithoutResellerTierHistoryNestedInput
}

input UserUpdateOneRequiredWithoutResellerTierHistoryNestedInput {
  create: UserCreateWithoutResellerTierHistoryInput
  connectOrCreate: UserCreateOrConnectWithoutResellerTierHistoryInput
  upsert: UserUpsertWithoutResellerTierHistoryInput
  connect: UserWhereUniqueInput
  update: UserUpdateToOneWithWhereWithoutResellerTierHistoryInput
}

input UserUpsertWithoutResellerTierHistoryInput {
  update: UserUpdateWithoutResellerTierHistoryInput!
  create: UserCreateWithoutResellerTierHistoryInput!
  where: UserWhereInput
}

input UserUpdateWithoutResellerTierHistoryInput {
  id: StringFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  passwordHash: StringFieldUpdateOperationsInput
  tier: NullableEnumUserTierFieldUpdateOperationsInput
  referralCode: NullableStringFieldUpdateOperationsInput
  referredBy: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  isEmailVerified: BoolFieldUpdateOperationsInput
  emailVerificationToken: NullableStringFieldUpdateOperationsInput
  emailVerificationTokenExpiry: NullableDateTimeFieldUpdateOperationsInput
  role: RoleUpdateOneRequiredWithoutUsersNestedInput
  resellerProfile: ResellerProfileUpdateOneWithoutUserNestedInput
  customerProfile: CustomerProfileUpdateOneWithoutUserNestedInput
  resellerPaymentsMade: ResellerPaymentUpdateManyWithoutResellerNestedInput
  resellerPaymentsReceived: ResellerPaymentUpdateManyWithoutReceivedByNestedInput
  adminLogs: AdminActionLogUpdateManyWithoutAdminNestedInput
  supportMessages: SupportMessageUpdateManyWithoutUserNestedInput
  ConsumerSale: ConsumerSaleUpdateManyWithoutBillerNestedInput
  ConsumerSaleAdjustedBys: ConsumerSaleUpdateManyWithoutAdjustedByNestedInput
  StockReceiptBatchReceivedBys: StockReceiptBatchUpdateManyWithoutReceivedByNestedInput
  StockReceiptBatchConfirmedBys: StockReceiptBatchUpdateManyWithoutConfirmedByNestedInput
  StockTransferRequests: StockTransferUpdateManyWithoutRequestedByNestedInput
  StockTransferApprovals: StockTransferUpdateManyWithoutApprovedByNestedInput
  Store: StoreUpdateManyWithoutManagerNestedInput
  ConsumerReceipt: ConsumerReceiptUpdateManyWithoutIssuedByNestedInput
  ResellerSales: ResellerSaleUpdateManyWithoutResellerNestedInput
  BillerResellerSale: ResellerSaleUpdateManyWithoutBillerNestedInput
  ResellerSale: ResellerSaleUpdateManyWithoutApprovedByNestedInput
  SalesReturnReceivers: SalesReturnUpdateManyWithoutReceivedByNestedInput
  SalesReturnRequesters: SalesReturnUpdateManyWithoutReturnedByNestedInput
  SalesReturn: SalesReturnUpdateManyWithoutApprovedByNestedInput
  PurchaseReturnInitiators: PurchaseReturnUpdateManyWithoutInitiatedByNestedInput
  PurchaseReturnApprovers: PurchaseReturnUpdateManyWithoutApprovedByNestedInput
  Payment: PaymentUpdateManyWithoutReceivedByNestedInput
  ResellerTierHistoryChangedBys: ResellerTierHistoryUpdateManyWithoutAdminNestedInput
  ResellerProfile: ResellerProfileUpdateManyWithoutBillerNestedInput
  RequestedResellers: ResellerProfileUpdateManyWithoutRequestedBillerNestedInput
  Notification: NotificationUpdateManyWithoutUserNestedInput
  Fulfillment: FulfillmentUpdateManyWithoutDeliveryPersonnelNestedInput
  BillerQuotation: QuotationUpdateManyWithoutBillerNestedInput
  ResellerQuotation: QuotationUpdateManyWithoutResellerNestedInput
  PurchaseRequisition: PurchaseRequisitionUpdateManyWithoutRequestedByNestedInput
  Supplier: SupplierUpdateManyWithoutUserNestedInput
}

input ResellerProfileUpdateManyWithoutRequestedBillerNestedInput {
  create: [ResellerProfileCreateWithoutRequestedBillerInput!]
  connectOrCreate: [ResellerProfileCreateOrConnectWithoutRequestedBillerInput!]
  upsert: [ResellerProfileUpsertWithWhereUniqueWithoutRequestedBillerInput!]
  createMany: ResellerProfileCreateManyRequestedBillerInputEnvelope
  set: [ResellerProfileWhereUniqueInput!]
  disconnect: [ResellerProfileWhereUniqueInput!]
  delete: [ResellerProfileWhereUniqueInput!]
  connect: [ResellerProfileWhereUniqueInput!]
  update: [ResellerProfileUpdateWithWhereUniqueWithoutRequestedBillerInput!]
  updateMany: [ResellerProfileUpdateManyWithWhereWithoutRequestedBillerInput!]
  deleteMany: [ResellerProfileScalarWhereInput!]
}

input ResellerProfileUpsertWithWhereUniqueWithoutRequestedBillerInput {
  where: ResellerProfileWhereUniqueInput!
  update: ResellerProfileUpdateWithoutRequestedBillerInput!
  create: ResellerProfileCreateWithoutRequestedBillerInput!
}

input ResellerProfileUpdateWithoutRequestedBillerInput {
  tier: EnumUserTierFieldUpdateOperationsInput
  creditLimit: FloatFieldUpdateOperationsInput
  outstandingBalance: FloatFieldUpdateOperationsInput
  isActive: BoolFieldUpdateOperationsInput
  profileStatus: EnumProfileStatusFieldUpdateOperationsInput
  requestedAt: DateTimeFieldUpdateOperationsInput
  activatedAt: NullableDateTimeFieldUpdateOperationsInput
  rejectedAt: NullableDateTimeFieldUpdateOperationsInput
  rejectionReason: NullableStringFieldUpdateOperationsInput
  user: UserUpdateOneRequiredWithoutResellerProfileNestedInput
  biller: UserUpdateOneWithoutResellerProfileNestedInput
}

input ResellerProfileUpdateWithWhereUniqueWithoutRequestedBillerInput {
  where: ResellerProfileWhereUniqueInput!
  data: ResellerProfileUpdateWithoutRequestedBillerInput!
}

input ResellerProfileUpdateManyWithWhereWithoutRequestedBillerInput {
  where: ResellerProfileScalarWhereInput!
  data: ResellerProfileUpdateManyMutationInput!
}

input ResellerProfileScalarWhereInput {
  AND: [ResellerProfileScalarWhereInput!]
  OR: [ResellerProfileScalarWhereInput!]
  NOT: [ResellerProfileScalarWhereInput!]
  userId: StringFilter
  billerId: StringNullableFilter
  requestedBillerId: StringNullableFilter
  tier: EnumUserTierFilter
  creditLimit: FloatFilter
  outstandingBalance: FloatFilter
  isActive: BoolFilter
  profileStatus: EnumProfileStatusFilter
  requestedAt: DateTimeFilter
  activatedAt: DateTimeNullableFilter
  rejectedAt: DateTimeNullableFilter
  rejectionReason: StringNullableFilter
}

input ResellerProfileUpdateManyMutationInput {
  tier: EnumUserTierFieldUpdateOperationsInput
  creditLimit: FloatFieldUpdateOperationsInput
  outstandingBalance: FloatFieldUpdateOperationsInput
  isActive: BoolFieldUpdateOperationsInput
  profileStatus: EnumProfileStatusFieldUpdateOperationsInput
  requestedAt: DateTimeFieldUpdateOperationsInput
  activatedAt: NullableDateTimeFieldUpdateOperationsInput
  rejectedAt: NullableDateTimeFieldUpdateOperationsInput
  rejectionReason: NullableStringFieldUpdateOperationsInput
}

input NotificationUpdateManyWithoutUserNestedInput {
  create: [NotificationCreateWithoutUserInput!]
  connectOrCreate: [NotificationCreateOrConnectWithoutUserInput!]
  upsert: [NotificationUpsertWithWhereUniqueWithoutUserInput!]
  createMany: NotificationCreateManyUserInputEnvelope
  set: [NotificationWhereUniqueInput!]
  disconnect: [NotificationWhereUniqueInput!]
  delete: [NotificationWhereUniqueInput!]
  connect: [NotificationWhereUniqueInput!]
  update: [NotificationUpdateWithWhereUniqueWithoutUserInput!]
  updateMany: [NotificationUpdateManyWithWhereWithoutUserInput!]
  deleteMany: [NotificationScalarWhereInput!]
}

input NotificationUpsertWithWhereUniqueWithoutUserInput {
  where: NotificationWhereUniqueInput!
  update: NotificationUpdateWithoutUserInput!
  create: NotificationCreateWithoutUserInput!
}

input NotificationUpdateWithoutUserInput {
  id: StringFieldUpdateOperationsInput
  type: StringFieldUpdateOperationsInput
  message: StringFieldUpdateOperationsInput
  isRead: BoolFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
}

input NotificationUpdateWithWhereUniqueWithoutUserInput {
  where: NotificationWhereUniqueInput!
  data: NotificationUpdateWithoutUserInput!
}

input NotificationUpdateManyWithWhereWithoutUserInput {
  where: NotificationScalarWhereInput!
  data: NotificationUpdateManyMutationInput!
}

input NotificationScalarWhereInput {
  AND: [NotificationScalarWhereInput!]
  OR: [NotificationScalarWhereInput!]
  NOT: [NotificationScalarWhereInput!]
  id: StringFilter
  userId: StringFilter
  type: StringFilter
  message: StringFilter
  isRead: BoolFilter
  createdAt: DateTimeFilter
}

input NotificationUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
  type: StringFieldUpdateOperationsInput
  message: StringFieldUpdateOperationsInput
  isRead: BoolFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
}

input FulfillmentUpdateManyWithoutDeliveryPersonnelNestedInput {
  create: [FulfillmentCreateWithoutDeliveryPersonnelInput!]
  connectOrCreate: [FulfillmentCreateOrConnectWithoutDeliveryPersonnelInput!]
  upsert: [FulfillmentUpsertWithWhereUniqueWithoutDeliveryPersonnelInput!]
  createMany: FulfillmentCreateManyDeliveryPersonnelInputEnvelope
  set: [FulfillmentWhereUniqueInput!]
  disconnect: [FulfillmentWhereUniqueInput!]
  delete: [FulfillmentWhereUniqueInput!]
  connect: [FulfillmentWhereUniqueInput!]
  update: [FulfillmentUpdateWithWhereUniqueWithoutDeliveryPersonnelInput!]
  updateMany: [FulfillmentUpdateManyWithWhereWithoutDeliveryPersonnelInput!]
  deleteMany: [FulfillmentScalarWhereInput!]
}

input FulfillmentUpsertWithWhereUniqueWithoutDeliveryPersonnelInput {
  where: FulfillmentWhereUniqueInput!
  update: FulfillmentUpdateWithoutDeliveryPersonnelInput!
  create: FulfillmentCreateWithoutDeliveryPersonnelInput!
}

input FulfillmentUpdateWithoutDeliveryPersonnelInput {
  id: StringFieldUpdateOperationsInput
  type: EnumFulfillmentTypeFieldUpdateOperationsInput
  deliveryAddress: NullableStringFieldUpdateOperationsInput
  status: EnumFulfillmentStatusFieldUpdateOperationsInput
  cost: NullableFloatFieldUpdateOperationsInput
  confirmationPin: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  saleOrder: SaleOrderUpdateOneRequiredWithoutFulfillmentNestedInput
}

input EnumFulfillmentTypeFieldUpdateOperationsInput {
  set: FulfillmentType
}

input EnumFulfillmentStatusFieldUpdateOperationsInput {
  set: FulfillmentStatus
}

input NullableFloatFieldUpdateOperationsInput {
  set: Float
  increment: Float
  decrement: Float
  multiply: Float
  divide: Float
}

input SaleOrderUpdateOneRequiredWithoutFulfillmentNestedInput {
  create: SaleOrderCreateWithoutFulfillmentInput
  connectOrCreate: SaleOrderCreateOrConnectWithoutFulfillmentInput
  upsert: SaleOrderUpsertWithoutFulfillmentInput
  connect: SaleOrderWhereUniqueInput
  update: SaleOrderUpdateToOneWithWhereWithoutFulfillmentInput
}

input SaleOrderUpsertWithoutFulfillmentInput {
  update: SaleOrderUpdateWithoutFulfillmentInput!
  create: SaleOrderCreateWithoutFulfillmentInput!
  where: SaleOrderWhereInput
}

input SaleOrderUpdateWithoutFulfillmentInput {
  id: StringFieldUpdateOperationsInput
  storeId: StringFieldUpdateOperationsInput
  billerId: StringFieldUpdateOperationsInput
  type: EnumSaleTypeFieldUpdateOperationsInput
  status: EnumSaleStatusFieldUpdateOperationsInput
  phase: EnumOrderPhaseFieldUpdateOperationsInput
  totalAmount: FloatFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  resellerSaleid: NullableStringFieldUpdateOperationsInput
  consumerSale: ConsumerSaleUpdateOneWithoutSaleOrderNestedInput
  resellerSale: ResellerSaleUpdateOneWithoutSaleOrderNestedInput
  quotation: QuotationUpdateOneWithoutSaleOrderNestedInput
  ConsumerPayment: ConsumerPaymentUpdateManyWithoutSaleOrderNestedInput
  ResellerPayment: ResellerPaymentUpdateManyWithoutSaleOrderNestedInput
}

input QuotationUpdateOneWithoutSaleOrderNestedInput {
  create: QuotationCreateWithoutSaleOrderInput
  connectOrCreate: QuotationCreateOrConnectWithoutSaleOrderInput
  upsert: QuotationUpsertWithoutSaleOrderInput
  disconnect: QuotationWhereInput
  delete: QuotationWhereInput
  connect: QuotationWhereUniqueInput
  update: QuotationUpdateToOneWithWhereWithoutSaleOrderInput
}

input QuotationUpsertWithoutSaleOrderInput {
  update: QuotationUpdateWithoutSaleOrderInput!
  create: QuotationCreateWithoutSaleOrderInput!
  where: QuotationWhereInput
}

input QuotationUpdateWithoutSaleOrderInput {
  id: StringFieldUpdateOperationsInput
  type: EnumSaleTypeFieldUpdateOperationsInput
  channel: EnumSaleChannelFieldUpdateOperationsInput
  status: EnumQuotationStatusFieldUpdateOperationsInput
  totalAmount: FloatFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  store: StoreUpdateOneRequiredWithoutQuotationNestedInput
  biller: UserUpdateOneWithoutBillerQuotationNestedInput
  consumer: CustomerUpdateOneWithoutQuotationNestedInput
  reseller: UserUpdateOneWithoutResellerQuotationNestedInput
  items: QuotationItemUpdateManyWithoutQuotationNestedInput
  sale: ResellerSaleUpdateOneWithoutQuotationNestedInput
  ConsumerSale: ConsumerSaleUpdateManyWithoutQuotationNestedInput
}

input QuotationItemUpdateManyWithoutQuotationNestedInput {
  create: [QuotationItemCreateWithoutQuotationInput!]
  connectOrCreate: [QuotationItemCreateOrConnectWithoutQuotationInput!]
  upsert: [QuotationItemUpsertWithWhereUniqueWithoutQuotationInput!]
  createMany: QuotationItemCreateManyQuotationInputEnvelope
  set: [QuotationItemWhereUniqueInput!]
  disconnect: [QuotationItemWhereUniqueInput!]
  delete: [QuotationItemWhereUniqueInput!]
  connect: [QuotationItemWhereUniqueInput!]
  update: [QuotationItemUpdateWithWhereUniqueWithoutQuotationInput!]
  updateMany: [QuotationItemUpdateManyWithWhereWithoutQuotationInput!]
  deleteMany: [QuotationItemScalarWhereInput!]
}

input QuotationItemUpsertWithWhereUniqueWithoutQuotationInput {
  where: QuotationItemWhereUniqueInput!
  update: QuotationItemUpdateWithoutQuotationInput!
  create: QuotationItemCreateWithoutQuotationInput!
}

input QuotationItemUpdateWithoutQuotationInput {
  id: StringFieldUpdateOperationsInput
  quantity: IntFieldUpdateOperationsInput
  unitPrice: FloatFieldUpdateOperationsInput
  productVariant: ProductVariantUpdateOneRequiredWithoutQuotationItemsNestedInput
}

input ProductVariantUpdateOneRequiredWithoutQuotationItemsNestedInput {
  create: ProductVariantCreateWithoutQuotationItemsInput
  connectOrCreate: ProductVariantCreateOrConnectWithoutQuotationItemsInput
  upsert: ProductVariantUpsertWithoutQuotationItemsInput
  connect: ProductVariantWhereUniqueInput
  update: ProductVariantUpdateToOneWithWhereWithoutQuotationItemsInput
}

input ProductVariantUpsertWithoutQuotationItemsInput {
  update: ProductVariantUpdateWithoutQuotationItemsInput!
  create: ProductVariantCreateWithoutQuotationItemsInput!
  where: ProductVariantWhereInput
}

input ProductVariantUpdateWithoutQuotationItemsInput {
  id: StringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  size: StringFieldUpdateOperationsInput
  concentration: StringFieldUpdateOperationsInput
  packaging: StringFieldUpdateOperationsInput
  barcode: NullableStringFieldUpdateOperationsInput
  price: FloatFieldUpdateOperationsInput
  resellerPrice: FloatFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  product: ProductUpdateOneWithoutVariantsNestedInput
  stockItems: StockUpdateManyWithoutProductVariantNestedInput
  receiptItems: StockReceiptBatchItemUpdateManyWithoutProductVariantNestedInput
  resellerItems: ResellerSaleItemUpdateManyWithoutProductVariantNestedInput
  consumerItems: ConsumerSaleItemUpdateManyWithoutProductVariantNestedInput
  returnItems: SalesReturnItemUpdateManyWithoutProductVariantNestedInput
  purchaseReturnItems: PurchaseReturnItemUpdateManyWithoutProductVariantNestedInput
  transferItems: StockTransferItemUpdateManyWithoutProductVariantNestedInput
  stats: ProductSalesStatsUpdateOneWithoutProductVariantNestedInput
  PurchaseOrderItem: PurchaseOrderItemUpdateManyWithoutProductVariantNestedInput
  StockMovementItem: StockMovementItemUpdateManyWithoutProductVariantNestedInput
  PurchaseRequisitionItem: PurchaseRequisitionItemUpdateManyWithoutProductVariantNestedInput
  SupplierCatalog: SupplierCatalogUpdateManyWithoutProductVariantNestedInput
  SupplierQuoteItem: SupplierQuoteItemUpdateManyWithoutProductVariantNestedInput
  ProductVariantTierPrice: ProductVariantTierPriceUpdateManyWithoutVariantNestedInput
  facets: VariantFacetValueUpdateManyWithoutVariantNestedInput
}

input PurchaseReturnItemUpdateManyWithoutProductVariantNestedInput {
  create: [PurchaseReturnItemCreateWithoutProductVariantInput!]
  connectOrCreate: [PurchaseReturnItemCreateOrConnectWithoutProductVariantInput!]
  upsert: [PurchaseReturnItemUpsertWithWhereUniqueWithoutProductVariantInput!]
  createMany: PurchaseReturnItemCreateManyProductVariantInputEnvelope
  set: [PurchaseReturnItemWhereUniqueInput!]
  disconnect: [PurchaseReturnItemWhereUniqueInput!]
  delete: [PurchaseReturnItemWhereUniqueInput!]
  connect: [PurchaseReturnItemWhereUniqueInput!]
  update: [PurchaseReturnItemUpdateWithWhereUniqueWithoutProductVariantInput!]
  updateMany: [PurchaseReturnItemUpdateManyWithWhereWithoutProductVariantInput!]
  deleteMany: [PurchaseReturnItemScalarWhereInput!]
}

input PurchaseReturnItemUpsertWithWhereUniqueWithoutProductVariantInput {
  where: PurchaseReturnItemWhereUniqueInput!
  update: PurchaseReturnItemUpdateWithoutProductVariantInput!
  create: PurchaseReturnItemCreateWithoutProductVariantInput!
}

input PurchaseReturnItemUpdateWithoutProductVariantInput {
  id: StringFieldUpdateOperationsInput
  quantity: IntFieldUpdateOperationsInput
  return: PurchaseReturnUpdateOneRequiredWithoutItemsNestedInput
  batch: StockReceiptBatchUpdateOneRequiredWithoutPurchaseReturnsNestedInput
}

input PurchaseReturnUpdateOneRequiredWithoutItemsNestedInput {
  create: PurchaseReturnCreateWithoutItemsInput
  connectOrCreate: PurchaseReturnCreateOrConnectWithoutItemsInput
  upsert: PurchaseReturnUpsertWithoutItemsInput
  connect: PurchaseReturnWhereUniqueInput
  update: PurchaseReturnUpdateToOneWithWhereWithoutItemsInput
}

input PurchaseReturnUpsertWithoutItemsInput {
  update: PurchaseReturnUpdateWithoutItemsInput!
  create: PurchaseReturnCreateWithoutItemsInput!
  where: PurchaseReturnWhereInput
}

input PurchaseReturnUpdateWithoutItemsInput {
  id: StringFieldUpdateOperationsInput
  status: EnumReturnStatusFieldUpdateOperationsInput
  reason: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  supplier: SupplierUpdateOneRequiredWithoutReturnsNestedInput
  initiatedBy: UserUpdateOneRequiredWithoutPurchaseReturnInitiatorsNestedInput
  approvedBy: UserUpdateOneRequiredWithoutPurchaseReturnApproversNestedInput
}

input UserUpdateOneRequiredWithoutPurchaseReturnApproversNestedInput {
  create: UserCreateWithoutPurchaseReturnApproversInput
  connectOrCreate: UserCreateOrConnectWithoutPurchaseReturnApproversInput
  upsert: UserUpsertWithoutPurchaseReturnApproversInput
  connect: UserWhereUniqueInput
  update: UserUpdateToOneWithWhereWithoutPurchaseReturnApproversInput
}

input UserUpsertWithoutPurchaseReturnApproversInput {
  update: UserUpdateWithoutPurchaseReturnApproversInput!
  create: UserCreateWithoutPurchaseReturnApproversInput!
  where: UserWhereInput
}

input UserUpdateWithoutPurchaseReturnApproversInput {
  id: StringFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  passwordHash: StringFieldUpdateOperationsInput
  tier: NullableEnumUserTierFieldUpdateOperationsInput
  referralCode: NullableStringFieldUpdateOperationsInput
  referredBy: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  isEmailVerified: BoolFieldUpdateOperationsInput
  emailVerificationToken: NullableStringFieldUpdateOperationsInput
  emailVerificationTokenExpiry: NullableDateTimeFieldUpdateOperationsInput
  role: RoleUpdateOneRequiredWithoutUsersNestedInput
  resellerProfile: ResellerProfileUpdateOneWithoutUserNestedInput
  customerProfile: CustomerProfileUpdateOneWithoutUserNestedInput
  resellerPaymentsMade: ResellerPaymentUpdateManyWithoutResellerNestedInput
  resellerPaymentsReceived: ResellerPaymentUpdateManyWithoutReceivedByNestedInput
  adminLogs: AdminActionLogUpdateManyWithoutAdminNestedInput
  supportMessages: SupportMessageUpdateManyWithoutUserNestedInput
  ConsumerSale: ConsumerSaleUpdateManyWithoutBillerNestedInput
  ConsumerSaleAdjustedBys: ConsumerSaleUpdateManyWithoutAdjustedByNestedInput
  StockReceiptBatchReceivedBys: StockReceiptBatchUpdateManyWithoutReceivedByNestedInput
  StockReceiptBatchConfirmedBys: StockReceiptBatchUpdateManyWithoutConfirmedByNestedInput
  StockTransferRequests: StockTransferUpdateManyWithoutRequestedByNestedInput
  StockTransferApprovals: StockTransferUpdateManyWithoutApprovedByNestedInput
  Store: StoreUpdateManyWithoutManagerNestedInput
  ConsumerReceipt: ConsumerReceiptUpdateManyWithoutIssuedByNestedInput
  ResellerSales: ResellerSaleUpdateManyWithoutResellerNestedInput
  BillerResellerSale: ResellerSaleUpdateManyWithoutBillerNestedInput
  ResellerSale: ResellerSaleUpdateManyWithoutApprovedByNestedInput
  SalesReturnReceivers: SalesReturnUpdateManyWithoutReceivedByNestedInput
  SalesReturnRequesters: SalesReturnUpdateManyWithoutReturnedByNestedInput
  SalesReturn: SalesReturnUpdateManyWithoutApprovedByNestedInput
  PurchaseReturnInitiators: PurchaseReturnUpdateManyWithoutInitiatedByNestedInput
  Payment: PaymentUpdateManyWithoutReceivedByNestedInput
  ResellerTierHistory: ResellerTierHistoryUpdateManyWithoutUserNestedInput
  ResellerTierHistoryChangedBys: ResellerTierHistoryUpdateManyWithoutAdminNestedInput
  ResellerProfile: ResellerProfileUpdateManyWithoutBillerNestedInput
  RequestedResellers: ResellerProfileUpdateManyWithoutRequestedBillerNestedInput
  Notification: NotificationUpdateManyWithoutUserNestedInput
  Fulfillment: FulfillmentUpdateManyWithoutDeliveryPersonnelNestedInput
  BillerQuotation: QuotationUpdateManyWithoutBillerNestedInput
  ResellerQuotation: QuotationUpdateManyWithoutResellerNestedInput
  PurchaseRequisition: PurchaseRequisitionUpdateManyWithoutRequestedByNestedInput
  Supplier: SupplierUpdateManyWithoutUserNestedInput
}

input QuotationUpdateManyWithoutBillerNestedInput {
  create: [QuotationCreateWithoutBillerInput!]
  connectOrCreate: [QuotationCreateOrConnectWithoutBillerInput!]
  upsert: [QuotationUpsertWithWhereUniqueWithoutBillerInput!]
  createMany: QuotationCreateManyBillerInputEnvelope
  set: [QuotationWhereUniqueInput!]
  disconnect: [QuotationWhereUniqueInput!]
  delete: [QuotationWhereUniqueInput!]
  connect: [QuotationWhereUniqueInput!]
  update: [QuotationUpdateWithWhereUniqueWithoutBillerInput!]
  updateMany: [QuotationUpdateManyWithWhereWithoutBillerInput!]
  deleteMany: [QuotationScalarWhereInput!]
}

input QuotationUpsertWithWhereUniqueWithoutBillerInput {
  where: QuotationWhereUniqueInput!
  update: QuotationUpdateWithoutBillerInput!
  create: QuotationCreateWithoutBillerInput!
}

input QuotationUpdateWithoutBillerInput {
  id: StringFieldUpdateOperationsInput
  type: EnumSaleTypeFieldUpdateOperationsInput
  channel: EnumSaleChannelFieldUpdateOperationsInput
  status: EnumQuotationStatusFieldUpdateOperationsInput
  totalAmount: FloatFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  store: StoreUpdateOneRequiredWithoutQuotationNestedInput
  consumer: CustomerUpdateOneWithoutQuotationNestedInput
  reseller: UserUpdateOneWithoutResellerQuotationNestedInput
  items: QuotationItemUpdateManyWithoutQuotationNestedInput
  sale: ResellerSaleUpdateOneWithoutQuotationNestedInput
  SaleOrder: SaleOrderUpdateOneWithoutQuotationNestedInput
  ConsumerSale: ConsumerSaleUpdateManyWithoutQuotationNestedInput
}

input ResellerSaleUpdateOneWithoutQuotationNestedInput {
  create: ResellerSaleCreateWithoutQuotationInput
  connectOrCreate: ResellerSaleCreateOrConnectWithoutQuotationInput
  upsert: ResellerSaleUpsertWithoutQuotationInput
  disconnect: ResellerSaleWhereInput
  delete: ResellerSaleWhereInput
  connect: ResellerSaleWhereUniqueInput
  update: ResellerSaleUpdateToOneWithWhereWithoutQuotationInput
}

input ResellerSaleUpsertWithoutQuotationInput {
  update: ResellerSaleUpdateWithoutQuotationInput!
  create: ResellerSaleCreateWithoutQuotationInput!
  where: ResellerSaleWhereInput
}

input ResellerSaleUpdateWithoutQuotationInput {
  id: StringFieldUpdateOperationsInput
  status: EnumSaleStatusFieldUpdateOperationsInput
  totalAmount: FloatFieldUpdateOperationsInput
  approvedAt: NullableDateTimeFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  reseller: UserUpdateOneRequiredWithoutResellerSalesNestedInput
  biller: UserUpdateOneRequiredWithoutBillerResellerSaleNestedInput
  approvedBy: UserUpdateOneWithoutResellerSaleNestedInput
  store: StoreUpdateOneRequiredWithoutResellerSalesNestedInput
  items: ResellerSaleItemUpdateManyWithoutSaleNestedInput
  payments: ResellerPaymentUpdateManyWithoutSaleNestedInput
  SalesReturn: SalesReturnUpdateManyWithoutResellerSaleNestedInput
  SaleOrder: SaleOrderUpdateOneRequiredWithoutResellerSaleNestedInput
}

input SalesReturnUpdateManyWithoutResellerSaleNestedInput {
  create: [SalesReturnCreateWithoutResellerSaleInput!]
  connectOrCreate: [SalesReturnCreateOrConnectWithoutResellerSaleInput!]
  upsert: [SalesReturnUpsertWithWhereUniqueWithoutResellerSaleInput!]
  createMany: SalesReturnCreateManyResellerSaleInputEnvelope
  set: [SalesReturnWhereUniqueInput!]
  disconnect: [SalesReturnWhereUniqueInput!]
  delete: [SalesReturnWhereUniqueInput!]
  connect: [SalesReturnWhereUniqueInput!]
  update: [SalesReturnUpdateWithWhereUniqueWithoutResellerSaleInput!]
  updateMany: [SalesReturnUpdateManyWithWhereWithoutResellerSaleInput!]
  deleteMany: [SalesReturnScalarWhereInput!]
}

input SalesReturnUpsertWithWhereUniqueWithoutResellerSaleInput {
  where: SalesReturnWhereUniqueInput!
  update: SalesReturnUpdateWithoutResellerSaleInput!
  create: SalesReturnCreateWithoutResellerSaleInput!
}

input SalesReturnUpdateWithoutResellerSaleInput {
  id: StringFieldUpdateOperationsInput
  type: EnumSaleTypeFieldUpdateOperationsInput
  status: EnumReturnStatusFieldUpdateOperationsInput
  returnLocation: EnumReturnLocationFieldUpdateOperationsInput
  isApprovedLate: BoolFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  consumerSale: ConsumerSaleUpdateOneWithoutSalesReturnNestedInput
  returnedBy: UserUpdateOneRequiredWithoutSalesReturnRequestersNestedInput
  receivedBy: UserUpdateOneRequiredWithoutSalesReturnReceiversNestedInput
  approvedBy: UserUpdateOneWithoutSalesReturnNestedInput
  store: StoreUpdateOneRequiredWithoutSalesReturnsNestedInput
  items: SalesReturnItemUpdateManyWithoutReturnNestedInput
}

input SalesReturnItemUpdateManyWithoutReturnNestedInput {
  create: [SalesReturnItemCreateWithoutReturnInput!]
  connectOrCreate: [SalesReturnItemCreateOrConnectWithoutReturnInput!]
  upsert: [SalesReturnItemUpsertWithWhereUniqueWithoutReturnInput!]
  createMany: SalesReturnItemCreateManyReturnInputEnvelope
  set: [SalesReturnItemWhereUniqueInput!]
  disconnect: [SalesReturnItemWhereUniqueInput!]
  delete: [SalesReturnItemWhereUniqueInput!]
  connect: [SalesReturnItemWhereUniqueInput!]
  update: [SalesReturnItemUpdateWithWhereUniqueWithoutReturnInput!]
  updateMany: [SalesReturnItemUpdateManyWithWhereWithoutReturnInput!]
  deleteMany: [SalesReturnItemScalarWhereInput!]
}

input SalesReturnItemUpsertWithWhereUniqueWithoutReturnInput {
  where: SalesReturnItemWhereUniqueInput!
  update: SalesReturnItemUpdateWithoutReturnInput!
  create: SalesReturnItemCreateWithoutReturnInput!
}

input SalesReturnItemUpdateWithoutReturnInput {
  id: StringFieldUpdateOperationsInput
  quantity: IntFieldUpdateOperationsInput
  condition: StringFieldUpdateOperationsInput
  productVariant: ProductVariantUpdateOneRequiredWithoutReturnItemsNestedInput
}

input ProductVariantUpdateOneRequiredWithoutReturnItemsNestedInput {
  create: ProductVariantCreateWithoutReturnItemsInput
  connectOrCreate: ProductVariantCreateOrConnectWithoutReturnItemsInput
  upsert: ProductVariantUpsertWithoutReturnItemsInput
  connect: ProductVariantWhereUniqueInput
  update: ProductVariantUpdateToOneWithWhereWithoutReturnItemsInput
}

input ProductVariantUpsertWithoutReturnItemsInput {
  update: ProductVariantUpdateWithoutReturnItemsInput!
  create: ProductVariantCreateWithoutReturnItemsInput!
  where: ProductVariantWhereInput
}

input ProductVariantUpdateWithoutReturnItemsInput {
  id: StringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  size: StringFieldUpdateOperationsInput
  concentration: StringFieldUpdateOperationsInput
  packaging: StringFieldUpdateOperationsInput
  barcode: NullableStringFieldUpdateOperationsInput
  price: FloatFieldUpdateOperationsInput
  resellerPrice: FloatFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  product: ProductUpdateOneWithoutVariantsNestedInput
  stockItems: StockUpdateManyWithoutProductVariantNestedInput
  receiptItems: StockReceiptBatchItemUpdateManyWithoutProductVariantNestedInput
  quotationItems: QuotationItemUpdateManyWithoutProductVariantNestedInput
  resellerItems: ResellerSaleItemUpdateManyWithoutProductVariantNestedInput
  consumerItems: ConsumerSaleItemUpdateManyWithoutProductVariantNestedInput
  purchaseReturnItems: PurchaseReturnItemUpdateManyWithoutProductVariantNestedInput
  transferItems: StockTransferItemUpdateManyWithoutProductVariantNestedInput
  stats: ProductSalesStatsUpdateOneWithoutProductVariantNestedInput
  PurchaseOrderItem: PurchaseOrderItemUpdateManyWithoutProductVariantNestedInput
  StockMovementItem: StockMovementItemUpdateManyWithoutProductVariantNestedInput
  PurchaseRequisitionItem: PurchaseRequisitionItemUpdateManyWithoutProductVariantNestedInput
  SupplierCatalog: SupplierCatalogUpdateManyWithoutProductVariantNestedInput
  SupplierQuoteItem: SupplierQuoteItemUpdateManyWithoutProductVariantNestedInput
  ProductVariantTierPrice: ProductVariantTierPriceUpdateManyWithoutVariantNestedInput
  facets: VariantFacetValueUpdateManyWithoutVariantNestedInput
}

input StockTransferItemUpdateManyWithoutProductVariantNestedInput {
  create: [StockTransferItemCreateWithoutProductVariantInput!]
  connectOrCreate: [StockTransferItemCreateOrConnectWithoutProductVariantInput!]
  upsert: [StockTransferItemUpsertWithWhereUniqueWithoutProductVariantInput!]
  createMany: StockTransferItemCreateManyProductVariantInputEnvelope
  set: [StockTransferItemWhereUniqueInput!]
  disconnect: [StockTransferItemWhereUniqueInput!]
  delete: [StockTransferItemWhereUniqueInput!]
  connect: [StockTransferItemWhereUniqueInput!]
  update: [StockTransferItemUpdateWithWhereUniqueWithoutProductVariantInput!]
  updateMany: [StockTransferItemUpdateManyWithWhereWithoutProductVariantInput!]
  deleteMany: [StockTransferItemScalarWhereInput!]
}

input StockTransferItemUpsertWithWhereUniqueWithoutProductVariantInput {
  where: StockTransferItemWhereUniqueInput!
  update: StockTransferItemUpdateWithoutProductVariantInput!
  create: StockTransferItemCreateWithoutProductVariantInput!
}

input StockTransferItemUpdateWithoutProductVariantInput {
  id: StringFieldUpdateOperationsInput
  quantity: IntFieldUpdateOperationsInput
  transfer: StockTransferUpdateOneRequiredWithoutItemsNestedInput
}

input StockTransferUpdateOneRequiredWithoutItemsNestedInput {
  create: StockTransferCreateWithoutItemsInput
  connectOrCreate: StockTransferCreateOrConnectWithoutItemsInput
  upsert: StockTransferUpsertWithoutItemsInput
  connect: StockTransferWhereUniqueInput
  update: StockTransferUpdateToOneWithWhereWithoutItemsInput
}

input StockTransferUpsertWithoutItemsInput {
  update: StockTransferUpdateWithoutItemsInput!
  create: StockTransferCreateWithoutItemsInput!
  where: StockTransferWhereInput
}

input StockTransferUpdateWithoutItemsInput {
  id: StringFieldUpdateOperationsInput
  status: EnumTransferStatusFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  fromStore: StoreUpdateOneRequiredWithoutTransfersOutNestedInput
  toStore: StoreUpdateOneRequiredWithoutTransfersInNestedInput
  requestedBy: UserUpdateOneRequiredWithoutStockTransferRequestsNestedInput
  approvedBy: UserUpdateOneRequiredWithoutStockTransferApprovalsNestedInput
}

input StockTransferUpdateToOneWithWhereWithoutItemsInput {
  where: StockTransferWhereInput
  data: StockTransferUpdateWithoutItemsInput!
}

input StockTransferItemUpdateWithWhereUniqueWithoutProductVariantInput {
  where: StockTransferItemWhereUniqueInput!
  data: StockTransferItemUpdateWithoutProductVariantInput!
}

input StockTransferItemUpdateManyWithWhereWithoutProductVariantInput {
  where: StockTransferItemScalarWhereInput!
  data: StockTransferItemUpdateManyMutationInput!
}

input StockTransferItemScalarWhereInput {
  AND: [StockTransferItemScalarWhereInput!]
  OR: [StockTransferItemScalarWhereInput!]
  NOT: [StockTransferItemScalarWhereInput!]
  id: StringFilter
  stockTransferId: StringFilter
  productVariantId: StringFilter
  quantity: IntFilter
}

input StockTransferItemUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
  quantity: IntFieldUpdateOperationsInput
}

input ProductSalesStatsUpdateOneWithoutProductVariantNestedInput {
  create: ProductSalesStatsCreateWithoutProductVariantInput
  connectOrCreate: ProductSalesStatsCreateOrConnectWithoutProductVariantInput
  upsert: ProductSalesStatsUpsertWithoutProductVariantInput
  disconnect: ProductSalesStatsWhereInput
  delete: ProductSalesStatsWhereInput
  connect: ProductSalesStatsWhereUniqueInput
  update: ProductSalesStatsUpdateToOneWithWhereWithoutProductVariantInput
}

input ProductSalesStatsUpsertWithoutProductVariantInput {
  update: ProductSalesStatsUpdateWithoutProductVariantInput!
  create: ProductSalesStatsCreateWithoutProductVariantInput!
  where: ProductSalesStatsWhereInput
}

input ProductSalesStatsUpdateWithoutProductVariantInput {
  id: StringFieldUpdateOperationsInput
  totalSold: IntFieldUpdateOperationsInput
  totalReturned: IntFieldUpdateOperationsInput
  lastSoldAt: NullableDateTimeFieldUpdateOperationsInput
  monthlySales: JSON
}

input ProductSalesStatsUpdateToOneWithWhereWithoutProductVariantInput {
  where: ProductSalesStatsWhereInput
  data: ProductSalesStatsUpdateWithoutProductVariantInput!
}

input PurchaseOrderItemUpdateManyWithoutProductVariantNestedInput {
  create: [PurchaseOrderItemCreateWithoutProductVariantInput!]
  connectOrCreate: [PurchaseOrderItemCreateOrConnectWithoutProductVariantInput!]
  upsert: [PurchaseOrderItemUpsertWithWhereUniqueWithoutProductVariantInput!]
  createMany: PurchaseOrderItemCreateManyProductVariantInputEnvelope
  set: [PurchaseOrderItemWhereUniqueInput!]
  disconnect: [PurchaseOrderItemWhereUniqueInput!]
  delete: [PurchaseOrderItemWhereUniqueInput!]
  connect: [PurchaseOrderItemWhereUniqueInput!]
  update: [PurchaseOrderItemUpdateWithWhereUniqueWithoutProductVariantInput!]
  updateMany: [PurchaseOrderItemUpdateManyWithWhereWithoutProductVariantInput!]
  deleteMany: [PurchaseOrderItemScalarWhereInput!]
}

input PurchaseOrderItemUpsertWithWhereUniqueWithoutProductVariantInput {
  where: PurchaseOrderItemWhereUniqueInput!
  update: PurchaseOrderItemUpdateWithoutProductVariantInput!
  create: PurchaseOrderItemCreateWithoutProductVariantInput!
}

input PurchaseOrderItemUpdateWithoutProductVariantInput {
  id: StringFieldUpdateOperationsInput
  quantity: IntFieldUpdateOperationsInput
  unitCost: FloatFieldUpdateOperationsInput
  purchaseOrder: PurchaseOrderUpdateOneRequiredWithoutItemsNestedInput
}

input PurchaseOrderUpdateOneRequiredWithoutItemsNestedInput {
  create: PurchaseOrderCreateWithoutItemsInput
  connectOrCreate: PurchaseOrderCreateOrConnectWithoutItemsInput
  upsert: PurchaseOrderUpsertWithoutItemsInput
  connect: PurchaseOrderWhereUniqueInput
  update: PurchaseOrderUpdateToOneWithWhereWithoutItemsInput
}

input PurchaseOrderUpsertWithoutItemsInput {
  update: PurchaseOrderUpdateWithoutItemsInput!
  create: PurchaseOrderCreateWithoutItemsInput!
  where: PurchaseOrderWhereInput
}

input PurchaseOrderUpdateWithoutItemsInput {
  id: StringFieldUpdateOperationsInput
  invoiceNumber: StringFieldUpdateOperationsInput
  status: EnumPurchaseOrderStatusFieldUpdateOperationsInput
  phase: EnumPurchasePhaseFieldUpdateOperationsInput
  dueDate: DateTimeFieldUpdateOperationsInput
  totalAmount: FloatFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  supplier: SupplierUpdateOneRequiredWithoutPurchaseOrdersNestedInput
  store: StoreUpdateOneWithoutPurchaseOrdersNestedInput
  receipts: StockReceiptBatchUpdateManyWithoutPurchaseOrderNestedInput
  payments: SupplierPaymentUpdateManyWithoutPurchaseOrderNestedInput
}

input SupplierUpdateOneRequiredWithoutPurchaseOrdersNestedInput {
  create: SupplierCreateWithoutPurchaseOrdersInput
  connectOrCreate: SupplierCreateOrConnectWithoutPurchaseOrdersInput
  upsert: SupplierUpsertWithoutPurchaseOrdersInput
  connect: SupplierWhereUniqueInput
  update: SupplierUpdateToOneWithWhereWithoutPurchaseOrdersInput
}

input SupplierUpsertWithoutPurchaseOrdersInput {
  update: SupplierUpdateWithoutPurchaseOrdersInput!
  create: SupplierCreateWithoutPurchaseOrdersInput!
  where: SupplierWhereInput
}

input SupplierUpdateWithoutPurchaseOrdersInput {
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  contactInfo: JSON
  isFrequent: BoolFieldUpdateOperationsInput
  creditLimit: FloatFieldUpdateOperationsInput
  currentBalance: FloatFieldUpdateOperationsInput
  paymentTerms: NullableStringFieldUpdateOperationsInput
  notes: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  payments: SupplierPaymentUpdateManyWithoutSupplierNestedInput
  returns: PurchaseReturnUpdateManyWithoutSupplierNestedInput
  catalogs: SupplierCatalogUpdateManyWithoutSupplierNestedInput
  quotes: SupplierQuoteUpdateManyWithoutSupplierNestedInput
  user: UserUpdateOneWithoutSupplierNestedInput
}

input SupplierPaymentUpdateManyWithoutSupplierNestedInput {
  create: [SupplierPaymentCreateWithoutSupplierInput!]
  connectOrCreate: [SupplierPaymentCreateOrConnectWithoutSupplierInput!]
  upsert: [SupplierPaymentUpsertWithWhereUniqueWithoutSupplierInput!]
  createMany: SupplierPaymentCreateManySupplierInputEnvelope
  set: [SupplierPaymentWhereUniqueInput!]
  disconnect: [SupplierPaymentWhereUniqueInput!]
  delete: [SupplierPaymentWhereUniqueInput!]
  connect: [SupplierPaymentWhereUniqueInput!]
  update: [SupplierPaymentUpdateWithWhereUniqueWithoutSupplierInput!]
  updateMany: [SupplierPaymentUpdateManyWithWhereWithoutSupplierInput!]
  deleteMany: [SupplierPaymentScalarWhereInput!]
}

input SupplierPaymentUpsertWithWhereUniqueWithoutSupplierInput {
  where: SupplierPaymentWhereUniqueInput!
  update: SupplierPaymentUpdateWithoutSupplierInput!
  create: SupplierPaymentCreateWithoutSupplierInput!
}

input SupplierPaymentUpdateWithoutSupplierInput {
  id: StringFieldUpdateOperationsInput
  amount: FloatFieldUpdateOperationsInput
  paymentDate: DateTimeFieldUpdateOperationsInput
  method: StringFieldUpdateOperationsInput
  notes: NullableStringFieldUpdateOperationsInput
  purchaseOrder: PurchaseOrderUpdateOneWithoutPaymentsNestedInput
}

input PurchaseOrderUpdateOneWithoutPaymentsNestedInput {
  create: PurchaseOrderCreateWithoutPaymentsInput
  connectOrCreate: PurchaseOrderCreateOrConnectWithoutPaymentsInput
  upsert: PurchaseOrderUpsertWithoutPaymentsInput
  disconnect: PurchaseOrderWhereInput
  delete: PurchaseOrderWhereInput
  connect: PurchaseOrderWhereUniqueInput
  update: PurchaseOrderUpdateToOneWithWhereWithoutPaymentsInput
}

input PurchaseOrderUpsertWithoutPaymentsInput {
  update: PurchaseOrderUpdateWithoutPaymentsInput!
  create: PurchaseOrderCreateWithoutPaymentsInput!
  where: PurchaseOrderWhereInput
}

input PurchaseOrderUpdateWithoutPaymentsInput {
  id: StringFieldUpdateOperationsInput
  invoiceNumber: StringFieldUpdateOperationsInput
  status: EnumPurchaseOrderStatusFieldUpdateOperationsInput
  phase: EnumPurchasePhaseFieldUpdateOperationsInput
  dueDate: DateTimeFieldUpdateOperationsInput
  totalAmount: FloatFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  supplier: SupplierUpdateOneRequiredWithoutPurchaseOrdersNestedInput
  store: StoreUpdateOneWithoutPurchaseOrdersNestedInput
  items: PurchaseOrderItemUpdateManyWithoutPurchaseOrderNestedInput
  receipts: StockReceiptBatchUpdateManyWithoutPurchaseOrderNestedInput
}

input PurchaseOrderItemUpdateManyWithoutPurchaseOrderNestedInput {
  create: [PurchaseOrderItemCreateWithoutPurchaseOrderInput!]
  connectOrCreate: [PurchaseOrderItemCreateOrConnectWithoutPurchaseOrderInput!]
  upsert: [PurchaseOrderItemUpsertWithWhereUniqueWithoutPurchaseOrderInput!]
  createMany: PurchaseOrderItemCreateManyPurchaseOrderInputEnvelope
  set: [PurchaseOrderItemWhereUniqueInput!]
  disconnect: [PurchaseOrderItemWhereUniqueInput!]
  delete: [PurchaseOrderItemWhereUniqueInput!]
  connect: [PurchaseOrderItemWhereUniqueInput!]
  update: [PurchaseOrderItemUpdateWithWhereUniqueWithoutPurchaseOrderInput!]
  updateMany: [PurchaseOrderItemUpdateManyWithWhereWithoutPurchaseOrderInput!]
  deleteMany: [PurchaseOrderItemScalarWhereInput!]
}

input PurchaseOrderItemUpsertWithWhereUniqueWithoutPurchaseOrderInput {
  where: PurchaseOrderItemWhereUniqueInput!
  update: PurchaseOrderItemUpdateWithoutPurchaseOrderInput!
  create: PurchaseOrderItemCreateWithoutPurchaseOrderInput!
}

input PurchaseOrderItemUpdateWithoutPurchaseOrderInput {
  id: StringFieldUpdateOperationsInput
  quantity: IntFieldUpdateOperationsInput
  unitCost: FloatFieldUpdateOperationsInput
  productVariant: ProductVariantUpdateOneRequiredWithoutPurchaseOrderItemNestedInput
}

input ProductVariantUpdateOneRequiredWithoutPurchaseOrderItemNestedInput {
  create: ProductVariantCreateWithoutPurchaseOrderItemInput
  connectOrCreate: ProductVariantCreateOrConnectWithoutPurchaseOrderItemInput
  upsert: ProductVariantUpsertWithoutPurchaseOrderItemInput
  connect: ProductVariantWhereUniqueInput
  update: ProductVariantUpdateToOneWithWhereWithoutPurchaseOrderItemInput
}

input ProductVariantUpsertWithoutPurchaseOrderItemInput {
  update: ProductVariantUpdateWithoutPurchaseOrderItemInput!
  create: ProductVariantCreateWithoutPurchaseOrderItemInput!
  where: ProductVariantWhereInput
}

input ProductVariantUpdateWithoutPurchaseOrderItemInput {
  id: StringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  size: StringFieldUpdateOperationsInput
  concentration: StringFieldUpdateOperationsInput
  packaging: StringFieldUpdateOperationsInput
  barcode: NullableStringFieldUpdateOperationsInput
  price: FloatFieldUpdateOperationsInput
  resellerPrice: FloatFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  product: ProductUpdateOneWithoutVariantsNestedInput
  stockItems: StockUpdateManyWithoutProductVariantNestedInput
  receiptItems: StockReceiptBatchItemUpdateManyWithoutProductVariantNestedInput
  quotationItems: QuotationItemUpdateManyWithoutProductVariantNestedInput
  resellerItems: ResellerSaleItemUpdateManyWithoutProductVariantNestedInput
  consumerItems: ConsumerSaleItemUpdateManyWithoutProductVariantNestedInput
  returnItems: SalesReturnItemUpdateManyWithoutProductVariantNestedInput
  purchaseReturnItems: PurchaseReturnItemUpdateManyWithoutProductVariantNestedInput
  transferItems: StockTransferItemUpdateManyWithoutProductVariantNestedInput
  stats: ProductSalesStatsUpdateOneWithoutProductVariantNestedInput
  StockMovementItem: StockMovementItemUpdateManyWithoutProductVariantNestedInput
  PurchaseRequisitionItem: PurchaseRequisitionItemUpdateManyWithoutProductVariantNestedInput
  SupplierCatalog: SupplierCatalogUpdateManyWithoutProductVariantNestedInput
  SupplierQuoteItem: SupplierQuoteItemUpdateManyWithoutProductVariantNestedInput
  ProductVariantTierPrice: ProductVariantTierPriceUpdateManyWithoutVariantNestedInput
  facets: VariantFacetValueUpdateManyWithoutVariantNestedInput
}

input StockMovementItemUpdateManyWithoutProductVariantNestedInput {
  create: [StockMovementItemCreateWithoutProductVariantInput!]
  connectOrCreate: [StockMovementItemCreateOrConnectWithoutProductVariantInput!]
  upsert: [StockMovementItemUpsertWithWhereUniqueWithoutProductVariantInput!]
  createMany: StockMovementItemCreateManyProductVariantInputEnvelope
  set: [StockMovementItemWhereUniqueInput!]
  disconnect: [StockMovementItemWhereUniqueInput!]
  delete: [StockMovementItemWhereUniqueInput!]
  connect: [StockMovementItemWhereUniqueInput!]
  update: [StockMovementItemUpdateWithWhereUniqueWithoutProductVariantInput!]
  updateMany: [StockMovementItemUpdateManyWithWhereWithoutProductVariantInput!]
  deleteMany: [StockMovementItemScalarWhereInput!]
}

input StockMovementItemUpsertWithWhereUniqueWithoutProductVariantInput {
  where: StockMovementItemWhereUniqueInput!
  update: StockMovementItemUpdateWithoutProductVariantInput!
  create: StockMovementItemCreateWithoutProductVariantInput!
}

input StockMovementItemUpdateWithoutProductVariantInput {
  id: StringFieldUpdateOperationsInput
  quantity: IntFieldUpdateOperationsInput
  movement: StockMovementUpdateOneRequiredWithoutItemsNestedInput
}

input StockMovementUpdateOneRequiredWithoutItemsNestedInput {
  create: StockMovementCreateWithoutItemsInput
  connectOrCreate: StockMovementCreateOrConnectWithoutItemsInput
  upsert: StockMovementUpsertWithoutItemsInput
  connect: StockMovementWhereUniqueInput
  update: StockMovementUpdateToOneWithWhereWithoutItemsInput
}

input StockMovementUpsertWithoutItemsInput {
  update: StockMovementUpdateWithoutItemsInput!
  create: StockMovementCreateWithoutItemsInput!
  where: StockMovementWhereInput
}

input StockMovementUpdateWithoutItemsInput {
  id: StringFieldUpdateOperationsInput
  direction: EnumMovementDirectionFieldUpdateOperationsInput
  movementType: EnumMovementTypeFieldUpdateOperationsInput
  referenceEntity: StringFieldUpdateOperationsInput
  referenceId: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  store: StoreUpdateOneRequiredWithoutMovementsNestedInput
}

input StoreUpdateOneRequiredWithoutMovementsNestedInput {
  create: StoreCreateWithoutMovementsInput
  connectOrCreate: StoreCreateOrConnectWithoutMovementsInput
  upsert: StoreUpsertWithoutMovementsInput
  connect: StoreWhereUniqueInput
  update: StoreUpdateToOneWithWhereWithoutMovementsInput
}

input StoreUpsertWithoutMovementsInput {
  update: StoreUpdateWithoutMovementsInput!
  create: StoreCreateWithoutMovementsInput!
  where: StoreWhereInput
}

input StoreUpdateWithoutMovementsInput {
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  location: NullableStringFieldUpdateOperationsInput
  isMain: BoolFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  manager: UserUpdateOneRequiredWithoutStoreNestedInput
  stocks: StockUpdateManyWithoutStoreNestedInput
  receipts: StockReceiptBatchUpdateManyWithoutStoreNestedInput
  transfersOut: StockTransferUpdateManyWithoutFromStoreNestedInput
  transfersIn: StockTransferUpdateManyWithoutToStoreNestedInput
  customerSales: ConsumerSaleUpdateManyWithoutStoreNestedInput
  salesReturns: SalesReturnUpdateManyWithoutStoreNestedInput
  resellerSales: ResellerSaleUpdateManyWithoutStoreNestedInput
  Customer: CustomerUpdateManyWithoutPreferredStoreNestedInput
  CustomerProfile: CustomerProfileUpdateManyWithoutPreferredStoreNestedInput
  Quotation: QuotationUpdateManyWithoutStoreNestedInput
  PurchaseRequisition: PurchaseRequisitionUpdateManyWithoutStoreNestedInput
  purchaseOrders: PurchaseOrderUpdateManyWithoutStoreNestedInput
  InvoiceImport: InvoiceImportUpdateManyWithoutStoreNestedInput
}

input PurchaseRequisitionUpdateManyWithoutStoreNestedInput {
  create: [PurchaseRequisitionCreateWithoutStoreInput!]
  connectOrCreate: [PurchaseRequisitionCreateOrConnectWithoutStoreInput!]
  upsert: [PurchaseRequisitionUpsertWithWhereUniqueWithoutStoreInput!]
  createMany: PurchaseRequisitionCreateManyStoreInputEnvelope
  set: [PurchaseRequisitionWhereUniqueInput!]
  disconnect: [PurchaseRequisitionWhereUniqueInput!]
  delete: [PurchaseRequisitionWhereUniqueInput!]
  connect: [PurchaseRequisitionWhereUniqueInput!]
  update: [PurchaseRequisitionUpdateWithWhereUniqueWithoutStoreInput!]
  updateMany: [PurchaseRequisitionUpdateManyWithWhereWithoutStoreInput!]
  deleteMany: [PurchaseRequisitionScalarWhereInput!]
}

input PurchaseRequisitionUpsertWithWhereUniqueWithoutStoreInput {
  where: PurchaseRequisitionWhereUniqueInput!
  update: PurchaseRequisitionUpdateWithoutStoreInput!
  create: PurchaseRequisitionCreateWithoutStoreInput!
}

input PurchaseRequisitionUpdateWithoutStoreInput {
  id: StringFieldUpdateOperationsInput
  status: EnumPurchaseRequisitionStatusFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  requestedBy: UserUpdateOneRequiredWithoutPurchaseRequisitionNestedInput
  items: PurchaseRequisitionItemUpdateManyWithoutRequisitionNestedInput
  quotes: SupplierQuoteUpdateManyWithoutRequisitionNestedInput
}

input EnumPurchaseRequisitionStatusFieldUpdateOperationsInput {
  set: PurchaseRequisitionStatus
}

input UserUpdateOneRequiredWithoutPurchaseRequisitionNestedInput {
  create: UserCreateWithoutPurchaseRequisitionInput
  connectOrCreate: UserCreateOrConnectWithoutPurchaseRequisitionInput
  upsert: UserUpsertWithoutPurchaseRequisitionInput
  connect: UserWhereUniqueInput
  update: UserUpdateToOneWithWhereWithoutPurchaseRequisitionInput
}

input UserUpsertWithoutPurchaseRequisitionInput {
  update: UserUpdateWithoutPurchaseRequisitionInput!
  create: UserCreateWithoutPurchaseRequisitionInput!
  where: UserWhereInput
}

input UserUpdateWithoutPurchaseRequisitionInput {
  id: StringFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  passwordHash: StringFieldUpdateOperationsInput
  tier: NullableEnumUserTierFieldUpdateOperationsInput
  referralCode: NullableStringFieldUpdateOperationsInput
  referredBy: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  isEmailVerified: BoolFieldUpdateOperationsInput
  emailVerificationToken: NullableStringFieldUpdateOperationsInput
  emailVerificationTokenExpiry: NullableDateTimeFieldUpdateOperationsInput
  role: RoleUpdateOneRequiredWithoutUsersNestedInput
  resellerProfile: ResellerProfileUpdateOneWithoutUserNestedInput
  customerProfile: CustomerProfileUpdateOneWithoutUserNestedInput
  resellerPaymentsMade: ResellerPaymentUpdateManyWithoutResellerNestedInput
  resellerPaymentsReceived: ResellerPaymentUpdateManyWithoutReceivedByNestedInput
  adminLogs: AdminActionLogUpdateManyWithoutAdminNestedInput
  supportMessages: SupportMessageUpdateManyWithoutUserNestedInput
  ConsumerSale: ConsumerSaleUpdateManyWithoutBillerNestedInput
  ConsumerSaleAdjustedBys: ConsumerSaleUpdateManyWithoutAdjustedByNestedInput
  StockReceiptBatchReceivedBys: StockReceiptBatchUpdateManyWithoutReceivedByNestedInput
  StockReceiptBatchConfirmedBys: StockReceiptBatchUpdateManyWithoutConfirmedByNestedInput
  StockTransferRequests: StockTransferUpdateManyWithoutRequestedByNestedInput
  StockTransferApprovals: StockTransferUpdateManyWithoutApprovedByNestedInput
  Store: StoreUpdateManyWithoutManagerNestedInput
  ConsumerReceipt: ConsumerReceiptUpdateManyWithoutIssuedByNestedInput
  ResellerSales: ResellerSaleUpdateManyWithoutResellerNestedInput
  BillerResellerSale: ResellerSaleUpdateManyWithoutBillerNestedInput
  ResellerSale: ResellerSaleUpdateManyWithoutApprovedByNestedInput
  SalesReturnReceivers: SalesReturnUpdateManyWithoutReceivedByNestedInput
  SalesReturnRequesters: SalesReturnUpdateManyWithoutReturnedByNestedInput
  SalesReturn: SalesReturnUpdateManyWithoutApprovedByNestedInput
  PurchaseReturnInitiators: PurchaseReturnUpdateManyWithoutInitiatedByNestedInput
  PurchaseReturnApprovers: PurchaseReturnUpdateManyWithoutApprovedByNestedInput
  Payment: PaymentUpdateManyWithoutReceivedByNestedInput
  ResellerTierHistory: ResellerTierHistoryUpdateManyWithoutUserNestedInput
  ResellerTierHistoryChangedBys: ResellerTierHistoryUpdateManyWithoutAdminNestedInput
  ResellerProfile: ResellerProfileUpdateManyWithoutBillerNestedInput
  RequestedResellers: ResellerProfileUpdateManyWithoutRequestedBillerNestedInput
  Notification: NotificationUpdateManyWithoutUserNestedInput
  Fulfillment: FulfillmentUpdateManyWithoutDeliveryPersonnelNestedInput
  BillerQuotation: QuotationUpdateManyWithoutBillerNestedInput
  ResellerQuotation: QuotationUpdateManyWithoutResellerNestedInput
  Supplier: SupplierUpdateManyWithoutUserNestedInput
}

input QuotationUpdateManyWithoutResellerNestedInput {
  create: [QuotationCreateWithoutResellerInput!]
  connectOrCreate: [QuotationCreateOrConnectWithoutResellerInput!]
  upsert: [QuotationUpsertWithWhereUniqueWithoutResellerInput!]
  createMany: QuotationCreateManyResellerInputEnvelope
  set: [QuotationWhereUniqueInput!]
  disconnect: [QuotationWhereUniqueInput!]
  delete: [QuotationWhereUniqueInput!]
  connect: [QuotationWhereUniqueInput!]
  update: [QuotationUpdateWithWhereUniqueWithoutResellerInput!]
  updateMany: [QuotationUpdateManyWithWhereWithoutResellerInput!]
  deleteMany: [QuotationScalarWhereInput!]
}

input QuotationUpsertWithWhereUniqueWithoutResellerInput {
  where: QuotationWhereUniqueInput!
  update: QuotationUpdateWithoutResellerInput!
  create: QuotationCreateWithoutResellerInput!
}

input QuotationUpdateWithoutResellerInput {
  id: StringFieldUpdateOperationsInput
  type: EnumSaleTypeFieldUpdateOperationsInput
  channel: EnumSaleChannelFieldUpdateOperationsInput
  status: EnumQuotationStatusFieldUpdateOperationsInput
  totalAmount: FloatFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  store: StoreUpdateOneRequiredWithoutQuotationNestedInput
  biller: UserUpdateOneWithoutBillerQuotationNestedInput
  consumer: CustomerUpdateOneWithoutQuotationNestedInput
  items: QuotationItemUpdateManyWithoutQuotationNestedInput
  sale: ResellerSaleUpdateOneWithoutQuotationNestedInput
  SaleOrder: SaleOrderUpdateOneWithoutQuotationNestedInput
  ConsumerSale: ConsumerSaleUpdateManyWithoutQuotationNestedInput
}

input SaleOrderUpdateOneWithoutQuotationNestedInput {
  create: SaleOrderCreateWithoutQuotationInput
  connectOrCreate: SaleOrderCreateOrConnectWithoutQuotationInput
  upsert: SaleOrderUpsertWithoutQuotationInput
  disconnect: SaleOrderWhereInput
  delete: SaleOrderWhereInput
  connect: SaleOrderWhereUniqueInput
  update: SaleOrderUpdateToOneWithWhereWithoutQuotationInput
}

input SaleOrderUpsertWithoutQuotationInput {
  update: SaleOrderUpdateWithoutQuotationInput!
  create: SaleOrderCreateWithoutQuotationInput!
  where: SaleOrderWhereInput
}

input SaleOrderUpdateWithoutQuotationInput {
  id: StringFieldUpdateOperationsInput
  storeId: StringFieldUpdateOperationsInput
  billerId: StringFieldUpdateOperationsInput
  type: EnumSaleTypeFieldUpdateOperationsInput
  status: EnumSaleStatusFieldUpdateOperationsInput
  phase: EnumOrderPhaseFieldUpdateOperationsInput
  totalAmount: FloatFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  resellerSaleid: NullableStringFieldUpdateOperationsInput
  consumerSale: ConsumerSaleUpdateOneWithoutSaleOrderNestedInput
  resellerSale: ResellerSaleUpdateOneWithoutSaleOrderNestedInput
  fulfillment: FulfillmentUpdateOneWithoutSaleOrderNestedInput
  ConsumerPayment: ConsumerPaymentUpdateManyWithoutSaleOrderNestedInput
  ResellerPayment: ResellerPaymentUpdateManyWithoutSaleOrderNestedInput
}

input FulfillmentUpdateOneWithoutSaleOrderNestedInput {
  create: FulfillmentCreateWithoutSaleOrderInput
  connectOrCreate: FulfillmentCreateOrConnectWithoutSaleOrderInput
  upsert: FulfillmentUpsertWithoutSaleOrderInput
  disconnect: FulfillmentWhereInput
  delete: FulfillmentWhereInput
  connect: FulfillmentWhereUniqueInput
  update: FulfillmentUpdateToOneWithWhereWithoutSaleOrderInput
}

input FulfillmentUpsertWithoutSaleOrderInput {
  update: FulfillmentUpdateWithoutSaleOrderInput!
  create: FulfillmentCreateWithoutSaleOrderInput!
  where: FulfillmentWhereInput
}

input FulfillmentUpdateWithoutSaleOrderInput {
  id: StringFieldUpdateOperationsInput
  type: EnumFulfillmentTypeFieldUpdateOperationsInput
  deliveryAddress: NullableStringFieldUpdateOperationsInput
  status: EnumFulfillmentStatusFieldUpdateOperationsInput
  cost: NullableFloatFieldUpdateOperationsInput
  confirmationPin: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  deliveryPersonnel: UserUpdateOneWithoutFulfillmentNestedInput
}

input UserUpdateOneWithoutFulfillmentNestedInput {
  create: UserCreateWithoutFulfillmentInput
  connectOrCreate: UserCreateOrConnectWithoutFulfillmentInput
  upsert: UserUpsertWithoutFulfillmentInput
  disconnect: UserWhereInput
  delete: UserWhereInput
  connect: UserWhereUniqueInput
  update: UserUpdateToOneWithWhereWithoutFulfillmentInput
}

input UserUpsertWithoutFulfillmentInput {
  update: UserUpdateWithoutFulfillmentInput!
  create: UserCreateWithoutFulfillmentInput!
  where: UserWhereInput
}

input UserUpdateWithoutFulfillmentInput {
  id: StringFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  passwordHash: StringFieldUpdateOperationsInput
  tier: NullableEnumUserTierFieldUpdateOperationsInput
  referralCode: NullableStringFieldUpdateOperationsInput
  referredBy: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  isEmailVerified: BoolFieldUpdateOperationsInput
  emailVerificationToken: NullableStringFieldUpdateOperationsInput
  emailVerificationTokenExpiry: NullableDateTimeFieldUpdateOperationsInput
  role: RoleUpdateOneRequiredWithoutUsersNestedInput
  resellerProfile: ResellerProfileUpdateOneWithoutUserNestedInput
  customerProfile: CustomerProfileUpdateOneWithoutUserNestedInput
  resellerPaymentsMade: ResellerPaymentUpdateManyWithoutResellerNestedInput
  resellerPaymentsReceived: ResellerPaymentUpdateManyWithoutReceivedByNestedInput
  adminLogs: AdminActionLogUpdateManyWithoutAdminNestedInput
  supportMessages: SupportMessageUpdateManyWithoutUserNestedInput
  ConsumerSale: ConsumerSaleUpdateManyWithoutBillerNestedInput
  ConsumerSaleAdjustedBys: ConsumerSaleUpdateManyWithoutAdjustedByNestedInput
  StockReceiptBatchReceivedBys: StockReceiptBatchUpdateManyWithoutReceivedByNestedInput
  StockReceiptBatchConfirmedBys: StockReceiptBatchUpdateManyWithoutConfirmedByNestedInput
  StockTransferRequests: StockTransferUpdateManyWithoutRequestedByNestedInput
  StockTransferApprovals: StockTransferUpdateManyWithoutApprovedByNestedInput
  Store: StoreUpdateManyWithoutManagerNestedInput
  ConsumerReceipt: ConsumerReceiptUpdateManyWithoutIssuedByNestedInput
  ResellerSales: ResellerSaleUpdateManyWithoutResellerNestedInput
  BillerResellerSale: ResellerSaleUpdateManyWithoutBillerNestedInput
  ResellerSale: ResellerSaleUpdateManyWithoutApprovedByNestedInput
  SalesReturnReceivers: SalesReturnUpdateManyWithoutReceivedByNestedInput
  SalesReturnRequesters: SalesReturnUpdateManyWithoutReturnedByNestedInput
  SalesReturn: SalesReturnUpdateManyWithoutApprovedByNestedInput
  PurchaseReturnInitiators: PurchaseReturnUpdateManyWithoutInitiatedByNestedInput
  PurchaseReturnApprovers: PurchaseReturnUpdateManyWithoutApprovedByNestedInput
  Payment: PaymentUpdateManyWithoutReceivedByNestedInput
  ResellerTierHistory: ResellerTierHistoryUpdateManyWithoutUserNestedInput
  ResellerTierHistoryChangedBys: ResellerTierHistoryUpdateManyWithoutAdminNestedInput
  ResellerProfile: ResellerProfileUpdateManyWithoutBillerNestedInput
  RequestedResellers: ResellerProfileUpdateManyWithoutRequestedBillerNestedInput
  Notification: NotificationUpdateManyWithoutUserNestedInput
  BillerQuotation: QuotationUpdateManyWithoutBillerNestedInput
  ResellerQuotation: QuotationUpdateManyWithoutResellerNestedInput
  PurchaseRequisition: PurchaseRequisitionUpdateManyWithoutRequestedByNestedInput
  Supplier: SupplierUpdateManyWithoutUserNestedInput
}

input PurchaseRequisitionUpdateManyWithoutRequestedByNestedInput {
  create: [PurchaseRequisitionCreateWithoutRequestedByInput!]
  connectOrCreate: [PurchaseRequisitionCreateOrConnectWithoutRequestedByInput!]
  upsert: [PurchaseRequisitionUpsertWithWhereUniqueWithoutRequestedByInput!]
  createMany: PurchaseRequisitionCreateManyRequestedByInputEnvelope
  set: [PurchaseRequisitionWhereUniqueInput!]
  disconnect: [PurchaseRequisitionWhereUniqueInput!]
  delete: [PurchaseRequisitionWhereUniqueInput!]
  connect: [PurchaseRequisitionWhereUniqueInput!]
  update: [PurchaseRequisitionUpdateWithWhereUniqueWithoutRequestedByInput!]
  updateMany: [PurchaseRequisitionUpdateManyWithWhereWithoutRequestedByInput!]
  deleteMany: [PurchaseRequisitionScalarWhereInput!]
}

input PurchaseRequisitionUpsertWithWhereUniqueWithoutRequestedByInput {
  where: PurchaseRequisitionWhereUniqueInput!
  update: PurchaseRequisitionUpdateWithoutRequestedByInput!
  create: PurchaseRequisitionCreateWithoutRequestedByInput!
}

input PurchaseRequisitionUpdateWithoutRequestedByInput {
  id: StringFieldUpdateOperationsInput
  status: EnumPurchaseRequisitionStatusFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  store: StoreUpdateOneRequiredWithoutPurchaseRequisitionNestedInput
  items: PurchaseRequisitionItemUpdateManyWithoutRequisitionNestedInput
  quotes: SupplierQuoteUpdateManyWithoutRequisitionNestedInput
}

input StoreUpdateOneRequiredWithoutPurchaseRequisitionNestedInput {
  create: StoreCreateWithoutPurchaseRequisitionInput
  connectOrCreate: StoreCreateOrConnectWithoutPurchaseRequisitionInput
  upsert: StoreUpsertWithoutPurchaseRequisitionInput
  connect: StoreWhereUniqueInput
  update: StoreUpdateToOneWithWhereWithoutPurchaseRequisitionInput
}

input StoreUpsertWithoutPurchaseRequisitionInput {
  update: StoreUpdateWithoutPurchaseRequisitionInput!
  create: StoreCreateWithoutPurchaseRequisitionInput!
  where: StoreWhereInput
}

input StoreUpdateWithoutPurchaseRequisitionInput {
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  location: NullableStringFieldUpdateOperationsInput
  isMain: BoolFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  manager: UserUpdateOneRequiredWithoutStoreNestedInput
  stocks: StockUpdateManyWithoutStoreNestedInput
  receipts: StockReceiptBatchUpdateManyWithoutStoreNestedInput
  transfersOut: StockTransferUpdateManyWithoutFromStoreNestedInput
  transfersIn: StockTransferUpdateManyWithoutToStoreNestedInput
  customerSales: ConsumerSaleUpdateManyWithoutStoreNestedInput
  salesReturns: SalesReturnUpdateManyWithoutStoreNestedInput
  resellerSales: ResellerSaleUpdateManyWithoutStoreNestedInput
  movements: StockMovementUpdateManyWithoutStoreNestedInput
  Customer: CustomerUpdateManyWithoutPreferredStoreNestedInput
  CustomerProfile: CustomerProfileUpdateManyWithoutPreferredStoreNestedInput
  Quotation: QuotationUpdateManyWithoutStoreNestedInput
  purchaseOrders: PurchaseOrderUpdateManyWithoutStoreNestedInput
  InvoiceImport: InvoiceImportUpdateManyWithoutStoreNestedInput
}

input PurchaseOrderUpdateManyWithoutStoreNestedInput {
  create: [PurchaseOrderCreateWithoutStoreInput!]
  connectOrCreate: [PurchaseOrderCreateOrConnectWithoutStoreInput!]
  upsert: [PurchaseOrderUpsertWithWhereUniqueWithoutStoreInput!]
  createMany: PurchaseOrderCreateManyStoreInputEnvelope
  set: [PurchaseOrderWhereUniqueInput!]
  disconnect: [PurchaseOrderWhereUniqueInput!]
  delete: [PurchaseOrderWhereUniqueInput!]
  connect: [PurchaseOrderWhereUniqueInput!]
  update: [PurchaseOrderUpdateWithWhereUniqueWithoutStoreInput!]
  updateMany: [PurchaseOrderUpdateManyWithWhereWithoutStoreInput!]
  deleteMany: [PurchaseOrderScalarWhereInput!]
}

input PurchaseOrderUpsertWithWhereUniqueWithoutStoreInput {
  where: PurchaseOrderWhereUniqueInput!
  update: PurchaseOrderUpdateWithoutStoreInput!
  create: PurchaseOrderCreateWithoutStoreInput!
}

input PurchaseOrderUpdateWithoutStoreInput {
  id: StringFieldUpdateOperationsInput
  invoiceNumber: StringFieldUpdateOperationsInput
  status: EnumPurchaseOrderStatusFieldUpdateOperationsInput
  phase: EnumPurchasePhaseFieldUpdateOperationsInput
  dueDate: DateTimeFieldUpdateOperationsInput
  totalAmount: FloatFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  supplier: SupplierUpdateOneRequiredWithoutPurchaseOrdersNestedInput
  items: PurchaseOrderItemUpdateManyWithoutPurchaseOrderNestedInput
  receipts: StockReceiptBatchUpdateManyWithoutPurchaseOrderNestedInput
  payments: SupplierPaymentUpdateManyWithoutPurchaseOrderNestedInput
}

input StockReceiptBatchUpdateManyWithoutPurchaseOrderNestedInput {
  create: [StockReceiptBatchCreateWithoutPurchaseOrderInput!]
  connectOrCreate: [StockReceiptBatchCreateOrConnectWithoutPurchaseOrderInput!]
  upsert: [StockReceiptBatchUpsertWithWhereUniqueWithoutPurchaseOrderInput!]
  set: [StockReceiptBatchWhereUniqueInput!]
  disconnect: [StockReceiptBatchWhereUniqueInput!]
  delete: [StockReceiptBatchWhereUniqueInput!]
  connect: [StockReceiptBatchWhereUniqueInput!]
  update: [StockReceiptBatchUpdateWithWhereUniqueWithoutPurchaseOrderInput!]
  updateMany: [StockReceiptBatchUpdateManyWithWhereWithoutPurchaseOrderInput!]
  deleteMany: [StockReceiptBatchScalarWhereInput!]
}

input StockReceiptBatchUpsertWithWhereUniqueWithoutPurchaseOrderInput {
  where: StockReceiptBatchWhereUniqueInput!
  update: StockReceiptBatchUpdateWithoutPurchaseOrderInput!
  create: StockReceiptBatchCreateWithoutPurchaseOrderInput!
}

input StockReceiptBatchUpdateWithoutPurchaseOrderInput {
  id: StringFieldUpdateOperationsInput
  purchaseOrderId: StringFieldUpdateOperationsInput
  waybillUrl: NullableStringFieldUpdateOperationsInput
  receivedAt: DateTimeFieldUpdateOperationsInput
  store: StoreUpdateOneRequiredWithoutReceiptsNestedInput
  receivedBy: UserUpdateOneRequiredWithoutStockReceiptBatchReceivedBysNestedInput
  confirmedBy: UserUpdateOneRequiredWithoutStockReceiptBatchConfirmedBysNestedInput
  items: StockReceiptBatchItemUpdateManyWithoutBatchNestedInput
  purchaseReturns: PurchaseReturnItemUpdateManyWithoutBatchNestedInput
}

input PurchaseReturnItemUpdateManyWithoutBatchNestedInput {
  create: [PurchaseReturnItemCreateWithoutBatchInput!]
  connectOrCreate: [PurchaseReturnItemCreateOrConnectWithoutBatchInput!]
  upsert: [PurchaseReturnItemUpsertWithWhereUniqueWithoutBatchInput!]
  createMany: PurchaseReturnItemCreateManyBatchInputEnvelope
  set: [PurchaseReturnItemWhereUniqueInput!]
  disconnect: [PurchaseReturnItemWhereUniqueInput!]
  delete: [PurchaseReturnItemWhereUniqueInput!]
  connect: [PurchaseReturnItemWhereUniqueInput!]
  update: [PurchaseReturnItemUpdateWithWhereUniqueWithoutBatchInput!]
  updateMany: [PurchaseReturnItemUpdateManyWithWhereWithoutBatchInput!]
  deleteMany: [PurchaseReturnItemScalarWhereInput!]
}

input PurchaseReturnItemUpsertWithWhereUniqueWithoutBatchInput {
  where: PurchaseReturnItemWhereUniqueInput!
  update: PurchaseReturnItemUpdateWithoutBatchInput!
  create: PurchaseReturnItemCreateWithoutBatchInput!
}

input PurchaseReturnItemUpdateWithoutBatchInput {
  id: StringFieldUpdateOperationsInput
  quantity: IntFieldUpdateOperationsInput
  return: PurchaseReturnUpdateOneRequiredWithoutItemsNestedInput
  productVariant: ProductVariantUpdateOneRequiredWithoutPurchaseReturnItemsNestedInput
}

input ProductVariantUpdateOneRequiredWithoutPurchaseReturnItemsNestedInput {
  create: ProductVariantCreateWithoutPurchaseReturnItemsInput
  connectOrCreate: ProductVariantCreateOrConnectWithoutPurchaseReturnItemsInput
  upsert: ProductVariantUpsertWithoutPurchaseReturnItemsInput
  connect: ProductVariantWhereUniqueInput
  update: ProductVariantUpdateToOneWithWhereWithoutPurchaseReturnItemsInput
}

input ProductVariantUpsertWithoutPurchaseReturnItemsInput {
  update: ProductVariantUpdateWithoutPurchaseReturnItemsInput!
  create: ProductVariantCreateWithoutPurchaseReturnItemsInput!
  where: ProductVariantWhereInput
}

input ProductVariantUpdateWithoutPurchaseReturnItemsInput {
  id: StringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  size: StringFieldUpdateOperationsInput
  concentration: StringFieldUpdateOperationsInput
  packaging: StringFieldUpdateOperationsInput
  barcode: NullableStringFieldUpdateOperationsInput
  price: FloatFieldUpdateOperationsInput
  resellerPrice: FloatFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  product: ProductUpdateOneWithoutVariantsNestedInput
  stockItems: StockUpdateManyWithoutProductVariantNestedInput
  receiptItems: StockReceiptBatchItemUpdateManyWithoutProductVariantNestedInput
  quotationItems: QuotationItemUpdateManyWithoutProductVariantNestedInput
  resellerItems: ResellerSaleItemUpdateManyWithoutProductVariantNestedInput
  consumerItems: ConsumerSaleItemUpdateManyWithoutProductVariantNestedInput
  returnItems: SalesReturnItemUpdateManyWithoutProductVariantNestedInput
  transferItems: StockTransferItemUpdateManyWithoutProductVariantNestedInput
  stats: ProductSalesStatsUpdateOneWithoutProductVariantNestedInput
  PurchaseOrderItem: PurchaseOrderItemUpdateManyWithoutProductVariantNestedInput
  StockMovementItem: StockMovementItemUpdateManyWithoutProductVariantNestedInput
  PurchaseRequisitionItem: PurchaseRequisitionItemUpdateManyWithoutProductVariantNestedInput
  SupplierCatalog: SupplierCatalogUpdateManyWithoutProductVariantNestedInput
  SupplierQuoteItem: SupplierQuoteItemUpdateManyWithoutProductVariantNestedInput
  ProductVariantTierPrice: ProductVariantTierPriceUpdateManyWithoutVariantNestedInput
  facets: VariantFacetValueUpdateManyWithoutVariantNestedInput
}

input PurchaseRequisitionItemUpdateManyWithoutProductVariantNestedInput {
  create: [PurchaseRequisitionItemCreateWithoutProductVariantInput!]
  connectOrCreate: [PurchaseRequisitionItemCreateOrConnectWithoutProductVariantInput!]
  upsert: [PurchaseRequisitionItemUpsertWithWhereUniqueWithoutProductVariantInput!]
  createMany: PurchaseRequisitionItemCreateManyProductVariantInputEnvelope
  set: [PurchaseRequisitionItemWhereUniqueInput!]
  disconnect: [PurchaseRequisitionItemWhereUniqueInput!]
  delete: [PurchaseRequisitionItemWhereUniqueInput!]
  connect: [PurchaseRequisitionItemWhereUniqueInput!]
  update: [PurchaseRequisitionItemUpdateWithWhereUniqueWithoutProductVariantInput!]
  updateMany: [PurchaseRequisitionItemUpdateManyWithWhereWithoutProductVariantInput!]
  deleteMany: [PurchaseRequisitionItemScalarWhereInput!]
}

input PurchaseRequisitionItemUpsertWithWhereUniqueWithoutProductVariantInput {
  where: PurchaseRequisitionItemWhereUniqueInput!
  update: PurchaseRequisitionItemUpdateWithoutProductVariantInput!
  create: PurchaseRequisitionItemCreateWithoutProductVariantInput!
}

input PurchaseRequisitionItemUpdateWithoutProductVariantInput {
  id: StringFieldUpdateOperationsInput
  requestedQty: IntFieldUpdateOperationsInput
  notes: NullableStringFieldUpdateOperationsInput
  requisition: PurchaseRequisitionUpdateOneRequiredWithoutItemsNestedInput
}

input PurchaseRequisitionUpdateOneRequiredWithoutItemsNestedInput {
  create: PurchaseRequisitionCreateWithoutItemsInput
  connectOrCreate: PurchaseRequisitionCreateOrConnectWithoutItemsInput
  upsert: PurchaseRequisitionUpsertWithoutItemsInput
  connect: PurchaseRequisitionWhereUniqueInput
  update: PurchaseRequisitionUpdateToOneWithWhereWithoutItemsInput
}

input PurchaseRequisitionUpsertWithoutItemsInput {
  update: PurchaseRequisitionUpdateWithoutItemsInput!
  create: PurchaseRequisitionCreateWithoutItemsInput!
  where: PurchaseRequisitionWhereInput
}

input PurchaseRequisitionUpdateWithoutItemsInput {
  id: StringFieldUpdateOperationsInput
  status: EnumPurchaseRequisitionStatusFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  store: StoreUpdateOneRequiredWithoutPurchaseRequisitionNestedInput
  requestedBy: UserUpdateOneRequiredWithoutPurchaseRequisitionNestedInput
  quotes: SupplierQuoteUpdateManyWithoutRequisitionNestedInput
}

input SupplierQuoteUpdateManyWithoutRequisitionNestedInput {
  create: [SupplierQuoteCreateWithoutRequisitionInput!]
  connectOrCreate: [SupplierQuoteCreateOrConnectWithoutRequisitionInput!]
  upsert: [SupplierQuoteUpsertWithWhereUniqueWithoutRequisitionInput!]
  createMany: SupplierQuoteCreateManyRequisitionInputEnvelope
  set: [SupplierQuoteWhereUniqueInput!]
  disconnect: [SupplierQuoteWhereUniqueInput!]
  delete: [SupplierQuoteWhereUniqueInput!]
  connect: [SupplierQuoteWhereUniqueInput!]
  update: [SupplierQuoteUpdateWithWhereUniqueWithoutRequisitionInput!]
  updateMany: [SupplierQuoteUpdateManyWithWhereWithoutRequisitionInput!]
  deleteMany: [SupplierQuoteScalarWhereInput!]
}

input SupplierQuoteUpsertWithWhereUniqueWithoutRequisitionInput {
  where: SupplierQuoteWhereUniqueInput!
  update: SupplierQuoteUpdateWithoutRequisitionInput!
  create: SupplierQuoteCreateWithoutRequisitionInput!
}

input SupplierQuoteUpdateWithoutRequisitionInput {
  id: StringFieldUpdateOperationsInput
  status: EnumSupplierQuoteStatusFieldUpdateOperationsInput
  validUntil: NullableDateTimeFieldUpdateOperationsInput
  notes: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  supplier: SupplierUpdateOneRequiredWithoutQuotesNestedInput
  items: SupplierQuoteItemUpdateManyWithoutQuoteNestedInput
}

input EnumSupplierQuoteStatusFieldUpdateOperationsInput {
  set: SupplierQuoteStatus
}

input SupplierUpdateOneRequiredWithoutQuotesNestedInput {
  create: SupplierCreateWithoutQuotesInput
  connectOrCreate: SupplierCreateOrConnectWithoutQuotesInput
  upsert: SupplierUpsertWithoutQuotesInput
  connect: SupplierWhereUniqueInput
  update: SupplierUpdateToOneWithWhereWithoutQuotesInput
}

input SupplierUpsertWithoutQuotesInput {
  update: SupplierUpdateWithoutQuotesInput!
  create: SupplierCreateWithoutQuotesInput!
  where: SupplierWhereInput
}

input SupplierUpdateWithoutQuotesInput {
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  contactInfo: JSON
  isFrequent: BoolFieldUpdateOperationsInput
  creditLimit: FloatFieldUpdateOperationsInput
  currentBalance: FloatFieldUpdateOperationsInput
  paymentTerms: NullableStringFieldUpdateOperationsInput
  notes: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  purchaseOrders: PurchaseOrderUpdateManyWithoutSupplierNestedInput
  payments: SupplierPaymentUpdateManyWithoutSupplierNestedInput
  returns: PurchaseReturnUpdateManyWithoutSupplierNestedInput
  catalogs: SupplierCatalogUpdateManyWithoutSupplierNestedInput
  user: UserUpdateOneWithoutSupplierNestedInput
}

input PurchaseReturnUpdateManyWithoutSupplierNestedInput {
  create: [PurchaseReturnCreateWithoutSupplierInput!]
  connectOrCreate: [PurchaseReturnCreateOrConnectWithoutSupplierInput!]
  upsert: [PurchaseReturnUpsertWithWhereUniqueWithoutSupplierInput!]
  createMany: PurchaseReturnCreateManySupplierInputEnvelope
  set: [PurchaseReturnWhereUniqueInput!]
  disconnect: [PurchaseReturnWhereUniqueInput!]
  delete: [PurchaseReturnWhereUniqueInput!]
  connect: [PurchaseReturnWhereUniqueInput!]
  update: [PurchaseReturnUpdateWithWhereUniqueWithoutSupplierInput!]
  updateMany: [PurchaseReturnUpdateManyWithWhereWithoutSupplierInput!]
  deleteMany: [PurchaseReturnScalarWhereInput!]
}

input PurchaseReturnUpsertWithWhereUniqueWithoutSupplierInput {
  where: PurchaseReturnWhereUniqueInput!
  update: PurchaseReturnUpdateWithoutSupplierInput!
  create: PurchaseReturnCreateWithoutSupplierInput!
}

input PurchaseReturnUpdateWithoutSupplierInput {
  id: StringFieldUpdateOperationsInput
  status: EnumReturnStatusFieldUpdateOperationsInput
  reason: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  initiatedBy: UserUpdateOneRequiredWithoutPurchaseReturnInitiatorsNestedInput
  approvedBy: UserUpdateOneRequiredWithoutPurchaseReturnApproversNestedInput
  items: PurchaseReturnItemUpdateManyWithoutReturnNestedInput
}

input PurchaseReturnItemUpdateManyWithoutReturnNestedInput {
  create: [PurchaseReturnItemCreateWithoutReturnInput!]
  connectOrCreate: [PurchaseReturnItemCreateOrConnectWithoutReturnInput!]
  upsert: [PurchaseReturnItemUpsertWithWhereUniqueWithoutReturnInput!]
  createMany: PurchaseReturnItemCreateManyReturnInputEnvelope
  set: [PurchaseReturnItemWhereUniqueInput!]
  disconnect: [PurchaseReturnItemWhereUniqueInput!]
  delete: [PurchaseReturnItemWhereUniqueInput!]
  connect: [PurchaseReturnItemWhereUniqueInput!]
  update: [PurchaseReturnItemUpdateWithWhereUniqueWithoutReturnInput!]
  updateMany: [PurchaseReturnItemUpdateManyWithWhereWithoutReturnInput!]
  deleteMany: [PurchaseReturnItemScalarWhereInput!]
}

input PurchaseReturnItemUpsertWithWhereUniqueWithoutReturnInput {
  where: PurchaseReturnItemWhereUniqueInput!
  update: PurchaseReturnItemUpdateWithoutReturnInput!
  create: PurchaseReturnItemCreateWithoutReturnInput!
}

input PurchaseReturnItemUpdateWithoutReturnInput {
  id: StringFieldUpdateOperationsInput
  quantity: IntFieldUpdateOperationsInput
  productVariant: ProductVariantUpdateOneRequiredWithoutPurchaseReturnItemsNestedInput
  batch: StockReceiptBatchUpdateOneRequiredWithoutPurchaseReturnsNestedInput
}

input StockReceiptBatchUpdateOneRequiredWithoutPurchaseReturnsNestedInput {
  create: StockReceiptBatchCreateWithoutPurchaseReturnsInput
  connectOrCreate: StockReceiptBatchCreateOrConnectWithoutPurchaseReturnsInput
  upsert: StockReceiptBatchUpsertWithoutPurchaseReturnsInput
  connect: StockReceiptBatchWhereUniqueInput
  update: StockReceiptBatchUpdateToOneWithWhereWithoutPurchaseReturnsInput
}

input StockReceiptBatchUpsertWithoutPurchaseReturnsInput {
  update: StockReceiptBatchUpdateWithoutPurchaseReturnsInput!
  create: StockReceiptBatchCreateWithoutPurchaseReturnsInput!
  where: StockReceiptBatchWhereInput
}

input StockReceiptBatchUpdateWithoutPurchaseReturnsInput {
  id: StringFieldUpdateOperationsInput
  purchaseOrderId: StringFieldUpdateOperationsInput
  waybillUrl: NullableStringFieldUpdateOperationsInput
  receivedAt: DateTimeFieldUpdateOperationsInput
  store: StoreUpdateOneRequiredWithoutReceiptsNestedInput
  receivedBy: UserUpdateOneRequiredWithoutStockReceiptBatchReceivedBysNestedInput
  confirmedBy: UserUpdateOneRequiredWithoutStockReceiptBatchConfirmedBysNestedInput
  items: StockReceiptBatchItemUpdateManyWithoutBatchNestedInput
  PurchaseOrder: PurchaseOrderUpdateManyWithoutReceiptsNestedInput
}

input PurchaseOrderUpdateManyWithoutReceiptsNestedInput {
  create: [PurchaseOrderCreateWithoutReceiptsInput!]
  connectOrCreate: [PurchaseOrderCreateOrConnectWithoutReceiptsInput!]
  upsert: [PurchaseOrderUpsertWithWhereUniqueWithoutReceiptsInput!]
  set: [PurchaseOrderWhereUniqueInput!]
  disconnect: [PurchaseOrderWhereUniqueInput!]
  delete: [PurchaseOrderWhereUniqueInput!]
  connect: [PurchaseOrderWhereUniqueInput!]
  update: [PurchaseOrderUpdateWithWhereUniqueWithoutReceiptsInput!]
  updateMany: [PurchaseOrderUpdateManyWithWhereWithoutReceiptsInput!]
  deleteMany: [PurchaseOrderScalarWhereInput!]
}

input PurchaseOrderUpsertWithWhereUniqueWithoutReceiptsInput {
  where: PurchaseOrderWhereUniqueInput!
  update: PurchaseOrderUpdateWithoutReceiptsInput!
  create: PurchaseOrderCreateWithoutReceiptsInput!
}

input PurchaseOrderUpdateWithoutReceiptsInput {
  id: StringFieldUpdateOperationsInput
  invoiceNumber: StringFieldUpdateOperationsInput
  status: EnumPurchaseOrderStatusFieldUpdateOperationsInput
  phase: EnumPurchasePhaseFieldUpdateOperationsInput
  dueDate: DateTimeFieldUpdateOperationsInput
  totalAmount: FloatFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  supplier: SupplierUpdateOneRequiredWithoutPurchaseOrdersNestedInput
  store: StoreUpdateOneWithoutPurchaseOrdersNestedInput
  items: PurchaseOrderItemUpdateManyWithoutPurchaseOrderNestedInput
  payments: SupplierPaymentUpdateManyWithoutPurchaseOrderNestedInput
}

input SupplierPaymentUpdateManyWithoutPurchaseOrderNestedInput {
  create: [SupplierPaymentCreateWithoutPurchaseOrderInput!]
  connectOrCreate: [SupplierPaymentCreateOrConnectWithoutPurchaseOrderInput!]
  upsert: [SupplierPaymentUpsertWithWhereUniqueWithoutPurchaseOrderInput!]
  createMany: SupplierPaymentCreateManyPurchaseOrderInputEnvelope
  set: [SupplierPaymentWhereUniqueInput!]
  disconnect: [SupplierPaymentWhereUniqueInput!]
  delete: [SupplierPaymentWhereUniqueInput!]
  connect: [SupplierPaymentWhereUniqueInput!]
  update: [SupplierPaymentUpdateWithWhereUniqueWithoutPurchaseOrderInput!]
  updateMany: [SupplierPaymentUpdateManyWithWhereWithoutPurchaseOrderInput!]
  deleteMany: [SupplierPaymentScalarWhereInput!]
}

input SupplierPaymentUpsertWithWhereUniqueWithoutPurchaseOrderInput {
  where: SupplierPaymentWhereUniqueInput!
  update: SupplierPaymentUpdateWithoutPurchaseOrderInput!
  create: SupplierPaymentCreateWithoutPurchaseOrderInput!
}

input SupplierPaymentUpdateWithoutPurchaseOrderInput {
  id: StringFieldUpdateOperationsInput
  amount: FloatFieldUpdateOperationsInput
  paymentDate: DateTimeFieldUpdateOperationsInput
  method: StringFieldUpdateOperationsInput
  notes: NullableStringFieldUpdateOperationsInput
  supplier: SupplierUpdateOneRequiredWithoutPaymentsNestedInput
}

input SupplierUpdateOneRequiredWithoutPaymentsNestedInput {
  create: SupplierCreateWithoutPaymentsInput
  connectOrCreate: SupplierCreateOrConnectWithoutPaymentsInput
  upsert: SupplierUpsertWithoutPaymentsInput
  connect: SupplierWhereUniqueInput
  update: SupplierUpdateToOneWithWhereWithoutPaymentsInput
}

input SupplierUpsertWithoutPaymentsInput {
  update: SupplierUpdateWithoutPaymentsInput!
  create: SupplierCreateWithoutPaymentsInput!
  where: SupplierWhereInput
}

input SupplierUpdateWithoutPaymentsInput {
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  contactInfo: JSON
  isFrequent: BoolFieldUpdateOperationsInput
  creditLimit: FloatFieldUpdateOperationsInput
  currentBalance: FloatFieldUpdateOperationsInput
  paymentTerms: NullableStringFieldUpdateOperationsInput
  notes: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  purchaseOrders: PurchaseOrderUpdateManyWithoutSupplierNestedInput
  returns: PurchaseReturnUpdateManyWithoutSupplierNestedInput
  catalogs: SupplierCatalogUpdateManyWithoutSupplierNestedInput
  quotes: SupplierQuoteUpdateManyWithoutSupplierNestedInput
  user: UserUpdateOneWithoutSupplierNestedInput
}

input SupplierCatalogUpdateManyWithoutSupplierNestedInput {
  create: [SupplierCatalogCreateWithoutSupplierInput!]
  connectOrCreate: [SupplierCatalogCreateOrConnectWithoutSupplierInput!]
  upsert: [SupplierCatalogUpsertWithWhereUniqueWithoutSupplierInput!]
  createMany: SupplierCatalogCreateManySupplierInputEnvelope
  set: [SupplierCatalogWhereUniqueInput!]
  disconnect: [SupplierCatalogWhereUniqueInput!]
  delete: [SupplierCatalogWhereUniqueInput!]
  connect: [SupplierCatalogWhereUniqueInput!]
  update: [SupplierCatalogUpdateWithWhereUniqueWithoutSupplierInput!]
  updateMany: [SupplierCatalogUpdateManyWithWhereWithoutSupplierInput!]
  deleteMany: [SupplierCatalogScalarWhereInput!]
}

input SupplierCatalogUpsertWithWhereUniqueWithoutSupplierInput {
  where: SupplierCatalogWhereUniqueInput!
  update: SupplierCatalogUpdateWithoutSupplierInput!
  create: SupplierCatalogCreateWithoutSupplierInput!
}

input SupplierCatalogUpdateWithoutSupplierInput {
  id: StringFieldUpdateOperationsInput
  defaultCost: FloatFieldUpdateOperationsInput
  leadTimeDays: NullableIntFieldUpdateOperationsInput
  isPreferred: BoolFieldUpdateOperationsInput
  productVariant: ProductVariantUpdateOneRequiredWithoutSupplierCatalogNestedInput
}

input ProductVariantUpdateOneRequiredWithoutSupplierCatalogNestedInput {
  create: ProductVariantCreateWithoutSupplierCatalogInput
  connectOrCreate: ProductVariantCreateOrConnectWithoutSupplierCatalogInput
  upsert: ProductVariantUpsertWithoutSupplierCatalogInput
  connect: ProductVariantWhereUniqueInput
  update: ProductVariantUpdateToOneWithWhereWithoutSupplierCatalogInput
}

input ProductVariantUpsertWithoutSupplierCatalogInput {
  update: ProductVariantUpdateWithoutSupplierCatalogInput!
  create: ProductVariantCreateWithoutSupplierCatalogInput!
  where: ProductVariantWhereInput
}

input ProductVariantUpdateWithoutSupplierCatalogInput {
  id: StringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  size: StringFieldUpdateOperationsInput
  concentration: StringFieldUpdateOperationsInput
  packaging: StringFieldUpdateOperationsInput
  barcode: NullableStringFieldUpdateOperationsInput
  price: FloatFieldUpdateOperationsInput
  resellerPrice: FloatFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  product: ProductUpdateOneWithoutVariantsNestedInput
  stockItems: StockUpdateManyWithoutProductVariantNestedInput
  receiptItems: StockReceiptBatchItemUpdateManyWithoutProductVariantNestedInput
  quotationItems: QuotationItemUpdateManyWithoutProductVariantNestedInput
  resellerItems: ResellerSaleItemUpdateManyWithoutProductVariantNestedInput
  consumerItems: ConsumerSaleItemUpdateManyWithoutProductVariantNestedInput
  returnItems: SalesReturnItemUpdateManyWithoutProductVariantNestedInput
  purchaseReturnItems: PurchaseReturnItemUpdateManyWithoutProductVariantNestedInput
  transferItems: StockTransferItemUpdateManyWithoutProductVariantNestedInput
  stats: ProductSalesStatsUpdateOneWithoutProductVariantNestedInput
  PurchaseOrderItem: PurchaseOrderItemUpdateManyWithoutProductVariantNestedInput
  StockMovementItem: StockMovementItemUpdateManyWithoutProductVariantNestedInput
  PurchaseRequisitionItem: PurchaseRequisitionItemUpdateManyWithoutProductVariantNestedInput
  SupplierQuoteItem: SupplierQuoteItemUpdateManyWithoutProductVariantNestedInput
  ProductVariantTierPrice: ProductVariantTierPriceUpdateManyWithoutVariantNestedInput
  facets: VariantFacetValueUpdateManyWithoutVariantNestedInput
}

input SupplierQuoteItemUpdateManyWithoutProductVariantNestedInput {
  create: [SupplierQuoteItemCreateWithoutProductVariantInput!]
  connectOrCreate: [SupplierQuoteItemCreateOrConnectWithoutProductVariantInput!]
  upsert: [SupplierQuoteItemUpsertWithWhereUniqueWithoutProductVariantInput!]
  createMany: SupplierQuoteItemCreateManyProductVariantInputEnvelope
  set: [SupplierQuoteItemWhereUniqueInput!]
  disconnect: [SupplierQuoteItemWhereUniqueInput!]
  delete: [SupplierQuoteItemWhereUniqueInput!]
  connect: [SupplierQuoteItemWhereUniqueInput!]
  update: [SupplierQuoteItemUpdateWithWhereUniqueWithoutProductVariantInput!]
  updateMany: [SupplierQuoteItemUpdateManyWithWhereWithoutProductVariantInput!]
  deleteMany: [SupplierQuoteItemScalarWhereInput!]
}

input SupplierQuoteItemUpsertWithWhereUniqueWithoutProductVariantInput {
  where: SupplierQuoteItemWhereUniqueInput!
  update: SupplierQuoteItemUpdateWithoutProductVariantInput!
  create: SupplierQuoteItemCreateWithoutProductVariantInput!
}

input SupplierQuoteItemUpdateWithoutProductVariantInput {
  id: StringFieldUpdateOperationsInput
  unitCost: FloatFieldUpdateOperationsInput
  minQty: NullableIntFieldUpdateOperationsInput
  leadTimeDays: NullableIntFieldUpdateOperationsInput
  quote: SupplierQuoteUpdateOneRequiredWithoutItemsNestedInput
}

input SupplierQuoteUpdateOneRequiredWithoutItemsNestedInput {
  create: SupplierQuoteCreateWithoutItemsInput
  connectOrCreate: SupplierQuoteCreateOrConnectWithoutItemsInput
  upsert: SupplierQuoteUpsertWithoutItemsInput
  connect: SupplierQuoteWhereUniqueInput
  update: SupplierQuoteUpdateToOneWithWhereWithoutItemsInput
}

input SupplierQuoteUpsertWithoutItemsInput {
  update: SupplierQuoteUpdateWithoutItemsInput!
  create: SupplierQuoteCreateWithoutItemsInput!
  where: SupplierQuoteWhereInput
}

input SupplierQuoteUpdateWithoutItemsInput {
  id: StringFieldUpdateOperationsInput
  status: EnumSupplierQuoteStatusFieldUpdateOperationsInput
  validUntil: NullableDateTimeFieldUpdateOperationsInput
  notes: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  requisition: PurchaseRequisitionUpdateOneRequiredWithoutQuotesNestedInput
  supplier: SupplierUpdateOneRequiredWithoutQuotesNestedInput
}

input PurchaseRequisitionUpdateOneRequiredWithoutQuotesNestedInput {
  create: PurchaseRequisitionCreateWithoutQuotesInput
  connectOrCreate: PurchaseRequisitionCreateOrConnectWithoutQuotesInput
  upsert: PurchaseRequisitionUpsertWithoutQuotesInput
  connect: PurchaseRequisitionWhereUniqueInput
  update: PurchaseRequisitionUpdateToOneWithWhereWithoutQuotesInput
}

input PurchaseRequisitionUpsertWithoutQuotesInput {
  update: PurchaseRequisitionUpdateWithoutQuotesInput!
  create: PurchaseRequisitionCreateWithoutQuotesInput!
  where: PurchaseRequisitionWhereInput
}

input PurchaseRequisitionUpdateWithoutQuotesInput {
  id: StringFieldUpdateOperationsInput
  status: EnumPurchaseRequisitionStatusFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  store: StoreUpdateOneRequiredWithoutPurchaseRequisitionNestedInput
  requestedBy: UserUpdateOneRequiredWithoutPurchaseRequisitionNestedInput
  items: PurchaseRequisitionItemUpdateManyWithoutRequisitionNestedInput
}

input PurchaseRequisitionItemUpdateManyWithoutRequisitionNestedInput {
  create: [PurchaseRequisitionItemCreateWithoutRequisitionInput!]
  connectOrCreate: [PurchaseRequisitionItemCreateOrConnectWithoutRequisitionInput!]
  upsert: [PurchaseRequisitionItemUpsertWithWhereUniqueWithoutRequisitionInput!]
  createMany: PurchaseRequisitionItemCreateManyRequisitionInputEnvelope
  set: [PurchaseRequisitionItemWhereUniqueInput!]
  disconnect: [PurchaseRequisitionItemWhereUniqueInput!]
  delete: [PurchaseRequisitionItemWhereUniqueInput!]
  connect: [PurchaseRequisitionItemWhereUniqueInput!]
  update: [PurchaseRequisitionItemUpdateWithWhereUniqueWithoutRequisitionInput!]
  updateMany: [PurchaseRequisitionItemUpdateManyWithWhereWithoutRequisitionInput!]
  deleteMany: [PurchaseRequisitionItemScalarWhereInput!]
}

input PurchaseRequisitionItemUpsertWithWhereUniqueWithoutRequisitionInput {
  where: PurchaseRequisitionItemWhereUniqueInput!
  update: PurchaseRequisitionItemUpdateWithoutRequisitionInput!
  create: PurchaseRequisitionItemCreateWithoutRequisitionInput!
}

input PurchaseRequisitionItemUpdateWithoutRequisitionInput {
  id: StringFieldUpdateOperationsInput
  requestedQty: IntFieldUpdateOperationsInput
  notes: NullableStringFieldUpdateOperationsInput
  productVariant: ProductVariantUpdateOneRequiredWithoutPurchaseRequisitionItemNestedInput
}

input ProductVariantUpdateOneRequiredWithoutPurchaseRequisitionItemNestedInput {
  create: ProductVariantCreateWithoutPurchaseRequisitionItemInput
  connectOrCreate: ProductVariantCreateOrConnectWithoutPurchaseRequisitionItemInput
  upsert: ProductVariantUpsertWithoutPurchaseRequisitionItemInput
  connect: ProductVariantWhereUniqueInput
  update: ProductVariantUpdateToOneWithWhereWithoutPurchaseRequisitionItemInput
}

input ProductVariantUpsertWithoutPurchaseRequisitionItemInput {
  update: ProductVariantUpdateWithoutPurchaseRequisitionItemInput!
  create: ProductVariantCreateWithoutPurchaseRequisitionItemInput!
  where: ProductVariantWhereInput
}

input ProductVariantUpdateWithoutPurchaseRequisitionItemInput {
  id: StringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  size: StringFieldUpdateOperationsInput
  concentration: StringFieldUpdateOperationsInput
  packaging: StringFieldUpdateOperationsInput
  barcode: NullableStringFieldUpdateOperationsInput
  price: FloatFieldUpdateOperationsInput
  resellerPrice: FloatFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  product: ProductUpdateOneWithoutVariantsNestedInput
  stockItems: StockUpdateManyWithoutProductVariantNestedInput
  receiptItems: StockReceiptBatchItemUpdateManyWithoutProductVariantNestedInput
  quotationItems: QuotationItemUpdateManyWithoutProductVariantNestedInput
  resellerItems: ResellerSaleItemUpdateManyWithoutProductVariantNestedInput
  consumerItems: ConsumerSaleItemUpdateManyWithoutProductVariantNestedInput
  returnItems: SalesReturnItemUpdateManyWithoutProductVariantNestedInput
  purchaseReturnItems: PurchaseReturnItemUpdateManyWithoutProductVariantNestedInput
  transferItems: StockTransferItemUpdateManyWithoutProductVariantNestedInput
  stats: ProductSalesStatsUpdateOneWithoutProductVariantNestedInput
  PurchaseOrderItem: PurchaseOrderItemUpdateManyWithoutProductVariantNestedInput
  StockMovementItem: StockMovementItemUpdateManyWithoutProductVariantNestedInput
  SupplierCatalog: SupplierCatalogUpdateManyWithoutProductVariantNestedInput
  SupplierQuoteItem: SupplierQuoteItemUpdateManyWithoutProductVariantNestedInput
  ProductVariantTierPrice: ProductVariantTierPriceUpdateManyWithoutVariantNestedInput
  facets: VariantFacetValueUpdateManyWithoutVariantNestedInput
}

input SupplierCatalogUpdateManyWithoutProductVariantNestedInput {
  create: [SupplierCatalogCreateWithoutProductVariantInput!]
  connectOrCreate: [SupplierCatalogCreateOrConnectWithoutProductVariantInput!]
  upsert: [SupplierCatalogUpsertWithWhereUniqueWithoutProductVariantInput!]
  createMany: SupplierCatalogCreateManyProductVariantInputEnvelope
  set: [SupplierCatalogWhereUniqueInput!]
  disconnect: [SupplierCatalogWhereUniqueInput!]
  delete: [SupplierCatalogWhereUniqueInput!]
  connect: [SupplierCatalogWhereUniqueInput!]
  update: [SupplierCatalogUpdateWithWhereUniqueWithoutProductVariantInput!]
  updateMany: [SupplierCatalogUpdateManyWithWhereWithoutProductVariantInput!]
  deleteMany: [SupplierCatalogScalarWhereInput!]
}

input SupplierCatalogUpsertWithWhereUniqueWithoutProductVariantInput {
  where: SupplierCatalogWhereUniqueInput!
  update: SupplierCatalogUpdateWithoutProductVariantInput!
  create: SupplierCatalogCreateWithoutProductVariantInput!
}

input SupplierCatalogUpdateWithoutProductVariantInput {
  id: StringFieldUpdateOperationsInput
  defaultCost: FloatFieldUpdateOperationsInput
  leadTimeDays: NullableIntFieldUpdateOperationsInput
  isPreferred: BoolFieldUpdateOperationsInput
  supplier: SupplierUpdateOneRequiredWithoutCatalogsNestedInput
}

input SupplierUpdateOneRequiredWithoutCatalogsNestedInput {
  create: SupplierCreateWithoutCatalogsInput
  connectOrCreate: SupplierCreateOrConnectWithoutCatalogsInput
  upsert: SupplierUpsertWithoutCatalogsInput
  connect: SupplierWhereUniqueInput
  update: SupplierUpdateToOneWithWhereWithoutCatalogsInput
}

input SupplierUpsertWithoutCatalogsInput {
  update: SupplierUpdateWithoutCatalogsInput!
  create: SupplierCreateWithoutCatalogsInput!
  where: SupplierWhereInput
}

input SupplierUpdateWithoutCatalogsInput {
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  contactInfo: JSON
  isFrequent: BoolFieldUpdateOperationsInput
  creditLimit: FloatFieldUpdateOperationsInput
  currentBalance: FloatFieldUpdateOperationsInput
  paymentTerms: NullableStringFieldUpdateOperationsInput
  notes: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  purchaseOrders: PurchaseOrderUpdateManyWithoutSupplierNestedInput
  payments: SupplierPaymentUpdateManyWithoutSupplierNestedInput
  returns: PurchaseReturnUpdateManyWithoutSupplierNestedInput
  quotes: SupplierQuoteUpdateManyWithoutSupplierNestedInput
  user: UserUpdateOneWithoutSupplierNestedInput
}

input SupplierQuoteUpdateManyWithoutSupplierNestedInput {
  create: [SupplierQuoteCreateWithoutSupplierInput!]
  connectOrCreate: [SupplierQuoteCreateOrConnectWithoutSupplierInput!]
  upsert: [SupplierQuoteUpsertWithWhereUniqueWithoutSupplierInput!]
  createMany: SupplierQuoteCreateManySupplierInputEnvelope
  set: [SupplierQuoteWhereUniqueInput!]
  disconnect: [SupplierQuoteWhereUniqueInput!]
  delete: [SupplierQuoteWhereUniqueInput!]
  connect: [SupplierQuoteWhereUniqueInput!]
  update: [SupplierQuoteUpdateWithWhereUniqueWithoutSupplierInput!]
  updateMany: [SupplierQuoteUpdateManyWithWhereWithoutSupplierInput!]
  deleteMany: [SupplierQuoteScalarWhereInput!]
}

input SupplierQuoteUpsertWithWhereUniqueWithoutSupplierInput {
  where: SupplierQuoteWhereUniqueInput!
  update: SupplierQuoteUpdateWithoutSupplierInput!
  create: SupplierQuoteCreateWithoutSupplierInput!
}

input SupplierQuoteUpdateWithoutSupplierInput {
  id: StringFieldUpdateOperationsInput
  status: EnumSupplierQuoteStatusFieldUpdateOperationsInput
  validUntil: NullableDateTimeFieldUpdateOperationsInput
  notes: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  requisition: PurchaseRequisitionUpdateOneRequiredWithoutQuotesNestedInput
  items: SupplierQuoteItemUpdateManyWithoutQuoteNestedInput
}

input SupplierQuoteItemUpdateManyWithoutQuoteNestedInput {
  create: [SupplierQuoteItemCreateWithoutQuoteInput!]
  connectOrCreate: [SupplierQuoteItemCreateOrConnectWithoutQuoteInput!]
  upsert: [SupplierQuoteItemUpsertWithWhereUniqueWithoutQuoteInput!]
  createMany: SupplierQuoteItemCreateManyQuoteInputEnvelope
  set: [SupplierQuoteItemWhereUniqueInput!]
  disconnect: [SupplierQuoteItemWhereUniqueInput!]
  delete: [SupplierQuoteItemWhereUniqueInput!]
  connect: [SupplierQuoteItemWhereUniqueInput!]
  update: [SupplierQuoteItemUpdateWithWhereUniqueWithoutQuoteInput!]
  updateMany: [SupplierQuoteItemUpdateManyWithWhereWithoutQuoteInput!]
  deleteMany: [SupplierQuoteItemScalarWhereInput!]
}

input SupplierQuoteItemUpsertWithWhereUniqueWithoutQuoteInput {
  where: SupplierQuoteItemWhereUniqueInput!
  update: SupplierQuoteItemUpdateWithoutQuoteInput!
  create: SupplierQuoteItemCreateWithoutQuoteInput!
}

input SupplierQuoteItemUpdateWithoutQuoteInput {
  id: StringFieldUpdateOperationsInput
  unitCost: FloatFieldUpdateOperationsInput
  minQty: NullableIntFieldUpdateOperationsInput
  leadTimeDays: NullableIntFieldUpdateOperationsInput
  productVariant: ProductVariantUpdateOneRequiredWithoutSupplierQuoteItemNestedInput
}

input ProductVariantUpdateOneRequiredWithoutSupplierQuoteItemNestedInput {
  create: ProductVariantCreateWithoutSupplierQuoteItemInput
  connectOrCreate: ProductVariantCreateOrConnectWithoutSupplierQuoteItemInput
  upsert: ProductVariantUpsertWithoutSupplierQuoteItemInput
  connect: ProductVariantWhereUniqueInput
  update: ProductVariantUpdateToOneWithWhereWithoutSupplierQuoteItemInput
}

input ProductVariantUpsertWithoutSupplierQuoteItemInput {
  update: ProductVariantUpdateWithoutSupplierQuoteItemInput!
  create: ProductVariantCreateWithoutSupplierQuoteItemInput!
  where: ProductVariantWhereInput
}

input ProductVariantUpdateWithoutSupplierQuoteItemInput {
  id: StringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  size: StringFieldUpdateOperationsInput
  concentration: StringFieldUpdateOperationsInput
  packaging: StringFieldUpdateOperationsInput
  barcode: NullableStringFieldUpdateOperationsInput
  price: FloatFieldUpdateOperationsInput
  resellerPrice: FloatFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  product: ProductUpdateOneWithoutVariantsNestedInput
  stockItems: StockUpdateManyWithoutProductVariantNestedInput
  receiptItems: StockReceiptBatchItemUpdateManyWithoutProductVariantNestedInput
  quotationItems: QuotationItemUpdateManyWithoutProductVariantNestedInput
  resellerItems: ResellerSaleItemUpdateManyWithoutProductVariantNestedInput
  consumerItems: ConsumerSaleItemUpdateManyWithoutProductVariantNestedInput
  returnItems: SalesReturnItemUpdateManyWithoutProductVariantNestedInput
  purchaseReturnItems: PurchaseReturnItemUpdateManyWithoutProductVariantNestedInput
  transferItems: StockTransferItemUpdateManyWithoutProductVariantNestedInput
  stats: ProductSalesStatsUpdateOneWithoutProductVariantNestedInput
  PurchaseOrderItem: PurchaseOrderItemUpdateManyWithoutProductVariantNestedInput
  StockMovementItem: StockMovementItemUpdateManyWithoutProductVariantNestedInput
  PurchaseRequisitionItem: PurchaseRequisitionItemUpdateManyWithoutProductVariantNestedInput
  SupplierCatalog: SupplierCatalogUpdateManyWithoutProductVariantNestedInput
  ProductVariantTierPrice: ProductVariantTierPriceUpdateManyWithoutVariantNestedInput
  facets: VariantFacetValueUpdateManyWithoutVariantNestedInput
}

input ProductVariantTierPriceUpdateManyWithoutVariantNestedInput {
  create: [ProductVariantTierPriceCreateWithoutVariantInput!]
  connectOrCreate: [ProductVariantTierPriceCreateOrConnectWithoutVariantInput!]
  upsert: [ProductVariantTierPriceUpsertWithWhereUniqueWithoutVariantInput!]
  createMany: ProductVariantTierPriceCreateManyVariantInputEnvelope
  set: [ProductVariantTierPriceWhereUniqueInput!]
  disconnect: [ProductVariantTierPriceWhereUniqueInput!]
  delete: [ProductVariantTierPriceWhereUniqueInput!]
  connect: [ProductVariantTierPriceWhereUniqueInput!]
  update: [ProductVariantTierPriceUpdateWithWhereUniqueWithoutVariantInput!]
  updateMany: [ProductVariantTierPriceUpdateManyWithWhereWithoutVariantInput!]
  deleteMany: [ProductVariantTierPriceScalarWhereInput!]
}

input ProductVariantTierPriceUpsertWithWhereUniqueWithoutVariantInput {
  where: ProductVariantTierPriceWhereUniqueInput!
  update: ProductVariantTierPriceUpdateWithoutVariantInput!
  create: ProductVariantTierPriceCreateWithoutVariantInput!
}

input ProductVariantTierPriceUpdateWithoutVariantInput {
  id: StringFieldUpdateOperationsInput
  tier: EnumUserTierFieldUpdateOperationsInput
  price: FloatFieldUpdateOperationsInput
}

input ProductVariantTierPriceUpdateWithWhereUniqueWithoutVariantInput {
  where: ProductVariantTierPriceWhereUniqueInput!
  data: ProductVariantTierPriceUpdateWithoutVariantInput!
}

input ProductVariantTierPriceUpdateManyWithWhereWithoutVariantInput {
  where: ProductVariantTierPriceScalarWhereInput!
  data: ProductVariantTierPriceUpdateManyMutationInput!
}

input ProductVariantTierPriceScalarWhereInput {
  AND: [ProductVariantTierPriceScalarWhereInput!]
  OR: [ProductVariantTierPriceScalarWhereInput!]
  NOT: [ProductVariantTierPriceScalarWhereInput!]
  id: StringFilter
  productVariantId: StringFilter
  tier: EnumUserTierFilter
  price: FloatFilter
}

input ProductVariantTierPriceUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
  tier: EnumUserTierFieldUpdateOperationsInput
  price: FloatFieldUpdateOperationsInput
}

input VariantFacetValueUpdateManyWithoutVariantNestedInput {
  create: [VariantFacetValueCreateWithoutVariantInput!]
  connectOrCreate: [VariantFacetValueCreateOrConnectWithoutVariantInput!]
  upsert: [VariantFacetValueUpsertWithWhereUniqueWithoutVariantInput!]
  createMany: VariantFacetValueCreateManyVariantInputEnvelope
  set: [VariantFacetValueWhereUniqueInput!]
  disconnect: [VariantFacetValueWhereUniqueInput!]
  delete: [VariantFacetValueWhereUniqueInput!]
  connect: [VariantFacetValueWhereUniqueInput!]
  update: [VariantFacetValueUpdateWithWhereUniqueWithoutVariantInput!]
  updateMany: [VariantFacetValueUpdateManyWithWhereWithoutVariantInput!]
  deleteMany: [VariantFacetValueScalarWhereInput!]
}

input VariantFacetValueUpsertWithWhereUniqueWithoutVariantInput {
  where: VariantFacetValueWhereUniqueInput!
  update: VariantFacetValueUpdateWithoutVariantInput!
  create: VariantFacetValueCreateWithoutVariantInput!
}

input VariantFacetValueUpdateWithoutVariantInput {
  id: StringFieldUpdateOperationsInput
  value: StringFieldUpdateOperationsInput
  facet: FacetUpdateOneRequiredWithoutVariantsNestedInput
}

input FacetUpdateOneRequiredWithoutVariantsNestedInput {
  create: FacetCreateWithoutVariantsInput
  connectOrCreate: FacetCreateOrConnectWithoutVariantsInput
  upsert: FacetUpsertWithoutVariantsInput
  connect: FacetWhereUniqueInput
  update: FacetUpdateToOneWithWhereWithoutVariantsInput
}

input FacetUpsertWithoutVariantsInput {
  update: FacetUpdateWithoutVariantsInput!
  create: FacetCreateWithoutVariantsInput!
  where: FacetWhereInput
}

input FacetUpdateWithoutVariantsInput {
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  code: StringFieldUpdateOperationsInput
  isPrivate: BoolFieldUpdateOperationsInput
  values: FacetUpdatevaluesInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  products: ProductFacetValueUpdateManyWithoutFacetNestedInput
}

input ProductFacetValueUpdateManyWithoutFacetNestedInput {
  create: [ProductFacetValueCreateWithoutFacetInput!]
  connectOrCreate: [ProductFacetValueCreateOrConnectWithoutFacetInput!]
  upsert: [ProductFacetValueUpsertWithWhereUniqueWithoutFacetInput!]
  createMany: ProductFacetValueCreateManyFacetInputEnvelope
  set: [ProductFacetValueWhereUniqueInput!]
  disconnect: [ProductFacetValueWhereUniqueInput!]
  delete: [ProductFacetValueWhereUniqueInput!]
  connect: [ProductFacetValueWhereUniqueInput!]
  update: [ProductFacetValueUpdateWithWhereUniqueWithoutFacetInput!]
  updateMany: [ProductFacetValueUpdateManyWithWhereWithoutFacetInput!]
  deleteMany: [ProductFacetValueScalarWhereInput!]
}

input ProductFacetValueUpsertWithWhereUniqueWithoutFacetInput {
  where: ProductFacetValueWhereUniqueInput!
  update: ProductFacetValueUpdateWithoutFacetInput!
  create: ProductFacetValueCreateWithoutFacetInput!
}

input ProductFacetValueUpdateWithoutFacetInput {
  id: StringFieldUpdateOperationsInput
  value: StringFieldUpdateOperationsInput
  product: ProductUpdateOneRequiredWithoutFacetsNestedInput
}

input ProductUpdateOneRequiredWithoutFacetsNestedInput {
  create: ProductCreateWithoutFacetsInput
  connectOrCreate: ProductCreateOrConnectWithoutFacetsInput
  upsert: ProductUpsertWithoutFacetsInput
  connect: ProductWhereUniqueInput
  update: ProductUpdateToOneWithWhereWithoutFacetsInput
}

input ProductUpsertWithoutFacetsInput {
  update: ProductUpdateWithoutFacetsInput!
  create: ProductCreateWithoutFacetsInput!
  where: ProductWhereInput
}

input ProductUpdateWithoutFacetsInput {
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  barcode: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  variants: ProductVariantUpdateManyWithoutProductNestedInput
}

input ProductUpdateToOneWithWhereWithoutFacetsInput {
  where: ProductWhereInput
  data: ProductUpdateWithoutFacetsInput!
}

input ProductFacetValueUpdateWithWhereUniqueWithoutFacetInput {
  where: ProductFacetValueWhereUniqueInput!
  data: ProductFacetValueUpdateWithoutFacetInput!
}

input ProductFacetValueUpdateManyWithWhereWithoutFacetInput {
  where: ProductFacetValueScalarWhereInput!
  data: ProductFacetValueUpdateManyMutationInput!
}

input ProductFacetValueScalarWhereInput {
  AND: [ProductFacetValueScalarWhereInput!]
  OR: [ProductFacetValueScalarWhereInput!]
  NOT: [ProductFacetValueScalarWhereInput!]
  id: StringFilter
  productId: StringFilter
  facetId: StringFilter
  value: StringFilter
}

input ProductFacetValueUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
  value: StringFieldUpdateOperationsInput
}

input FacetUpdateToOneWithWhereWithoutVariantsInput {
  where: FacetWhereInput
  data: FacetUpdateWithoutVariantsInput!
}

input VariantFacetValueUpdateWithWhereUniqueWithoutVariantInput {
  where: VariantFacetValueWhereUniqueInput!
  data: VariantFacetValueUpdateWithoutVariantInput!
}

input VariantFacetValueUpdateManyWithWhereWithoutVariantInput {
  where: VariantFacetValueScalarWhereInput!
  data: VariantFacetValueUpdateManyMutationInput!
}

input VariantFacetValueScalarWhereInput {
  AND: [VariantFacetValueScalarWhereInput!]
  OR: [VariantFacetValueScalarWhereInput!]
  NOT: [VariantFacetValueScalarWhereInput!]
  id: StringFilter
  productVariantId: StringFilter
  facetId: StringFilter
  value: StringFilter
}

input VariantFacetValueUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
  value: StringFieldUpdateOperationsInput
}

input ProductVariantUpdateToOneWithWhereWithoutSupplierQuoteItemInput {
  where: ProductVariantWhereInput
  data: ProductVariantUpdateWithoutSupplierQuoteItemInput!
}

input SupplierQuoteItemUpdateWithWhereUniqueWithoutQuoteInput {
  where: SupplierQuoteItemWhereUniqueInput!
  data: SupplierQuoteItemUpdateWithoutQuoteInput!
}

input SupplierQuoteItemUpdateManyWithWhereWithoutQuoteInput {
  where: SupplierQuoteItemScalarWhereInput!
  data: SupplierQuoteItemUpdateManyMutationInput!
}

input SupplierQuoteItemScalarWhereInput {
  AND: [SupplierQuoteItemScalarWhereInput!]
  OR: [SupplierQuoteItemScalarWhereInput!]
  NOT: [SupplierQuoteItemScalarWhereInput!]
  id: StringFilter
  quoteId: StringFilter
  productVariantId: StringFilter
  unitCost: FloatFilter
  minQty: IntNullableFilter
  leadTimeDays: IntNullableFilter
}

input SupplierQuoteItemUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
  unitCost: FloatFieldUpdateOperationsInput
  minQty: NullableIntFieldUpdateOperationsInput
  leadTimeDays: NullableIntFieldUpdateOperationsInput
}

input SupplierQuoteUpdateWithWhereUniqueWithoutSupplierInput {
  where: SupplierQuoteWhereUniqueInput!
  data: SupplierQuoteUpdateWithoutSupplierInput!
}

input SupplierQuoteUpdateManyWithWhereWithoutSupplierInput {
  where: SupplierQuoteScalarWhereInput!
  data: SupplierQuoteUpdateManyMutationInput!
}

input SupplierQuoteScalarWhereInput {
  AND: [SupplierQuoteScalarWhereInput!]
  OR: [SupplierQuoteScalarWhereInput!]
  NOT: [SupplierQuoteScalarWhereInput!]
  id: StringFilter
  requisitionId: StringFilter
  supplierId: StringFilter
  status: EnumSupplierQuoteStatusFilter
  validUntil: DateTimeNullableFilter
  notes: StringNullableFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
}

input SupplierQuoteUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
  status: EnumSupplierQuoteStatusFieldUpdateOperationsInput
  validUntil: NullableDateTimeFieldUpdateOperationsInput
  notes: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input UserUpdateOneWithoutSupplierNestedInput {
  create: UserCreateWithoutSupplierInput
  connectOrCreate: UserCreateOrConnectWithoutSupplierInput
  upsert: UserUpsertWithoutSupplierInput
  disconnect: UserWhereInput
  delete: UserWhereInput
  connect: UserWhereUniqueInput
  update: UserUpdateToOneWithWhereWithoutSupplierInput
}

input UserUpsertWithoutSupplierInput {
  update: UserUpdateWithoutSupplierInput!
  create: UserCreateWithoutSupplierInput!
  where: UserWhereInput
}

input UserUpdateWithoutSupplierInput {
  id: StringFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  passwordHash: StringFieldUpdateOperationsInput
  tier: NullableEnumUserTierFieldUpdateOperationsInput
  referralCode: NullableStringFieldUpdateOperationsInput
  referredBy: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  isEmailVerified: BoolFieldUpdateOperationsInput
  emailVerificationToken: NullableStringFieldUpdateOperationsInput
  emailVerificationTokenExpiry: NullableDateTimeFieldUpdateOperationsInput
  role: RoleUpdateOneRequiredWithoutUsersNestedInput
  resellerProfile: ResellerProfileUpdateOneWithoutUserNestedInput
  customerProfile: CustomerProfileUpdateOneWithoutUserNestedInput
  resellerPaymentsMade: ResellerPaymentUpdateManyWithoutResellerNestedInput
  resellerPaymentsReceived: ResellerPaymentUpdateManyWithoutReceivedByNestedInput
  adminLogs: AdminActionLogUpdateManyWithoutAdminNestedInput
  supportMessages: SupportMessageUpdateManyWithoutUserNestedInput
  ConsumerSale: ConsumerSaleUpdateManyWithoutBillerNestedInput
  ConsumerSaleAdjustedBys: ConsumerSaleUpdateManyWithoutAdjustedByNestedInput
  StockReceiptBatchReceivedBys: StockReceiptBatchUpdateManyWithoutReceivedByNestedInput
  StockReceiptBatchConfirmedBys: StockReceiptBatchUpdateManyWithoutConfirmedByNestedInput
  StockTransferRequests: StockTransferUpdateManyWithoutRequestedByNestedInput
  StockTransferApprovals: StockTransferUpdateManyWithoutApprovedByNestedInput
  Store: StoreUpdateManyWithoutManagerNestedInput
  ConsumerReceipt: ConsumerReceiptUpdateManyWithoutIssuedByNestedInput
  ResellerSales: ResellerSaleUpdateManyWithoutResellerNestedInput
  BillerResellerSale: ResellerSaleUpdateManyWithoutBillerNestedInput
  ResellerSale: ResellerSaleUpdateManyWithoutApprovedByNestedInput
  SalesReturnReceivers: SalesReturnUpdateManyWithoutReceivedByNestedInput
  SalesReturnRequesters: SalesReturnUpdateManyWithoutReturnedByNestedInput
  SalesReturn: SalesReturnUpdateManyWithoutApprovedByNestedInput
  PurchaseReturnInitiators: PurchaseReturnUpdateManyWithoutInitiatedByNestedInput
  PurchaseReturnApprovers: PurchaseReturnUpdateManyWithoutApprovedByNestedInput
  Payment: PaymentUpdateManyWithoutReceivedByNestedInput
  ResellerTierHistory: ResellerTierHistoryUpdateManyWithoutUserNestedInput
  ResellerTierHistoryChangedBys: ResellerTierHistoryUpdateManyWithoutAdminNestedInput
  ResellerProfile: ResellerProfileUpdateManyWithoutBillerNestedInput
  RequestedResellers: ResellerProfileUpdateManyWithoutRequestedBillerNestedInput
  Notification: NotificationUpdateManyWithoutUserNestedInput
  Fulfillment: FulfillmentUpdateManyWithoutDeliveryPersonnelNestedInput
  BillerQuotation: QuotationUpdateManyWithoutBillerNestedInput
  ResellerQuotation: QuotationUpdateManyWithoutResellerNestedInput
  PurchaseRequisition: PurchaseRequisitionUpdateManyWithoutRequestedByNestedInput
}

input UserUpdateToOneWithWhereWithoutSupplierInput {
  where: UserWhereInput
  data: UserUpdateWithoutSupplierInput!
}

input SupplierUpdateToOneWithWhereWithoutCatalogsInput {
  where: SupplierWhereInput
  data: SupplierUpdateWithoutCatalogsInput!
}

input SupplierCatalogUpdateWithWhereUniqueWithoutProductVariantInput {
  where: SupplierCatalogWhereUniqueInput!
  data: SupplierCatalogUpdateWithoutProductVariantInput!
}

input SupplierCatalogUpdateManyWithWhereWithoutProductVariantInput {
  where: SupplierCatalogScalarWhereInput!
  data: SupplierCatalogUpdateManyMutationInput!
}

input SupplierCatalogScalarWhereInput {
  AND: [SupplierCatalogScalarWhereInput!]
  OR: [SupplierCatalogScalarWhereInput!]
  NOT: [SupplierCatalogScalarWhereInput!]
  id: StringFilter
  supplierId: StringFilter
  productVariantId: StringFilter
  defaultCost: FloatFilter
  leadTimeDays: IntNullableFilter
  isPreferred: BoolFilter
}

input SupplierCatalogUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
  defaultCost: FloatFieldUpdateOperationsInput
  leadTimeDays: NullableIntFieldUpdateOperationsInput
  isPreferred: BoolFieldUpdateOperationsInput
}

input ProductVariantUpdateToOneWithWhereWithoutPurchaseRequisitionItemInput {
  where: ProductVariantWhereInput
  data: ProductVariantUpdateWithoutPurchaseRequisitionItemInput!
}

input PurchaseRequisitionItemUpdateWithWhereUniqueWithoutRequisitionInput {
  where: PurchaseRequisitionItemWhereUniqueInput!
  data: PurchaseRequisitionItemUpdateWithoutRequisitionInput!
}

input PurchaseRequisitionItemUpdateManyWithWhereWithoutRequisitionInput {
  where: PurchaseRequisitionItemScalarWhereInput!
  data: PurchaseRequisitionItemUpdateManyMutationInput!
}

input PurchaseRequisitionItemScalarWhereInput {
  AND: [PurchaseRequisitionItemScalarWhereInput!]
  OR: [PurchaseRequisitionItemScalarWhereInput!]
  NOT: [PurchaseRequisitionItemScalarWhereInput!]
  id: StringFilter
  requisitionId: StringFilter
  productVariantId: StringFilter
  requestedQty: IntFilter
  notes: StringNullableFilter
}

input PurchaseRequisitionItemUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
  requestedQty: IntFieldUpdateOperationsInput
  notes: NullableStringFieldUpdateOperationsInput
}

input PurchaseRequisitionUpdateToOneWithWhereWithoutQuotesInput {
  where: PurchaseRequisitionWhereInput
  data: PurchaseRequisitionUpdateWithoutQuotesInput!
}

input SupplierQuoteUpdateToOneWithWhereWithoutItemsInput {
  where: SupplierQuoteWhereInput
  data: SupplierQuoteUpdateWithoutItemsInput!
}

input SupplierQuoteItemUpdateWithWhereUniqueWithoutProductVariantInput {
  where: SupplierQuoteItemWhereUniqueInput!
  data: SupplierQuoteItemUpdateWithoutProductVariantInput!
}

input SupplierQuoteItemUpdateManyWithWhereWithoutProductVariantInput {
  where: SupplierQuoteItemScalarWhereInput!
  data: SupplierQuoteItemUpdateManyMutationInput!
}

input ProductVariantUpdateToOneWithWhereWithoutSupplierCatalogInput {
  where: ProductVariantWhereInput
  data: ProductVariantUpdateWithoutSupplierCatalogInput!
}

input SupplierCatalogUpdateWithWhereUniqueWithoutSupplierInput {
  where: SupplierCatalogWhereUniqueInput!
  data: SupplierCatalogUpdateWithoutSupplierInput!
}

input SupplierCatalogUpdateManyWithWhereWithoutSupplierInput {
  where: SupplierCatalogScalarWhereInput!
  data: SupplierCatalogUpdateManyMutationInput!
}

input SupplierUpdateToOneWithWhereWithoutPaymentsInput {
  where: SupplierWhereInput
  data: SupplierUpdateWithoutPaymentsInput!
}

input SupplierPaymentUpdateWithWhereUniqueWithoutPurchaseOrderInput {
  where: SupplierPaymentWhereUniqueInput!
  data: SupplierPaymentUpdateWithoutPurchaseOrderInput!
}

input SupplierPaymentUpdateManyWithWhereWithoutPurchaseOrderInput {
  where: SupplierPaymentScalarWhereInput!
  data: SupplierPaymentUpdateManyMutationInput!
}

input SupplierPaymentScalarWhereInput {
  AND: [SupplierPaymentScalarWhereInput!]
  OR: [SupplierPaymentScalarWhereInput!]
  NOT: [SupplierPaymentScalarWhereInput!]
  id: StringFilter
  supplierId: StringFilter
  purchaseOrderId: StringNullableFilter
  amount: FloatFilter
  paymentDate: DateTimeFilter
  method: StringFilter
  notes: StringNullableFilter
}

input SupplierPaymentUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
  amount: FloatFieldUpdateOperationsInput
  paymentDate: DateTimeFieldUpdateOperationsInput
  method: StringFieldUpdateOperationsInput
  notes: NullableStringFieldUpdateOperationsInput
}

input PurchaseOrderUpdateWithWhereUniqueWithoutReceiptsInput {
  where: PurchaseOrderWhereUniqueInput!
  data: PurchaseOrderUpdateWithoutReceiptsInput!
}

input PurchaseOrderUpdateManyWithWhereWithoutReceiptsInput {
  where: PurchaseOrderScalarWhereInput!
  data: PurchaseOrderUpdateManyMutationInput!
}

input PurchaseOrderScalarWhereInput {
  AND: [PurchaseOrderScalarWhereInput!]
  OR: [PurchaseOrderScalarWhereInput!]
  NOT: [PurchaseOrderScalarWhereInput!]
  id: StringFilter
  supplierId: StringFilter
  storeId: StringNullableFilter
  invoiceNumber: StringFilter
  status: EnumPurchaseOrderStatusFilter
  phase: EnumPurchasePhaseFilter
  dueDate: DateTimeFilter
  totalAmount: FloatFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
}

input PurchaseOrderUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
  invoiceNumber: StringFieldUpdateOperationsInput
  status: EnumPurchaseOrderStatusFieldUpdateOperationsInput
  phase: EnumPurchasePhaseFieldUpdateOperationsInput
  dueDate: DateTimeFieldUpdateOperationsInput
  totalAmount: FloatFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input StockReceiptBatchUpdateToOneWithWhereWithoutPurchaseReturnsInput {
  where: StockReceiptBatchWhereInput
  data: StockReceiptBatchUpdateWithoutPurchaseReturnsInput!
}

input PurchaseReturnItemUpdateWithWhereUniqueWithoutReturnInput {
  where: PurchaseReturnItemWhereUniqueInput!
  data: PurchaseReturnItemUpdateWithoutReturnInput!
}

input PurchaseReturnItemUpdateManyWithWhereWithoutReturnInput {
  where: PurchaseReturnItemScalarWhereInput!
  data: PurchaseReturnItemUpdateManyMutationInput!
}

input PurchaseReturnItemScalarWhereInput {
  AND: [PurchaseReturnItemScalarWhereInput!]
  OR: [PurchaseReturnItemScalarWhereInput!]
  NOT: [PurchaseReturnItemScalarWhereInput!]
  id: StringFilter
  purchaseReturnId: StringFilter
  productVariantId: StringFilter
  batchId: StringFilter
  quantity: IntFilter
}

input PurchaseReturnItemUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
  quantity: IntFieldUpdateOperationsInput
}

input PurchaseReturnUpdateWithWhereUniqueWithoutSupplierInput {
  where: PurchaseReturnWhereUniqueInput!
  data: PurchaseReturnUpdateWithoutSupplierInput!
}

input PurchaseReturnUpdateManyWithWhereWithoutSupplierInput {
  where: PurchaseReturnScalarWhereInput!
  data: PurchaseReturnUpdateManyMutationInput!
}

input PurchaseReturnScalarWhereInput {
  AND: [PurchaseReturnScalarWhereInput!]
  OR: [PurchaseReturnScalarWhereInput!]
  NOT: [PurchaseReturnScalarWhereInput!]
  id: StringFilter
  supplierId: StringFilter
  initiatedById: StringFilter
  approvedById: StringFilter
  status: EnumReturnStatusFilter
  reason: StringNullableFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
}

input PurchaseReturnUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
  status: EnumReturnStatusFieldUpdateOperationsInput
  reason: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input SupplierUpdateToOneWithWhereWithoutQuotesInput {
  where: SupplierWhereInput
  data: SupplierUpdateWithoutQuotesInput!
}

input SupplierQuoteUpdateWithWhereUniqueWithoutRequisitionInput {
  where: SupplierQuoteWhereUniqueInput!
  data: SupplierQuoteUpdateWithoutRequisitionInput!
}

input SupplierQuoteUpdateManyWithWhereWithoutRequisitionInput {
  where: SupplierQuoteScalarWhereInput!
  data: SupplierQuoteUpdateManyMutationInput!
}

input PurchaseRequisitionUpdateToOneWithWhereWithoutItemsInput {
  where: PurchaseRequisitionWhereInput
  data: PurchaseRequisitionUpdateWithoutItemsInput!
}

input PurchaseRequisitionItemUpdateWithWhereUniqueWithoutProductVariantInput {
  where: PurchaseRequisitionItemWhereUniqueInput!
  data: PurchaseRequisitionItemUpdateWithoutProductVariantInput!
}

input PurchaseRequisitionItemUpdateManyWithWhereWithoutProductVariantInput {
  where: PurchaseRequisitionItemScalarWhereInput!
  data: PurchaseRequisitionItemUpdateManyMutationInput!
}

input ProductVariantUpdateToOneWithWhereWithoutPurchaseReturnItemsInput {
  where: ProductVariantWhereInput
  data: ProductVariantUpdateWithoutPurchaseReturnItemsInput!
}

input PurchaseReturnItemUpdateWithWhereUniqueWithoutBatchInput {
  where: PurchaseReturnItemWhereUniqueInput!
  data: PurchaseReturnItemUpdateWithoutBatchInput!
}

input PurchaseReturnItemUpdateManyWithWhereWithoutBatchInput {
  where: PurchaseReturnItemScalarWhereInput!
  data: PurchaseReturnItemUpdateManyMutationInput!
}

input StockReceiptBatchUpdateWithWhereUniqueWithoutPurchaseOrderInput {
  where: StockReceiptBatchWhereUniqueInput!
  data: StockReceiptBatchUpdateWithoutPurchaseOrderInput!
}

input StockReceiptBatchUpdateManyWithWhereWithoutPurchaseOrderInput {
  where: StockReceiptBatchScalarWhereInput!
  data: StockReceiptBatchUpdateManyMutationInput!
}

input StockReceiptBatchScalarWhereInput {
  AND: [StockReceiptBatchScalarWhereInput!]
  OR: [StockReceiptBatchScalarWhereInput!]
  NOT: [StockReceiptBatchScalarWhereInput!]
  id: StringFilter
  purchaseOrderId: StringFilter
  storeId: StringFilter
  receivedById: StringFilter
  confirmedById: StringFilter
  waybillUrl: StringNullableFilter
  receivedAt: DateTimeFilter
}

input StockReceiptBatchUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
  purchaseOrderId: StringFieldUpdateOperationsInput
  waybillUrl: NullableStringFieldUpdateOperationsInput
  receivedAt: DateTimeFieldUpdateOperationsInput
}

input PurchaseOrderUpdateWithWhereUniqueWithoutStoreInput {
  where: PurchaseOrderWhereUniqueInput!
  data: PurchaseOrderUpdateWithoutStoreInput!
}

input PurchaseOrderUpdateManyWithWhereWithoutStoreInput {
  where: PurchaseOrderScalarWhereInput!
  data: PurchaseOrderUpdateManyMutationInput!
}

input InvoiceImportUpdateManyWithoutStoreNestedInput {
  create: [InvoiceImportCreateWithoutStoreInput!]
  connectOrCreate: [InvoiceImportCreateOrConnectWithoutStoreInput!]
  upsert: [InvoiceImportUpsertWithWhereUniqueWithoutStoreInput!]
  createMany: InvoiceImportCreateManyStoreInputEnvelope
  set: [InvoiceImportWhereUniqueInput!]
  disconnect: [InvoiceImportWhereUniqueInput!]
  delete: [InvoiceImportWhereUniqueInput!]
  connect: [InvoiceImportWhereUniqueInput!]
  update: [InvoiceImportUpdateWithWhereUniqueWithoutStoreInput!]
  updateMany: [InvoiceImportUpdateManyWithWhereWithoutStoreInput!]
  deleteMany: [InvoiceImportScalarWhereInput!]
}

input InvoiceImportUpsertWithWhereUniqueWithoutStoreInput {
  where: InvoiceImportWhereUniqueInput!
  update: InvoiceImportUpdateWithoutStoreInput!
  create: InvoiceImportCreateWithoutStoreInput!
}

input InvoiceImportUpdateWithoutStoreInput {
  id: StringFieldUpdateOperationsInput
  url: StringFieldUpdateOperationsInput
  supplierName: NullableStringFieldUpdateOperationsInput
  status: EnumInvoiceImportStatusFieldUpdateOperationsInput
  parsed: JSON
  message: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input EnumInvoiceImportStatusFieldUpdateOperationsInput {
  set: InvoiceImportStatus
}

input InvoiceImportUpdateWithWhereUniqueWithoutStoreInput {
  where: InvoiceImportWhereUniqueInput!
  data: InvoiceImportUpdateWithoutStoreInput!
}

input InvoiceImportUpdateManyWithWhereWithoutStoreInput {
  where: InvoiceImportScalarWhereInput!
  data: InvoiceImportUpdateManyMutationInput!
}

input InvoiceImportScalarWhereInput {
  AND: [InvoiceImportScalarWhereInput!]
  OR: [InvoiceImportScalarWhereInput!]
  NOT: [InvoiceImportScalarWhereInput!]
  id: StringFilter
  url: StringFilter
  supplierName: StringNullableFilter
  storeId: StringNullableFilter
  status: EnumInvoiceImportStatusFilter
  parsed: JsonNullableFilter
  message: StringNullableFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
}

input InvoiceImportUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
  url: StringFieldUpdateOperationsInput
  supplierName: NullableStringFieldUpdateOperationsInput
  status: EnumInvoiceImportStatusFieldUpdateOperationsInput
  parsed: JSON
  message: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input StoreUpdateToOneWithWhereWithoutPurchaseRequisitionInput {
  where: StoreWhereInput
  data: StoreUpdateWithoutPurchaseRequisitionInput!
}

input PurchaseRequisitionUpdateWithWhereUniqueWithoutRequestedByInput {
  where: PurchaseRequisitionWhereUniqueInput!
  data: PurchaseRequisitionUpdateWithoutRequestedByInput!
}

input PurchaseRequisitionUpdateManyWithWhereWithoutRequestedByInput {
  where: PurchaseRequisitionScalarWhereInput!
  data: PurchaseRequisitionUpdateManyMutationInput!
}

input PurchaseRequisitionScalarWhereInput {
  AND: [PurchaseRequisitionScalarWhereInput!]
  OR: [PurchaseRequisitionScalarWhereInput!]
  NOT: [PurchaseRequisitionScalarWhereInput!]
  id: StringFilter
  storeId: StringFilter
  requestedById: StringFilter
  status: EnumPurchaseRequisitionStatusFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
}

input PurchaseRequisitionUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
  status: EnumPurchaseRequisitionStatusFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input SupplierUpdateManyWithoutUserNestedInput {
  create: [SupplierCreateWithoutUserInput!]
  connectOrCreate: [SupplierCreateOrConnectWithoutUserInput!]
  upsert: [SupplierUpsertWithWhereUniqueWithoutUserInput!]
  createMany: SupplierCreateManyUserInputEnvelope
  set: [SupplierWhereUniqueInput!]
  disconnect: [SupplierWhereUniqueInput!]
  delete: [SupplierWhereUniqueInput!]
  connect: [SupplierWhereUniqueInput!]
  update: [SupplierUpdateWithWhereUniqueWithoutUserInput!]
  updateMany: [SupplierUpdateManyWithWhereWithoutUserInput!]
  deleteMany: [SupplierScalarWhereInput!]
}

input SupplierUpsertWithWhereUniqueWithoutUserInput {
  where: SupplierWhereUniqueInput!
  update: SupplierUpdateWithoutUserInput!
  create: SupplierCreateWithoutUserInput!
}

input SupplierUpdateWithoutUserInput {
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  contactInfo: JSON
  isFrequent: BoolFieldUpdateOperationsInput
  creditLimit: FloatFieldUpdateOperationsInput
  currentBalance: FloatFieldUpdateOperationsInput
  paymentTerms: NullableStringFieldUpdateOperationsInput
  notes: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  purchaseOrders: PurchaseOrderUpdateManyWithoutSupplierNestedInput
  payments: SupplierPaymentUpdateManyWithoutSupplierNestedInput
  returns: PurchaseReturnUpdateManyWithoutSupplierNestedInput
  catalogs: SupplierCatalogUpdateManyWithoutSupplierNestedInput
  quotes: SupplierQuoteUpdateManyWithoutSupplierNestedInput
}

input SupplierUpdateWithWhereUniqueWithoutUserInput {
  where: SupplierWhereUniqueInput!
  data: SupplierUpdateWithoutUserInput!
}

input SupplierUpdateManyWithWhereWithoutUserInput {
  where: SupplierScalarWhereInput!
  data: SupplierUpdateManyMutationInput!
}

input SupplierScalarWhereInput {
  AND: [SupplierScalarWhereInput!]
  OR: [SupplierScalarWhereInput!]
  NOT: [SupplierScalarWhereInput!]
  id: StringFilter
  name: StringFilter
  contactInfo: JsonNullableFilter
  isFrequent: BoolFilter
  creditLimit: FloatFilter
  currentBalance: FloatFilter
  paymentTerms: StringNullableFilter
  notes: StringNullableFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
  userId: StringNullableFilter
}

input SupplierUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  contactInfo: JSON
  isFrequent: BoolFieldUpdateOperationsInput
  creditLimit: FloatFieldUpdateOperationsInput
  currentBalance: FloatFieldUpdateOperationsInput
  paymentTerms: NullableStringFieldUpdateOperationsInput
  notes: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input UserUpdateToOneWithWhereWithoutFulfillmentInput {
  where: UserWhereInput
  data: UserUpdateWithoutFulfillmentInput!
}

input FulfillmentUpdateToOneWithWhereWithoutSaleOrderInput {
  where: FulfillmentWhereInput
  data: FulfillmentUpdateWithoutSaleOrderInput!
}

input ConsumerPaymentUpdateManyWithoutSaleOrderNestedInput {
  create: [ConsumerPaymentCreateWithoutSaleOrderInput!]
  connectOrCreate: [ConsumerPaymentCreateOrConnectWithoutSaleOrderInput!]
  upsert: [ConsumerPaymentUpsertWithWhereUniqueWithoutSaleOrderInput!]
  createMany: ConsumerPaymentCreateManySaleOrderInputEnvelope
  set: [ConsumerPaymentWhereUniqueInput!]
  disconnect: [ConsumerPaymentWhereUniqueInput!]
  delete: [ConsumerPaymentWhereUniqueInput!]
  connect: [ConsumerPaymentWhereUniqueInput!]
  update: [ConsumerPaymentUpdateWithWhereUniqueWithoutSaleOrderInput!]
  updateMany: [ConsumerPaymentUpdateManyWithWhereWithoutSaleOrderInput!]
  deleteMany: [ConsumerPaymentScalarWhereInput!]
}

input ConsumerPaymentUpsertWithWhereUniqueWithoutSaleOrderInput {
  where: ConsumerPaymentWhereUniqueInput!
  update: ConsumerPaymentUpdateWithoutSaleOrderInput!
  create: ConsumerPaymentCreateWithoutSaleOrderInput!
}

input ConsumerPaymentUpdateWithoutSaleOrderInput {
  id: StringFieldUpdateOperationsInput
  amount: FloatFieldUpdateOperationsInput
  method: EnumPaymentMethodFieldUpdateOperationsInput
  status: EnumPaymentStatusFieldUpdateOperationsInput
  receivedAt: DateTimeFieldUpdateOperationsInput
  reference: NullableStringFieldUpdateOperationsInput
  sale: ConsumerSaleUpdateOneRequiredWithoutPaymentsNestedInput
}

input ConsumerSaleUpdateOneRequiredWithoutPaymentsNestedInput {
  create: ConsumerSaleCreateWithoutPaymentsInput
  connectOrCreate: ConsumerSaleCreateOrConnectWithoutPaymentsInput
  upsert: ConsumerSaleUpsertWithoutPaymentsInput
  connect: ConsumerSaleWhereUniqueInput
  update: ConsumerSaleUpdateToOneWithWhereWithoutPaymentsInput
}

input ConsumerSaleUpsertWithoutPaymentsInput {
  update: ConsumerSaleUpdateWithoutPaymentsInput!
  create: ConsumerSaleCreateWithoutPaymentsInput!
  where: ConsumerSaleWhereInput
}

input ConsumerSaleUpdateWithoutPaymentsInput {
  id: StringFieldUpdateOperationsInput
  channel: EnumSaleChannelFieldUpdateOperationsInput
  status: EnumSaleStatusFieldUpdateOperationsInput
  totalAmount: FloatFieldUpdateOperationsInput
  adjustmentType: NullableEnumAdjustmentTypeFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  customer: CustomerUpdateOneWithoutSalesNestedInput
  store: StoreUpdateOneRequiredWithoutCustomerSalesNestedInput
  biller: UserUpdateOneRequiredWithoutConsumerSaleNestedInput
  adjustedBy: UserUpdateOneWithoutConsumerSaleAdjustedBysNestedInput
  quotation: QuotationUpdateOneWithoutConsumerSaleNestedInput
  items: ConsumerSaleItemUpdateManyWithoutSaleNestedInput
  receipt: ConsumerReceiptUpdateOneWithoutSaleNestedInput
  SalesReturn: SalesReturnUpdateManyWithoutConsumerSaleNestedInput
  CustomerProfile: CustomerProfileUpdateManyWithoutSalesNestedInput
  SaleOrder: SaleOrderUpdateOneRequiredWithoutConsumerSaleNestedInput
}

input CustomerProfileUpdateManyWithoutSalesNestedInput {
  create: [CustomerProfileCreateWithoutSalesInput!]
  connectOrCreate: [CustomerProfileCreateOrConnectWithoutSalesInput!]
  upsert: [CustomerProfileUpsertWithWhereUniqueWithoutSalesInput!]
  set: [CustomerProfileWhereUniqueInput!]
  disconnect: [CustomerProfileWhereUniqueInput!]
  delete: [CustomerProfileWhereUniqueInput!]
  connect: [CustomerProfileWhereUniqueInput!]
  update: [CustomerProfileUpdateWithWhereUniqueWithoutSalesInput!]
  updateMany: [CustomerProfileUpdateManyWithWhereWithoutSalesInput!]
  deleteMany: [CustomerProfileScalarWhereInput!]
}

input CustomerProfileUpsertWithWhereUniqueWithoutSalesInput {
  where: CustomerProfileWhereUniqueInput!
  update: CustomerProfileUpdateWithoutSalesInput!
  create: CustomerProfileCreateWithoutSalesInput!
}

input CustomerProfileUpdateWithoutSalesInput {
  fullName: StringFieldUpdateOperationsInput
  phone: NullableStringFieldUpdateOperationsInput
  email: NullableStringFieldUpdateOperationsInput
  gender: NullableStringFieldUpdateOperationsInput
  birthday: NullableDateTimeFieldUpdateOperationsInput
  profileStatus: EnumProfileStatusFieldUpdateOperationsInput
  requestedAt: DateTimeFieldUpdateOperationsInput
  activatedAt: NullableDateTimeFieldUpdateOperationsInput
  isPhoneVerified: BoolFieldUpdateOperationsInput
  phoneVerificationCode: NullableStringFieldUpdateOperationsInput
  phoneVerificationCodeExpiry: NullableDateTimeFieldUpdateOperationsInput
  user: UserUpdateOneRequiredWithoutCustomerProfileNestedInput
  preferredStore: StoreUpdateOneWithoutCustomerProfileNestedInput
  referredBy: CustomerProfileUpdateOneWithoutReferralsNestedInput
  referrals: CustomerProfileUpdateManyWithoutReferredByNestedInput
  preferences: CustomerPreferenceProfileUpdateOneWithoutCustomerProfileNestedInput
}

input CustomerProfileUpdateManyWithoutReferredByNestedInput {
  create: [CustomerProfileCreateWithoutReferredByInput!]
  connectOrCreate: [CustomerProfileCreateOrConnectWithoutReferredByInput!]
  upsert: [CustomerProfileUpsertWithWhereUniqueWithoutReferredByInput!]
  createMany: CustomerProfileCreateManyReferredByInputEnvelope
  set: [CustomerProfileWhereUniqueInput!]
  disconnect: [CustomerProfileWhereUniqueInput!]
  delete: [CustomerProfileWhereUniqueInput!]
  connect: [CustomerProfileWhereUniqueInput!]
  update: [CustomerProfileUpdateWithWhereUniqueWithoutReferredByInput!]
  updateMany: [CustomerProfileUpdateManyWithWhereWithoutReferredByInput!]
  deleteMany: [CustomerProfileScalarWhereInput!]
}

input CustomerProfileUpsertWithWhereUniqueWithoutReferredByInput {
  where: CustomerProfileWhereUniqueInput!
  update: CustomerProfileUpdateWithoutReferredByInput!
  create: CustomerProfileCreateWithoutReferredByInput!
}

input CustomerProfileUpdateWithoutReferredByInput {
  fullName: StringFieldUpdateOperationsInput
  phone: NullableStringFieldUpdateOperationsInput
  email: NullableStringFieldUpdateOperationsInput
  gender: NullableStringFieldUpdateOperationsInput
  birthday: NullableDateTimeFieldUpdateOperationsInput
  profileStatus: EnumProfileStatusFieldUpdateOperationsInput
  requestedAt: DateTimeFieldUpdateOperationsInput
  activatedAt: NullableDateTimeFieldUpdateOperationsInput
  isPhoneVerified: BoolFieldUpdateOperationsInput
  phoneVerificationCode: NullableStringFieldUpdateOperationsInput
  phoneVerificationCodeExpiry: NullableDateTimeFieldUpdateOperationsInput
  user: UserUpdateOneRequiredWithoutCustomerProfileNestedInput
  preferredStore: StoreUpdateOneWithoutCustomerProfileNestedInput
  referrals: CustomerProfileUpdateManyWithoutReferredByNestedInput
  sales: ConsumerSaleUpdateManyWithoutCustomerProfileNestedInput
  preferences: CustomerPreferenceProfileUpdateOneWithoutCustomerProfileNestedInput
}

input CustomerPreferenceProfileUpdateOneWithoutCustomerProfileNestedInput {
  create: CustomerPreferenceProfileCreateWithoutCustomerProfileInput
  connectOrCreate: CustomerPreferenceProfileCreateOrConnectWithoutCustomerProfileInput
  upsert: CustomerPreferenceProfileUpsertWithoutCustomerProfileInput
  disconnect: CustomerPreferenceProfileWhereInput
  delete: CustomerPreferenceProfileWhereInput
  connect: CustomerPreferenceProfileWhereUniqueInput
  update: CustomerPreferenceProfileUpdateToOneWithWhereWithoutCustomerProfileInput
}

input CustomerPreferenceProfileUpsertWithoutCustomerProfileInput {
  update: CustomerPreferenceProfileUpdateWithoutCustomerProfileInput!
  create: CustomerPreferenceProfileCreateWithoutCustomerProfileInput!
  where: CustomerPreferenceProfileWhereInput
}

input CustomerPreferenceProfileUpdateWithoutCustomerProfileInput {
  id: StringFieldUpdateOperationsInput
  frequentlyBoughtVariants: JSON
  lastPurchaseDate: NullableDateTimeFieldUpdateOperationsInput
  eligibleForDiscounts: BoolFieldUpdateOperationsInput
  customer: CustomerUpdateOneRequiredWithoutCustomerPreferenceProfileNestedInput
}

input CustomerUpdateOneRequiredWithoutCustomerPreferenceProfileNestedInput {
  create: CustomerCreateWithoutCustomerPreferenceProfileInput
  connectOrCreate: CustomerCreateOrConnectWithoutCustomerPreferenceProfileInput
  upsert: CustomerUpsertWithoutCustomerPreferenceProfileInput
  connect: CustomerWhereUniqueInput
  update: CustomerUpdateToOneWithWhereWithoutCustomerPreferenceProfileInput
}

input CustomerUpsertWithoutCustomerPreferenceProfileInput {
  update: CustomerUpdateWithoutCustomerPreferenceProfileInput!
  create: CustomerCreateWithoutCustomerPreferenceProfileInput!
  where: CustomerWhereInput
}

input CustomerUpdateWithoutCustomerPreferenceProfileInput {
  id: StringFieldUpdateOperationsInput
  fullName: StringFieldUpdateOperationsInput
  phone: NullableStringFieldUpdateOperationsInput
  email: NullableStringFieldUpdateOperationsInput
  preferredStore: StoreUpdateOneWithoutCustomerNestedInput
  sales: ConsumerSaleUpdateManyWithoutCustomerNestedInput
  Quotation: QuotationUpdateManyWithoutConsumerNestedInput
}

input QuotationUpdateManyWithoutConsumerNestedInput {
  create: [QuotationCreateWithoutConsumerInput!]
  connectOrCreate: [QuotationCreateOrConnectWithoutConsumerInput!]
  upsert: [QuotationUpsertWithWhereUniqueWithoutConsumerInput!]
  createMany: QuotationCreateManyConsumerInputEnvelope
  set: [QuotationWhereUniqueInput!]
  disconnect: [QuotationWhereUniqueInput!]
  delete: [QuotationWhereUniqueInput!]
  connect: [QuotationWhereUniqueInput!]
  update: [QuotationUpdateWithWhereUniqueWithoutConsumerInput!]
  updateMany: [QuotationUpdateManyWithWhereWithoutConsumerInput!]
  deleteMany: [QuotationScalarWhereInput!]
}

input QuotationUpsertWithWhereUniqueWithoutConsumerInput {
  where: QuotationWhereUniqueInput!
  update: QuotationUpdateWithoutConsumerInput!
  create: QuotationCreateWithoutConsumerInput!
}

input QuotationUpdateWithoutConsumerInput {
  id: StringFieldUpdateOperationsInput
  type: EnumSaleTypeFieldUpdateOperationsInput
  channel: EnumSaleChannelFieldUpdateOperationsInput
  status: EnumQuotationStatusFieldUpdateOperationsInput
  totalAmount: FloatFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  store: StoreUpdateOneRequiredWithoutQuotationNestedInput
  biller: UserUpdateOneWithoutBillerQuotationNestedInput
  reseller: UserUpdateOneWithoutResellerQuotationNestedInput
  items: QuotationItemUpdateManyWithoutQuotationNestedInput
  sale: ResellerSaleUpdateOneWithoutQuotationNestedInput
  SaleOrder: SaleOrderUpdateOneWithoutQuotationNestedInput
  ConsumerSale: ConsumerSaleUpdateManyWithoutQuotationNestedInput
}

input ConsumerSaleUpdateManyWithoutQuotationNestedInput {
  create: [ConsumerSaleCreateWithoutQuotationInput!]
  connectOrCreate: [ConsumerSaleCreateOrConnectWithoutQuotationInput!]
  upsert: [ConsumerSaleUpsertWithWhereUniqueWithoutQuotationInput!]
  createMany: ConsumerSaleCreateManyQuotationInputEnvelope
  set: [ConsumerSaleWhereUniqueInput!]
  disconnect: [ConsumerSaleWhereUniqueInput!]
  delete: [ConsumerSaleWhereUniqueInput!]
  connect: [ConsumerSaleWhereUniqueInput!]
  update: [ConsumerSaleUpdateWithWhereUniqueWithoutQuotationInput!]
  updateMany: [ConsumerSaleUpdateManyWithWhereWithoutQuotationInput!]
  deleteMany: [ConsumerSaleScalarWhereInput!]
}

input ConsumerSaleUpsertWithWhereUniqueWithoutQuotationInput {
  where: ConsumerSaleWhereUniqueInput!
  update: ConsumerSaleUpdateWithoutQuotationInput!
  create: ConsumerSaleCreateWithoutQuotationInput!
}

input ConsumerSaleUpdateWithoutQuotationInput {
  id: StringFieldUpdateOperationsInput
  channel: EnumSaleChannelFieldUpdateOperationsInput
  status: EnumSaleStatusFieldUpdateOperationsInput
  totalAmount: FloatFieldUpdateOperationsInput
  adjustmentType: NullableEnumAdjustmentTypeFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  customer: CustomerUpdateOneWithoutSalesNestedInput
  store: StoreUpdateOneRequiredWithoutCustomerSalesNestedInput
  biller: UserUpdateOneRequiredWithoutConsumerSaleNestedInput
  adjustedBy: UserUpdateOneWithoutConsumerSaleAdjustedBysNestedInput
  items: ConsumerSaleItemUpdateManyWithoutSaleNestedInput
  payments: ConsumerPaymentUpdateManyWithoutSaleNestedInput
  receipt: ConsumerReceiptUpdateOneWithoutSaleNestedInput
  SalesReturn: SalesReturnUpdateManyWithoutConsumerSaleNestedInput
  CustomerProfile: CustomerProfileUpdateManyWithoutSalesNestedInput
  SaleOrder: SaleOrderUpdateOneRequiredWithoutConsumerSaleNestedInput
}

input SaleOrderUpdateOneRequiredWithoutConsumerSaleNestedInput {
  create: SaleOrderCreateWithoutConsumerSaleInput
  connectOrCreate: SaleOrderCreateOrConnectWithoutConsumerSaleInput
  upsert: SaleOrderUpsertWithoutConsumerSaleInput
  connect: SaleOrderWhereUniqueInput
  update: SaleOrderUpdateToOneWithWhereWithoutConsumerSaleInput
}

input SaleOrderUpsertWithoutConsumerSaleInput {
  update: SaleOrderUpdateWithoutConsumerSaleInput!
  create: SaleOrderCreateWithoutConsumerSaleInput!
  where: SaleOrderWhereInput
}

input SaleOrderUpdateWithoutConsumerSaleInput {
  id: StringFieldUpdateOperationsInput
  storeId: StringFieldUpdateOperationsInput
  billerId: StringFieldUpdateOperationsInput
  type: EnumSaleTypeFieldUpdateOperationsInput
  status: EnumSaleStatusFieldUpdateOperationsInput
  phase: EnumOrderPhaseFieldUpdateOperationsInput
  totalAmount: FloatFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  resellerSaleid: NullableStringFieldUpdateOperationsInput
  resellerSale: ResellerSaleUpdateOneWithoutSaleOrderNestedInput
  fulfillment: FulfillmentUpdateOneWithoutSaleOrderNestedInput
  quotation: QuotationUpdateOneWithoutSaleOrderNestedInput
  ConsumerPayment: ConsumerPaymentUpdateManyWithoutSaleOrderNestedInput
  ResellerPayment: ResellerPaymentUpdateManyWithoutSaleOrderNestedInput
}

input ResellerPaymentUpdateManyWithoutSaleOrderNestedInput {
  create: [ResellerPaymentCreateWithoutSaleOrderInput!]
  connectOrCreate: [ResellerPaymentCreateOrConnectWithoutSaleOrderInput!]
  upsert: [ResellerPaymentUpsertWithWhereUniqueWithoutSaleOrderInput!]
  createMany: ResellerPaymentCreateManySaleOrderInputEnvelope
  set: [ResellerPaymentWhereUniqueInput!]
  disconnect: [ResellerPaymentWhereUniqueInput!]
  delete: [ResellerPaymentWhereUniqueInput!]
  connect: [ResellerPaymentWhereUniqueInput!]
  update: [ResellerPaymentUpdateWithWhereUniqueWithoutSaleOrderInput!]
  updateMany: [ResellerPaymentUpdateManyWithWhereWithoutSaleOrderInput!]
  deleteMany: [ResellerPaymentScalarWhereInput!]
}

input ResellerPaymentUpsertWithWhereUniqueWithoutSaleOrderInput {
  where: ResellerPaymentWhereUniqueInput!
  update: ResellerPaymentUpdateWithoutSaleOrderInput!
  create: ResellerPaymentCreateWithoutSaleOrderInput!
}

input ResellerPaymentUpdateWithoutSaleOrderInput {
  id: StringFieldUpdateOperationsInput
  amount: FloatFieldUpdateOperationsInput
  method: EnumPaymentMethodFieldUpdateOperationsInput
  reference: NullableStringFieldUpdateOperationsInput
  status: EnumPaymentStatusFieldUpdateOperationsInput
  receivedAt: DateTimeFieldUpdateOperationsInput
  reseller: UserUpdateOneRequiredWithoutResellerPaymentsMadeNestedInput
  sale: ResellerSaleUpdateOneWithoutPaymentsNestedInput
  receivedBy: UserUpdateOneRequiredWithoutResellerPaymentsReceivedNestedInput
}

input ResellerSaleUpdateOneWithoutPaymentsNestedInput {
  create: ResellerSaleCreateWithoutPaymentsInput
  connectOrCreate: ResellerSaleCreateOrConnectWithoutPaymentsInput
  upsert: ResellerSaleUpsertWithoutPaymentsInput
  disconnect: ResellerSaleWhereInput
  delete: ResellerSaleWhereInput
  connect: ResellerSaleWhereUniqueInput
  update: ResellerSaleUpdateToOneWithWhereWithoutPaymentsInput
}

input ResellerSaleUpsertWithoutPaymentsInput {
  update: ResellerSaleUpdateWithoutPaymentsInput!
  create: ResellerSaleCreateWithoutPaymentsInput!
  where: ResellerSaleWhereInput
}

input ResellerSaleUpdateWithoutPaymentsInput {
  id: StringFieldUpdateOperationsInput
  status: EnumSaleStatusFieldUpdateOperationsInput
  totalAmount: FloatFieldUpdateOperationsInput
  approvedAt: NullableDateTimeFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  reseller: UserUpdateOneRequiredWithoutResellerSalesNestedInput
  biller: UserUpdateOneRequiredWithoutBillerResellerSaleNestedInput
  approvedBy: UserUpdateOneWithoutResellerSaleNestedInput
  quotation: QuotationUpdateOneWithoutSaleNestedInput
  store: StoreUpdateOneRequiredWithoutResellerSalesNestedInput
  items: ResellerSaleItemUpdateManyWithoutSaleNestedInput
  SalesReturn: SalesReturnUpdateManyWithoutResellerSaleNestedInput
  SaleOrder: SaleOrderUpdateOneRequiredWithoutResellerSaleNestedInput
}

input SaleOrderUpdateOneRequiredWithoutResellerSaleNestedInput {
  create: SaleOrderCreateWithoutResellerSaleInput
  connectOrCreate: SaleOrderCreateOrConnectWithoutResellerSaleInput
  upsert: SaleOrderUpsertWithoutResellerSaleInput
  connect: SaleOrderWhereUniqueInput
  update: SaleOrderUpdateToOneWithWhereWithoutResellerSaleInput
}

input SaleOrderUpsertWithoutResellerSaleInput {
  update: SaleOrderUpdateWithoutResellerSaleInput!
  create: SaleOrderCreateWithoutResellerSaleInput!
  where: SaleOrderWhereInput
}

input SaleOrderUpdateWithoutResellerSaleInput {
  id: StringFieldUpdateOperationsInput
  storeId: StringFieldUpdateOperationsInput
  billerId: StringFieldUpdateOperationsInput
  type: EnumSaleTypeFieldUpdateOperationsInput
  status: EnumSaleStatusFieldUpdateOperationsInput
  phase: EnumOrderPhaseFieldUpdateOperationsInput
  totalAmount: FloatFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  resellerSaleid: NullableStringFieldUpdateOperationsInput
  consumerSale: ConsumerSaleUpdateOneWithoutSaleOrderNestedInput
  fulfillment: FulfillmentUpdateOneWithoutSaleOrderNestedInput
  quotation: QuotationUpdateOneWithoutSaleOrderNestedInput
  ConsumerPayment: ConsumerPaymentUpdateManyWithoutSaleOrderNestedInput
  ResellerPayment: ResellerPaymentUpdateManyWithoutSaleOrderNestedInput
}

input SaleOrderUpdateToOneWithWhereWithoutResellerSaleInput {
  where: SaleOrderWhereInput
  data: SaleOrderUpdateWithoutResellerSaleInput!
}

input ResellerSaleUpdateToOneWithWhereWithoutPaymentsInput {
  where: ResellerSaleWhereInput
  data: ResellerSaleUpdateWithoutPaymentsInput!
}

input ResellerPaymentUpdateWithWhereUniqueWithoutSaleOrderInput {
  where: ResellerPaymentWhereUniqueInput!
  data: ResellerPaymentUpdateWithoutSaleOrderInput!
}

input ResellerPaymentUpdateManyWithWhereWithoutSaleOrderInput {
  where: ResellerPaymentScalarWhereInput!
  data: ResellerPaymentUpdateManyMutationInput!
}

input ResellerPaymentScalarWhereInput {
  AND: [ResellerPaymentScalarWhereInput!]
  OR: [ResellerPaymentScalarWhereInput!]
  NOT: [ResellerPaymentScalarWhereInput!]
  id: StringFilter
  saleOrderId: StringFilter
  resellerId: StringFilter
  resellerSaleId: StringNullableFilter
  amount: FloatFilter
  method: EnumPaymentMethodFilter
  reference: StringNullableFilter
  status: EnumPaymentStatusFilter
  receivedAt: DateTimeFilter
  receivedById: StringFilter
}

input ResellerPaymentUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
  amount: FloatFieldUpdateOperationsInput
  method: EnumPaymentMethodFieldUpdateOperationsInput
  reference: NullableStringFieldUpdateOperationsInput
  status: EnumPaymentStatusFieldUpdateOperationsInput
  receivedAt: DateTimeFieldUpdateOperationsInput
}

input SaleOrderUpdateToOneWithWhereWithoutConsumerSaleInput {
  where: SaleOrderWhereInput
  data: SaleOrderUpdateWithoutConsumerSaleInput!
}

input ConsumerSaleUpdateWithWhereUniqueWithoutQuotationInput {
  where: ConsumerSaleWhereUniqueInput!
  data: ConsumerSaleUpdateWithoutQuotationInput!
}

input ConsumerSaleUpdateManyWithWhereWithoutQuotationInput {
  where: ConsumerSaleScalarWhereInput!
  data: ConsumerSaleUpdateManyMutationInput!
}

input ConsumerSaleScalarWhereInput {
  AND: [ConsumerSaleScalarWhereInput!]
  OR: [ConsumerSaleScalarWhereInput!]
  NOT: [ConsumerSaleScalarWhereInput!]
  id: StringFilter
  customerId: StringNullableFilter
  storeId: StringFilter
  billerId: StringFilter
  channel: EnumSaleChannelFilter
  saleOrderId: StringFilter
  quotationId: StringNullableFilter
  status: EnumSaleStatusFilter
  totalAmount: FloatFilter
  adjustmentType: EnumAdjustmentTypeNullableFilter
  adjustedById: StringNullableFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
}

input ConsumerSaleUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
  channel: EnumSaleChannelFieldUpdateOperationsInput
  status: EnumSaleStatusFieldUpdateOperationsInput
  totalAmount: FloatFieldUpdateOperationsInput
  adjustmentType: NullableEnumAdjustmentTypeFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input QuotationUpdateWithWhereUniqueWithoutConsumerInput {
  where: QuotationWhereUniqueInput!
  data: QuotationUpdateWithoutConsumerInput!
}

input QuotationUpdateManyWithWhereWithoutConsumerInput {
  where: QuotationScalarWhereInput!
  data: QuotationUpdateManyMutationInput!
}

input QuotationScalarWhereInput {
  AND: [QuotationScalarWhereInput!]
  OR: [QuotationScalarWhereInput!]
  NOT: [QuotationScalarWhereInput!]
  id: StringFilter
  type: EnumSaleTypeFilter
  channel: EnumSaleChannelFilter
  storeId: StringFilter
  consumerId: StringNullableFilter
  resellerId: StringNullableFilter
  billerId: StringNullableFilter
  status: EnumQuotationStatusFilter
  totalAmount: FloatFilter
  saleOrderId: StringNullableFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
}

input QuotationUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
  type: EnumSaleTypeFieldUpdateOperationsInput
  channel: EnumSaleChannelFieldUpdateOperationsInput
  status: EnumQuotationStatusFieldUpdateOperationsInput
  totalAmount: FloatFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input CustomerUpdateToOneWithWhereWithoutCustomerPreferenceProfileInput {
  where: CustomerWhereInput
  data: CustomerUpdateWithoutCustomerPreferenceProfileInput!
}

input CustomerPreferenceProfileUpdateToOneWithWhereWithoutCustomerProfileInput {
  where: CustomerPreferenceProfileWhereInput
  data: CustomerPreferenceProfileUpdateWithoutCustomerProfileInput!
}

input CustomerProfileUpdateWithWhereUniqueWithoutReferredByInput {
  where: CustomerProfileWhereUniqueInput!
  data: CustomerProfileUpdateWithoutReferredByInput!
}

input CustomerProfileUpdateManyWithWhereWithoutReferredByInput {
  where: CustomerProfileScalarWhereInput!
  data: CustomerProfileUpdateManyMutationInput!
}

input CustomerProfileScalarWhereInput {
  AND: [CustomerProfileScalarWhereInput!]
  OR: [CustomerProfileScalarWhereInput!]
  NOT: [CustomerProfileScalarWhereInput!]
  userId: StringFilter
  fullName: StringFilter
  phone: StringNullableFilter
  email: StringNullableFilter
  gender: StringNullableFilter
  birthday: DateTimeNullableFilter
  referredById: StringNullableFilter
  preferredStoreId: StringNullableFilter
  preferencesid: StringNullableFilter
  profileStatus: EnumProfileStatusFilter
  requestedAt: DateTimeFilter
  activatedAt: DateTimeNullableFilter
  isPhoneVerified: BoolFilter
  phoneVerificationCode: StringNullableFilter
  phoneVerificationCodeExpiry: DateTimeNullableFilter
}

input CustomerProfileUpdateManyMutationInput {
  fullName: StringFieldUpdateOperationsInput
  phone: NullableStringFieldUpdateOperationsInput
  email: NullableStringFieldUpdateOperationsInput
  gender: NullableStringFieldUpdateOperationsInput
  birthday: NullableDateTimeFieldUpdateOperationsInput
  profileStatus: EnumProfileStatusFieldUpdateOperationsInput
  requestedAt: DateTimeFieldUpdateOperationsInput
  activatedAt: NullableDateTimeFieldUpdateOperationsInput
  isPhoneVerified: BoolFieldUpdateOperationsInput
  phoneVerificationCode: NullableStringFieldUpdateOperationsInput
  phoneVerificationCodeExpiry: NullableDateTimeFieldUpdateOperationsInput
}

input CustomerProfileUpdateWithWhereUniqueWithoutSalesInput {
  where: CustomerProfileWhereUniqueInput!
  data: CustomerProfileUpdateWithoutSalesInput!
}

input CustomerProfileUpdateManyWithWhereWithoutSalesInput {
  where: CustomerProfileScalarWhereInput!
  data: CustomerProfileUpdateManyMutationInput!
}

input ConsumerSaleUpdateToOneWithWhereWithoutPaymentsInput {
  where: ConsumerSaleWhereInput
  data: ConsumerSaleUpdateWithoutPaymentsInput!
}

input ConsumerPaymentUpdateWithWhereUniqueWithoutSaleOrderInput {
  where: ConsumerPaymentWhereUniqueInput!
  data: ConsumerPaymentUpdateWithoutSaleOrderInput!
}

input ConsumerPaymentUpdateManyWithWhereWithoutSaleOrderInput {
  where: ConsumerPaymentScalarWhereInput!
  data: ConsumerPaymentUpdateManyMutationInput!
}

input ConsumerPaymentScalarWhereInput {
  AND: [ConsumerPaymentScalarWhereInput!]
  OR: [ConsumerPaymentScalarWhereInput!]
  NOT: [ConsumerPaymentScalarWhereInput!]
  id: StringFilter
  consumerSaleId: StringFilter
  saleOrderId: StringFilter
  amount: FloatFilter
  method: EnumPaymentMethodFilter
  status: EnumPaymentStatusFilter
  receivedAt: DateTimeFilter
  reference: StringNullableFilter
}

input ConsumerPaymentUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
  amount: FloatFieldUpdateOperationsInput
  method: EnumPaymentMethodFieldUpdateOperationsInput
  status: EnumPaymentStatusFieldUpdateOperationsInput
  receivedAt: DateTimeFieldUpdateOperationsInput
  reference: NullableStringFieldUpdateOperationsInput
}

input SaleOrderUpdateToOneWithWhereWithoutQuotationInput {
  where: SaleOrderWhereInput
  data: SaleOrderUpdateWithoutQuotationInput!
}

input QuotationUpdateWithWhereUniqueWithoutResellerInput {
  where: QuotationWhereUniqueInput!
  data: QuotationUpdateWithoutResellerInput!
}

input QuotationUpdateManyWithWhereWithoutResellerInput {
  where: QuotationScalarWhereInput!
  data: QuotationUpdateManyMutationInput!
}

input UserUpdateToOneWithWhereWithoutPurchaseRequisitionInput {
  where: UserWhereInput
  data: UserUpdateWithoutPurchaseRequisitionInput!
}

input PurchaseRequisitionUpdateWithWhereUniqueWithoutStoreInput {
  where: PurchaseRequisitionWhereUniqueInput!
  data: PurchaseRequisitionUpdateWithoutStoreInput!
}

input PurchaseRequisitionUpdateManyWithWhereWithoutStoreInput {
  where: PurchaseRequisitionScalarWhereInput!
  data: PurchaseRequisitionUpdateManyMutationInput!
}

input StoreUpdateToOneWithWhereWithoutMovementsInput {
  where: StoreWhereInput
  data: StoreUpdateWithoutMovementsInput!
}

input StockMovementUpdateToOneWithWhereWithoutItemsInput {
  where: StockMovementWhereInput
  data: StockMovementUpdateWithoutItemsInput!
}

input StockMovementItemUpdateWithWhereUniqueWithoutProductVariantInput {
  where: StockMovementItemWhereUniqueInput!
  data: StockMovementItemUpdateWithoutProductVariantInput!
}

input StockMovementItemUpdateManyWithWhereWithoutProductVariantInput {
  where: StockMovementItemScalarWhereInput!
  data: StockMovementItemUpdateManyMutationInput!
}

input StockMovementItemScalarWhereInput {
  AND: [StockMovementItemScalarWhereInput!]
  OR: [StockMovementItemScalarWhereInput!]
  NOT: [StockMovementItemScalarWhereInput!]
  id: StringFilter
  stockMovementId: StringFilter
  productVariantId: StringFilter
  quantity: IntFilter
}

input StockMovementItemUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
  quantity: IntFieldUpdateOperationsInput
}

input ProductVariantUpdateToOneWithWhereWithoutPurchaseOrderItemInput {
  where: ProductVariantWhereInput
  data: ProductVariantUpdateWithoutPurchaseOrderItemInput!
}

input PurchaseOrderItemUpdateWithWhereUniqueWithoutPurchaseOrderInput {
  where: PurchaseOrderItemWhereUniqueInput!
  data: PurchaseOrderItemUpdateWithoutPurchaseOrderInput!
}

input PurchaseOrderItemUpdateManyWithWhereWithoutPurchaseOrderInput {
  where: PurchaseOrderItemScalarWhereInput!
  data: PurchaseOrderItemUpdateManyMutationInput!
}

input PurchaseOrderItemScalarWhereInput {
  AND: [PurchaseOrderItemScalarWhereInput!]
  OR: [PurchaseOrderItemScalarWhereInput!]
  NOT: [PurchaseOrderItemScalarWhereInput!]
  id: StringFilter
  purchaseOrderId: StringFilter
  productVariantId: StringFilter
  quantity: IntFilter
  unitCost: FloatFilter
}

input PurchaseOrderItemUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
  quantity: IntFieldUpdateOperationsInput
  unitCost: FloatFieldUpdateOperationsInput
}

input PurchaseOrderUpdateToOneWithWhereWithoutPaymentsInput {
  where: PurchaseOrderWhereInput
  data: PurchaseOrderUpdateWithoutPaymentsInput!
}

input SupplierPaymentUpdateWithWhereUniqueWithoutSupplierInput {
  where: SupplierPaymentWhereUniqueInput!
  data: SupplierPaymentUpdateWithoutSupplierInput!
}

input SupplierPaymentUpdateManyWithWhereWithoutSupplierInput {
  where: SupplierPaymentScalarWhereInput!
  data: SupplierPaymentUpdateManyMutationInput!
}

input SupplierUpdateToOneWithWhereWithoutPurchaseOrdersInput {
  where: SupplierWhereInput
  data: SupplierUpdateWithoutPurchaseOrdersInput!
}

input PurchaseOrderUpdateToOneWithWhereWithoutItemsInput {
  where: PurchaseOrderWhereInput
  data: PurchaseOrderUpdateWithoutItemsInput!
}

input PurchaseOrderItemUpdateWithWhereUniqueWithoutProductVariantInput {
  where: PurchaseOrderItemWhereUniqueInput!
  data: PurchaseOrderItemUpdateWithoutProductVariantInput!
}

input PurchaseOrderItemUpdateManyWithWhereWithoutProductVariantInput {
  where: PurchaseOrderItemScalarWhereInput!
  data: PurchaseOrderItemUpdateManyMutationInput!
}

input ProductVariantUpdateToOneWithWhereWithoutReturnItemsInput {
  where: ProductVariantWhereInput
  data: ProductVariantUpdateWithoutReturnItemsInput!
}

input SalesReturnItemUpdateWithWhereUniqueWithoutReturnInput {
  where: SalesReturnItemWhereUniqueInput!
  data: SalesReturnItemUpdateWithoutReturnInput!
}

input SalesReturnItemUpdateManyWithWhereWithoutReturnInput {
  where: SalesReturnItemScalarWhereInput!
  data: SalesReturnItemUpdateManyMutationInput!
}

input SalesReturnItemScalarWhereInput {
  AND: [SalesReturnItemScalarWhereInput!]
  OR: [SalesReturnItemScalarWhereInput!]
  NOT: [SalesReturnItemScalarWhereInput!]
  id: StringFilter
  salesReturnId: StringFilter
  productVariantId: StringFilter
  quantity: IntFilter
  condition: StringFilter
}

input SalesReturnItemUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
  quantity: IntFieldUpdateOperationsInput
  condition: StringFieldUpdateOperationsInput
}

input SalesReturnUpdateWithWhereUniqueWithoutResellerSaleInput {
  where: SalesReturnWhereUniqueInput!
  data: SalesReturnUpdateWithoutResellerSaleInput!
}

input SalesReturnUpdateManyWithWhereWithoutResellerSaleInput {
  where: SalesReturnScalarWhereInput!
  data: SalesReturnUpdateManyMutationInput!
}

input SalesReturnScalarWhereInput {
  AND: [SalesReturnScalarWhereInput!]
  OR: [SalesReturnScalarWhereInput!]
  NOT: [SalesReturnScalarWhereInput!]
  id: StringFilter
  type: EnumSaleTypeFilter
  consumerSaleId: StringNullableFilter
  resellerSaleId: StringNullableFilter
  returnedById: StringFilter
  receivedById: StringFilter
  storeId: StringFilter
  status: EnumReturnStatusFilter
  returnLocation: EnumReturnLocationFilter
  isApprovedLate: BoolFilter
  approvedById: StringNullableFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
}

input SalesReturnUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
  type: EnumSaleTypeFieldUpdateOperationsInput
  status: EnumReturnStatusFieldUpdateOperationsInput
  returnLocation: EnumReturnLocationFieldUpdateOperationsInput
  isApprovedLate: BoolFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input ResellerSaleUpdateToOneWithWhereWithoutQuotationInput {
  where: ResellerSaleWhereInput
  data: ResellerSaleUpdateWithoutQuotationInput!
}

input QuotationUpdateWithWhereUniqueWithoutBillerInput {
  where: QuotationWhereUniqueInput!
  data: QuotationUpdateWithoutBillerInput!
}

input QuotationUpdateManyWithWhereWithoutBillerInput {
  where: QuotationScalarWhereInput!
  data: QuotationUpdateManyMutationInput!
}

input UserUpdateToOneWithWhereWithoutPurchaseReturnApproversInput {
  where: UserWhereInput
  data: UserUpdateWithoutPurchaseReturnApproversInput!
}

input PurchaseReturnUpdateToOneWithWhereWithoutItemsInput {
  where: PurchaseReturnWhereInput
  data: PurchaseReturnUpdateWithoutItemsInput!
}

input PurchaseReturnItemUpdateWithWhereUniqueWithoutProductVariantInput {
  where: PurchaseReturnItemWhereUniqueInput!
  data: PurchaseReturnItemUpdateWithoutProductVariantInput!
}

input PurchaseReturnItemUpdateManyWithWhereWithoutProductVariantInput {
  where: PurchaseReturnItemScalarWhereInput!
  data: PurchaseReturnItemUpdateManyMutationInput!
}

input ProductVariantUpdateToOneWithWhereWithoutQuotationItemsInput {
  where: ProductVariantWhereInput
  data: ProductVariantUpdateWithoutQuotationItemsInput!
}

input QuotationItemUpdateWithWhereUniqueWithoutQuotationInput {
  where: QuotationItemWhereUniqueInput!
  data: QuotationItemUpdateWithoutQuotationInput!
}

input QuotationItemUpdateManyWithWhereWithoutQuotationInput {
  where: QuotationItemScalarWhereInput!
  data: QuotationItemUpdateManyMutationInput!
}

input QuotationItemScalarWhereInput {
  AND: [QuotationItemScalarWhereInput!]
  OR: [QuotationItemScalarWhereInput!]
  NOT: [QuotationItemScalarWhereInput!]
  id: StringFilter
  quotationId: StringFilter
  productVariantId: StringFilter
  quantity: IntFilter
  unitPrice: FloatFilter
}

input QuotationItemUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
  quantity: IntFieldUpdateOperationsInput
  unitPrice: FloatFieldUpdateOperationsInput
}

input QuotationUpdateToOneWithWhereWithoutSaleOrderInput {
  where: QuotationWhereInput
  data: QuotationUpdateWithoutSaleOrderInput!
}

input SaleOrderUpdateToOneWithWhereWithoutFulfillmentInput {
  where: SaleOrderWhereInput
  data: SaleOrderUpdateWithoutFulfillmentInput!
}

input FulfillmentUpdateWithWhereUniqueWithoutDeliveryPersonnelInput {
  where: FulfillmentWhereUniqueInput!
  data: FulfillmentUpdateWithoutDeliveryPersonnelInput!
}

input FulfillmentUpdateManyWithWhereWithoutDeliveryPersonnelInput {
  where: FulfillmentScalarWhereInput!
  data: FulfillmentUpdateManyMutationInput!
}

input FulfillmentScalarWhereInput {
  AND: [FulfillmentScalarWhereInput!]
  OR: [FulfillmentScalarWhereInput!]
  NOT: [FulfillmentScalarWhereInput!]
  id: StringFilter
  saleOrderId: StringFilter
  type: EnumFulfillmentTypeFilter
  deliveryPersonnelId: StringNullableFilter
  deliveryAddress: StringNullableFilter
  status: EnumFulfillmentStatusFilter
  cost: FloatNullableFilter
  confirmationPin: StringNullableFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
}

input FulfillmentUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
  type: EnumFulfillmentTypeFieldUpdateOperationsInput
  deliveryAddress: NullableStringFieldUpdateOperationsInput
  status: EnumFulfillmentStatusFieldUpdateOperationsInput
  cost: NullableFloatFieldUpdateOperationsInput
  confirmationPin: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input UserUpdateToOneWithWhereWithoutResellerTierHistoryInput {
  where: UserWhereInput
  data: UserUpdateWithoutResellerTierHistoryInput!
}

input ResellerTierHistoryUpdateWithWhereUniqueWithoutAdminInput {
  where: ResellerTierHistoryWhereUniqueInput!
  data: ResellerTierHistoryUpdateWithoutAdminInput!
}

input ResellerTierHistoryUpdateManyWithWhereWithoutAdminInput {
  where: ResellerTierHistoryScalarWhereInput!
  data: ResellerTierHistoryUpdateManyMutationInput!
}

input ResellerTierHistoryScalarWhereInput {
  AND: [ResellerTierHistoryScalarWhereInput!]
  OR: [ResellerTierHistoryScalarWhereInput!]
  NOT: [ResellerTierHistoryScalarWhereInput!]
  id: StringFilter
  userId: StringFilter
  fromTier: EnumUserTierFilter
  toTier: EnumUserTierFilter
  changedBy: StringFilter
  changedAt: DateTimeFilter
}

input ResellerTierHistoryUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
  fromTier: EnumUserTierFieldUpdateOperationsInput
  toTier: EnumUserTierFieldUpdateOperationsInput
  changedAt: DateTimeFieldUpdateOperationsInput
}

input UserUpdateToOneWithWhereWithoutRequestedResellersInput {
  where: UserWhereInput
  data: UserUpdateWithoutRequestedResellersInput!
}

input ResellerProfileUpdateWithWhereUniqueWithoutBillerInput {
  where: ResellerProfileWhereUniqueInput!
  data: ResellerProfileUpdateWithoutBillerInput!
}

input ResellerProfileUpdateManyWithWhereWithoutBillerInput {
  where: ResellerProfileScalarWhereInput!
  data: ResellerProfileUpdateManyMutationInput!
}

input UserUpdateToOneWithWhereWithoutResellerTierHistoryChangedBysInput {
  where: UserWhereInput
  data: UserUpdateWithoutResellerTierHistoryChangedBysInput!
}

input ResellerTierHistoryUpdateWithWhereUniqueWithoutUserInput {
  where: ResellerTierHistoryWhereUniqueInput!
  data: ResellerTierHistoryUpdateWithoutUserInput!
}

input ResellerTierHistoryUpdateManyWithWhereWithoutUserInput {
  where: ResellerTierHistoryScalarWhereInput!
  data: ResellerTierHistoryUpdateManyMutationInput!
}

input UserUpdateToOneWithWhereWithoutPurchaseReturnInitiatorsInput {
  where: UserWhereInput
  data: UserUpdateWithoutPurchaseReturnInitiatorsInput!
}

input PurchaseReturnUpdateWithWhereUniqueWithoutApprovedByInput {
  where: PurchaseReturnWhereUniqueInput!
  data: PurchaseReturnUpdateWithoutApprovedByInput!
}

input PurchaseReturnUpdateManyWithWhereWithoutApprovedByInput {
  where: PurchaseReturnScalarWhereInput!
  data: PurchaseReturnUpdateManyMutationInput!
}

input UserUpdateToOneWithWhereWithoutResellerQuotationInput {
  where: UserWhereInput
  data: UserUpdateWithoutResellerQuotationInput!
}

input QuotationUpdateWithWhereUniqueWithoutStoreInput {
  where: QuotationWhereUniqueInput!
  data: QuotationUpdateWithoutStoreInput!
}

input QuotationUpdateManyWithWhereWithoutStoreInput {
  where: QuotationScalarWhereInput!
  data: QuotationUpdateManyMutationInput!
}

input StoreUpdateToOneWithWhereWithoutSalesReturnsInput {
  where: StoreWhereInput
  data: StoreUpdateWithoutSalesReturnsInput!
}

input SalesReturnUpdateWithWhereUniqueWithoutConsumerSaleInput {
  where: SalesReturnWhereUniqueInput!
  data: SalesReturnUpdateWithoutConsumerSaleInput!
}

input SalesReturnUpdateManyWithWhereWithoutConsumerSaleInput {
  where: SalesReturnScalarWhereInput!
  data: SalesReturnUpdateManyMutationInput!
}

input ConsumerSaleUpdateWithWhereUniqueWithoutCustomerProfileInput {
  where: ConsumerSaleWhereUniqueInput!
  data: ConsumerSaleUpdateWithoutCustomerProfileInput!
}

input ConsumerSaleUpdateManyWithWhereWithoutCustomerProfileInput {
  where: ConsumerSaleScalarWhereInput!
  data: ConsumerSaleUpdateManyMutationInput!
}

input CustomerProfileUpdateToOneWithWhereWithoutReferralsInput {
  where: CustomerProfileWhereInput
  data: CustomerProfileUpdateWithoutReferralsInput!
}

input CustomerProfileUpdateWithWhereUniqueWithoutPreferredStoreInput {
  where: CustomerProfileWhereUniqueInput!
  data: CustomerProfileUpdateWithoutPreferredStoreInput!
}

input CustomerProfileUpdateManyWithWhereWithoutPreferredStoreInput {
  where: CustomerProfileScalarWhereInput!
  data: CustomerProfileUpdateManyMutationInput!
}

input StoreUpdateToOneWithWhereWithoutPurchaseOrdersInput {
  where: StoreWhereInput
  data: StoreUpdateWithoutPurchaseOrdersInput!
}

input PurchaseOrderUpdateWithWhereUniqueWithoutSupplierInput {
  where: PurchaseOrderWhereUniqueInput!
  data: PurchaseOrderUpdateWithoutSupplierInput!
}

input PurchaseOrderUpdateManyWithWhereWithoutSupplierInput {
  where: PurchaseOrderScalarWhereInput!
  data: PurchaseOrderUpdateManyMutationInput!
}

input SupplierUpdateToOneWithWhereWithoutReturnsInput {
  where: SupplierWhereInput
  data: SupplierUpdateWithoutReturnsInput!
}

input PurchaseReturnUpdateWithWhereUniqueWithoutInitiatedByInput {
  where: PurchaseReturnWhereUniqueInput!
  data: PurchaseReturnUpdateWithoutInitiatedByInput!
}

input PurchaseReturnUpdateManyWithWhereWithoutInitiatedByInput {
  where: PurchaseReturnScalarWhereInput!
  data: PurchaseReturnUpdateManyMutationInput!
}

input UserUpdateToOneWithWhereWithoutSalesReturnInput {
  where: UserWhereInput
  data: UserUpdateWithoutSalesReturnInput!
}

input SalesReturnUpdateWithWhereUniqueWithoutReturnedByInput {
  where: SalesReturnWhereUniqueInput!
  data: SalesReturnUpdateWithoutReturnedByInput!
}

input SalesReturnUpdateManyWithWhereWithoutReturnedByInput {
  where: SalesReturnScalarWhereInput!
  data: SalesReturnUpdateManyMutationInput!
}

input UserUpdateToOneWithWhereWithoutSalesReturnReceiversInput {
  where: UserWhereInput
  data: UserUpdateWithoutSalesReturnReceiversInput!
}

input SalesReturnUpdateWithWhereUniqueWithoutApprovedByInput {
  where: SalesReturnWhereUniqueInput!
  data: SalesReturnUpdateWithoutApprovedByInput!
}

input SalesReturnUpdateManyWithWhereWithoutApprovedByInput {
  where: SalesReturnScalarWhereInput!
  data: SalesReturnUpdateManyMutationInput!
}

input UserUpdateToOneWithWhereWithoutSalesReturnRequestersInput {
  where: UserWhereInput
  data: UserUpdateWithoutSalesReturnRequestersInput!
}

input SalesReturnUpdateWithWhereUniqueWithoutReceivedByInput {
  where: SalesReturnWhereUniqueInput!
  data: SalesReturnUpdateWithoutReceivedByInput!
}

input SalesReturnUpdateManyWithWhereWithoutReceivedByInput {
  where: SalesReturnScalarWhereInput!
  data: SalesReturnUpdateManyMutationInput!
}

input UserUpdateToOneWithWhereWithoutResellerPaymentsReceivedInput {
  where: UserWhereInput
  data: UserUpdateWithoutResellerPaymentsReceivedInput!
}

input ResellerPaymentUpdateWithWhereUniqueWithoutSaleInput {
  where: ResellerPaymentWhereUniqueInput!
  data: ResellerPaymentUpdateWithoutSaleInput!
}

input ResellerPaymentUpdateManyWithWhereWithoutSaleInput {
  where: ResellerPaymentScalarWhereInput!
  data: ResellerPaymentUpdateManyMutationInput!
}

input ResellerSaleUpdateWithWhereUniqueWithoutApprovedByInput {
  where: ResellerSaleWhereUniqueInput!
  data: ResellerSaleUpdateWithoutApprovedByInput!
}

input ResellerSaleUpdateManyWithWhereWithoutApprovedByInput {
  where: ResellerSaleScalarWhereInput!
  data: ResellerSaleUpdateManyMutationInput!
}

input ResellerSaleScalarWhereInput {
  AND: [ResellerSaleScalarWhereInput!]
  OR: [ResellerSaleScalarWhereInput!]
  NOT: [ResellerSaleScalarWhereInput!]
  id: StringFilter
  resellerId: StringFilter
  billerId: StringFilter
  storeId: StringFilter
  quotationId: StringNullableFilter
  status: EnumSaleStatusFilter
  totalAmount: FloatFilter
  approvedById: StringNullableFilter
  approvedAt: DateTimeNullableFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
  SaleOrderid: StringFilter
}

input ResellerSaleUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
  status: EnumSaleStatusFieldUpdateOperationsInput
  totalAmount: FloatFieldUpdateOperationsInput
  approvedAt: NullableDateTimeFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input UserUpdateToOneWithWhereWithoutConsumerReceiptInput {
  where: UserWhereInput
  data: UserUpdateWithoutConsumerReceiptInput!
}

input ConsumerReceiptUpdateToOneWithWhereWithoutSaleInput {
  where: ConsumerReceiptWhereInput
  data: ConsumerReceiptUpdateWithoutSaleInput!
}

input ConsumerSaleUpdateToOneWithWhereWithoutItemsInput {
  where: ConsumerSaleWhereInput
  data: ConsumerSaleUpdateWithoutItemsInput!
}

input ConsumerSaleItemUpdateWithWhereUniqueWithoutProductVariantInput {
  where: ConsumerSaleItemWhereUniqueInput!
  data: ConsumerSaleItemUpdateWithoutProductVariantInput!
}

input ConsumerSaleItemUpdateManyWithWhereWithoutProductVariantInput {
  where: ConsumerSaleItemScalarWhereInput!
  data: ConsumerSaleItemUpdateManyMutationInput!
}

input ConsumerSaleItemScalarWhereInput {
  AND: [ConsumerSaleItemScalarWhereInput!]
  OR: [ConsumerSaleItemScalarWhereInput!]
  NOT: [ConsumerSaleItemScalarWhereInput!]
  id: StringFilter
  consumerSaleId: StringFilter
  productVariantId: StringFilter
  quantity: IntFilter
  unitPrice: FloatFilter
}

input ConsumerSaleItemUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
  quantity: IntFieldUpdateOperationsInput
  unitPrice: FloatFieldUpdateOperationsInput
}

input ProductVariantUpdateToOneWithWhereWithoutResellerItemsInput {
  where: ProductVariantWhereInput
  data: ProductVariantUpdateWithoutResellerItemsInput!
}

input ResellerSaleItemUpdateWithWhereUniqueWithoutSaleInput {
  where: ResellerSaleItemWhereUniqueInput!
  data: ResellerSaleItemUpdateWithoutSaleInput!
}

input ResellerSaleItemUpdateManyWithWhereWithoutSaleInput {
  where: ResellerSaleItemScalarWhereInput!
  data: ResellerSaleItemUpdateManyMutationInput!
}

input ResellerSaleItemScalarWhereInput {
  AND: [ResellerSaleItemScalarWhereInput!]
  OR: [ResellerSaleItemScalarWhereInput!]
  NOT: [ResellerSaleItemScalarWhereInput!]
  id: StringFilter
  resellerSaleId: StringFilter
  productVariantId: StringFilter
  quantity: IntFilter
  unitPrice: FloatFilter
}

input ResellerSaleItemUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
  quantity: IntFieldUpdateOperationsInput
  unitPrice: FloatFieldUpdateOperationsInput
}

input ResellerSaleUpdateWithWhereUniqueWithoutBillerInput {
  where: ResellerSaleWhereUniqueInput!
  data: ResellerSaleUpdateWithoutBillerInput!
}

input ResellerSaleUpdateManyWithWhereWithoutBillerInput {
  where: ResellerSaleScalarWhereInput!
  data: ResellerSaleUpdateManyMutationInput!
}

input UserUpdateToOneWithWhereWithoutCustomerProfileInput {
  where: UserWhereInput
  data: UserUpdateWithoutCustomerProfileInput!
}

input CustomerProfileUpdateWithWhereUniqueWithoutPreferencesInput {
  where: CustomerProfileWhereUniqueInput!
  data: CustomerProfileUpdateWithoutPreferencesInput!
}

input CustomerProfileUpdateManyWithWhereWithoutPreferencesInput {
  where: CustomerProfileScalarWhereInput!
  data: CustomerProfileUpdateManyMutationInput!
}

input CustomerPreferenceProfileUpdateWithWhereUniqueWithoutCustomerInput {
  where: CustomerPreferenceProfileWhereUniqueInput!
  data: CustomerPreferenceProfileUpdateWithoutCustomerInput!
}

input CustomerPreferenceProfileUpdateManyWithWhereWithoutCustomerInput {
  where: CustomerPreferenceProfileScalarWhereInput!
  data: CustomerPreferenceProfileUpdateManyMutationInput!
}

input CustomerPreferenceProfileScalarWhereInput {
  AND: [CustomerPreferenceProfileScalarWhereInput!]
  OR: [CustomerPreferenceProfileScalarWhereInput!]
  NOT: [CustomerPreferenceProfileScalarWhereInput!]
  id: StringFilter
  customerId: StringFilter
  frequentlyBoughtVariants: JsonFilter
  lastPurchaseDate: DateTimeNullableFilter
  eligibleForDiscounts: BoolFilter
}

input CustomerPreferenceProfileUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
  frequentlyBoughtVariants: JSON
  lastPurchaseDate: NullableDateTimeFieldUpdateOperationsInput
  eligibleForDiscounts: BoolFieldUpdateOperationsInput
}

input CustomerUpdateWithWhereUniqueWithoutPreferredStoreInput {
  where: CustomerWhereUniqueInput!
  data: CustomerUpdateWithoutPreferredStoreInput!
}

input CustomerUpdateManyWithWhereWithoutPreferredStoreInput {
  where: CustomerScalarWhereInput!
  data: CustomerUpdateManyMutationInput!
}

input CustomerScalarWhereInput {
  AND: [CustomerScalarWhereInput!]
  OR: [CustomerScalarWhereInput!]
  NOT: [CustomerScalarWhereInput!]
  id: StringFilter
  fullName: StringFilter
  phone: StringNullableFilter
  email: StringNullableFilter
  preferredStoreId: StringNullableFilter
}

input CustomerUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
  fullName: StringFieldUpdateOperationsInput
  phone: NullableStringFieldUpdateOperationsInput
  email: NullableStringFieldUpdateOperationsInput
}

input StoreUpdateToOneWithWhereWithoutResellerSalesInput {
  where: StoreWhereInput
  data: StoreUpdateWithoutResellerSalesInput!
}

input ResellerSaleUpdateToOneWithWhereWithoutSaleOrderInput {
  where: ResellerSaleWhereInput
  data: ResellerSaleUpdateWithoutSaleOrderInput!
}

input SaleOrderUpdateToOneWithWhereWithoutConsumerPaymentInput {
  where: SaleOrderWhereInput
  data: SaleOrderUpdateWithoutConsumerPaymentInput!
}

input ConsumerPaymentUpdateWithWhereUniqueWithoutSaleInput {
  where: ConsumerPaymentWhereUniqueInput!
  data: ConsumerPaymentUpdateWithoutSaleInput!
}

input ConsumerPaymentUpdateManyWithWhereWithoutSaleInput {
  where: ConsumerPaymentScalarWhereInput!
  data: ConsumerPaymentUpdateManyMutationInput!
}

input ConsumerSaleUpdateWithWhereUniqueWithoutCustomerInput {
  where: ConsumerSaleWhereUniqueInput!
  data: ConsumerSaleUpdateWithoutCustomerInput!
}

input ConsumerSaleUpdateManyWithWhereWithoutCustomerInput {
  where: ConsumerSaleScalarWhereInput!
  data: ConsumerSaleUpdateManyMutationInput!
}

input CustomerUpdateToOneWithWhereWithoutQuotationInput {
  where: CustomerWhereInput
  data: CustomerUpdateWithoutQuotationInput!
}

input QuotationUpdateToOneWithWhereWithoutSaleInput {
  where: QuotationWhereInput
  data: QuotationUpdateWithoutSaleInput!
}

input ResellerSaleUpdateWithWhereUniqueWithoutResellerInput {
  where: ResellerSaleWhereUniqueInput!
  data: ResellerSaleUpdateWithoutResellerInput!
}

input ResellerSaleUpdateManyWithWhereWithoutResellerInput {
  where: ResellerSaleScalarWhereInput!
  data: ResellerSaleUpdateManyMutationInput!
}

input UserUpdateToOneWithWhereWithoutResellerSaleInput {
  where: UserWhereInput
  data: UserUpdateWithoutResellerSaleInput!
}

input ResellerSaleUpdateToOneWithWhereWithoutSalesReturnInput {
  where: ResellerSaleWhereInput
  data: ResellerSaleUpdateWithoutSalesReturnInput!
}

input SalesReturnUpdateToOneWithWhereWithoutItemsInput {
  where: SalesReturnWhereInput
  data: SalesReturnUpdateWithoutItemsInput!
}

input SalesReturnItemUpdateWithWhereUniqueWithoutProductVariantInput {
  where: SalesReturnItemWhereUniqueInput!
  data: SalesReturnItemUpdateWithoutProductVariantInput!
}

input SalesReturnItemUpdateManyWithWhereWithoutProductVariantInput {
  where: SalesReturnItemScalarWhereInput!
  data: SalesReturnItemUpdateManyMutationInput!
}

input ProductVariantUpdateToOneWithWhereWithoutConsumerItemsInput {
  where: ProductVariantWhereInput
  data: ProductVariantUpdateWithoutConsumerItemsInput!
}

input ConsumerSaleItemUpdateWithWhereUniqueWithoutSaleInput {
  where: ConsumerSaleItemWhereUniqueInput!
  data: ConsumerSaleItemUpdateWithoutSaleInput!
}

input ConsumerSaleItemUpdateManyWithWhereWithoutSaleInput {
  where: ConsumerSaleItemScalarWhereInput!
  data: ConsumerSaleItemUpdateManyMutationInput!
}

input ConsumerSaleUpdateToOneWithWhereWithoutReceiptInput {
  where: ConsumerSaleWhereInput
  data: ConsumerSaleUpdateWithoutReceiptInput!
}

input ConsumerReceiptUpdateWithWhereUniqueWithoutIssuedByInput {
  where: ConsumerReceiptWhereUniqueInput!
  data: ConsumerReceiptUpdateWithoutIssuedByInput!
}

input ConsumerReceiptUpdateManyWithWhereWithoutIssuedByInput {
  where: ConsumerReceiptScalarWhereInput!
  data: ConsumerReceiptUpdateManyMutationInput!
}

input ConsumerReceiptScalarWhereInput {
  AND: [ConsumerReceiptScalarWhereInput!]
  OR: [ConsumerReceiptScalarWhereInput!]
  NOT: [ConsumerReceiptScalarWhereInput!]
  id: StringFilter
  consumerSaleId: StringFilter
  issuedById: StringFilter
  issuedAt: DateTimeFilter
  receiptUrl: StringNullableFilter
}

input ConsumerReceiptUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
  issuedAt: DateTimeFieldUpdateOperationsInput
  receiptUrl: NullableStringFieldUpdateOperationsInput
}

input UserUpdateToOneWithWhereWithoutStockTransferRequestsInput {
  where: UserWhereInput
  data: UserUpdateWithoutStockTransferRequestsInput!
}

input StockTransferItemUpdateManyWithoutTransferNestedInput {
  create: [StockTransferItemCreateWithoutTransferInput!]
  connectOrCreate: [StockTransferItemCreateOrConnectWithoutTransferInput!]
  upsert: [StockTransferItemUpsertWithWhereUniqueWithoutTransferInput!]
  createMany: StockTransferItemCreateManyTransferInputEnvelope
  set: [StockTransferItemWhereUniqueInput!]
  disconnect: [StockTransferItemWhereUniqueInput!]
  delete: [StockTransferItemWhereUniqueInput!]
  connect: [StockTransferItemWhereUniqueInput!]
  update: [StockTransferItemUpdateWithWhereUniqueWithoutTransferInput!]
  updateMany: [StockTransferItemUpdateManyWithWhereWithoutTransferInput!]
  deleteMany: [StockTransferItemScalarWhereInput!]
}

input StockTransferItemUpsertWithWhereUniqueWithoutTransferInput {
  where: StockTransferItemWhereUniqueInput!
  update: StockTransferItemUpdateWithoutTransferInput!
  create: StockTransferItemCreateWithoutTransferInput!
}

input StockTransferItemUpdateWithoutTransferInput {
  id: StringFieldUpdateOperationsInput
  quantity: IntFieldUpdateOperationsInput
  productVariant: ProductVariantUpdateOneRequiredWithoutTransferItemsNestedInput
}

input ProductVariantUpdateOneRequiredWithoutTransferItemsNestedInput {
  create: ProductVariantCreateWithoutTransferItemsInput
  connectOrCreate: ProductVariantCreateOrConnectWithoutTransferItemsInput
  upsert: ProductVariantUpsertWithoutTransferItemsInput
  connect: ProductVariantWhereUniqueInput
  update: ProductVariantUpdateToOneWithWhereWithoutTransferItemsInput
}

input ProductVariantUpsertWithoutTransferItemsInput {
  update: ProductVariantUpdateWithoutTransferItemsInput!
  create: ProductVariantCreateWithoutTransferItemsInput!
  where: ProductVariantWhereInput
}

input ProductVariantUpdateWithoutTransferItemsInput {
  id: StringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  size: StringFieldUpdateOperationsInput
  concentration: StringFieldUpdateOperationsInput
  packaging: StringFieldUpdateOperationsInput
  barcode: NullableStringFieldUpdateOperationsInput
  price: FloatFieldUpdateOperationsInput
  resellerPrice: FloatFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  product: ProductUpdateOneWithoutVariantsNestedInput
  stockItems: StockUpdateManyWithoutProductVariantNestedInput
  receiptItems: StockReceiptBatchItemUpdateManyWithoutProductVariantNestedInput
  quotationItems: QuotationItemUpdateManyWithoutProductVariantNestedInput
  resellerItems: ResellerSaleItemUpdateManyWithoutProductVariantNestedInput
  consumerItems: ConsumerSaleItemUpdateManyWithoutProductVariantNestedInput
  returnItems: SalesReturnItemUpdateManyWithoutProductVariantNestedInput
  purchaseReturnItems: PurchaseReturnItemUpdateManyWithoutProductVariantNestedInput
  stats: ProductSalesStatsUpdateOneWithoutProductVariantNestedInput
  PurchaseOrderItem: PurchaseOrderItemUpdateManyWithoutProductVariantNestedInput
  StockMovementItem: StockMovementItemUpdateManyWithoutProductVariantNestedInput
  PurchaseRequisitionItem: PurchaseRequisitionItemUpdateManyWithoutProductVariantNestedInput
  SupplierCatalog: SupplierCatalogUpdateManyWithoutProductVariantNestedInput
  SupplierQuoteItem: SupplierQuoteItemUpdateManyWithoutProductVariantNestedInput
  ProductVariantTierPrice: ProductVariantTierPriceUpdateManyWithoutVariantNestedInput
  facets: VariantFacetValueUpdateManyWithoutVariantNestedInput
}

input ProductVariantUpdateToOneWithWhereWithoutTransferItemsInput {
  where: ProductVariantWhereInput
  data: ProductVariantUpdateWithoutTransferItemsInput!
}

input StockTransferItemUpdateWithWhereUniqueWithoutTransferInput {
  where: StockTransferItemWhereUniqueInput!
  data: StockTransferItemUpdateWithoutTransferInput!
}

input StockTransferItemUpdateManyWithWhereWithoutTransferInput {
  where: StockTransferItemScalarWhereInput!
  data: StockTransferItemUpdateManyMutationInput!
}

input StockTransferUpdateWithWhereUniqueWithoutApprovedByInput {
  where: StockTransferWhereUniqueInput!
  data: StockTransferUpdateWithoutApprovedByInput!
}

input StockTransferUpdateManyWithWhereWithoutApprovedByInput {
  where: StockTransferScalarWhereInput!
  data: StockTransferUpdateManyMutationInput!
}

input StockTransferScalarWhereInput {
  AND: [StockTransferScalarWhereInput!]
  OR: [StockTransferScalarWhereInput!]
  NOT: [StockTransferScalarWhereInput!]
  id: StringFilter
  fromStoreId: StringFilter
  toStoreId: StringFilter
  requestedById: StringFilter
  approvedById: StringFilter
  status: EnumTransferStatusFilter
  createdAt: DateTimeFilter
}

input StockTransferUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
  status: EnumTransferStatusFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
}

input UserUpdateToOneWithWhereWithoutBillerResellerSaleInput {
  where: UserWhereInput
  data: UserUpdateWithoutBillerResellerSaleInput!
}

input ResellerSaleUpdateToOneWithWhereWithoutItemsInput {
  where: ResellerSaleWhereInput
  data: ResellerSaleUpdateWithoutItemsInput!
}

input ResellerSaleItemUpdateWithWhereUniqueWithoutProductVariantInput {
  where: ResellerSaleItemWhereUniqueInput!
  data: ResellerSaleItemUpdateWithoutProductVariantInput!
}

input ResellerSaleItemUpdateManyWithWhereWithoutProductVariantInput {
  where: ResellerSaleItemScalarWhereInput!
  data: ResellerSaleItemUpdateManyMutationInput!
}

input ProductVariantUpdateToOneWithWhereWithoutStockMovementItemInput {
  where: ProductVariantWhereInput
  data: ProductVariantUpdateWithoutStockMovementItemInput!
}

input StockMovementItemUpdateWithWhereUniqueWithoutMovementInput {
  where: StockMovementItemWhereUniqueInput!
  data: StockMovementItemUpdateWithoutMovementInput!
}

input StockMovementItemUpdateManyWithWhereWithoutMovementInput {
  where: StockMovementItemScalarWhereInput!
  data: StockMovementItemUpdateManyMutationInput!
}

input StockMovementUpdateWithWhereUniqueWithoutStoreInput {
  where: StockMovementWhereUniqueInput!
  data: StockMovementUpdateWithoutStoreInput!
}

input StockMovementUpdateManyWithWhereWithoutStoreInput {
  where: StockMovementScalarWhereInput!
  data: StockMovementUpdateManyMutationInput!
}

input StockMovementScalarWhereInput {
  AND: [StockMovementScalarWhereInput!]
  OR: [StockMovementScalarWhereInput!]
  NOT: [StockMovementScalarWhereInput!]
  id: StringFilter
  storeId: StringFilter
  direction: EnumMovementDirectionFilter
  movementType: EnumMovementTypeFilter
  referenceEntity: StringFilter
  referenceId: StringFilter
  createdAt: DateTimeFilter
}

input StockMovementUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
  direction: EnumMovementDirectionFieldUpdateOperationsInput
  movementType: EnumMovementTypeFieldUpdateOperationsInput
  referenceEntity: StringFieldUpdateOperationsInput
  referenceId: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
}

input StoreUpdateWithWhereUniqueWithoutManagerInput {
  where: StoreWhereUniqueInput!
  data: StoreUpdateWithoutManagerInput!
}

input StoreUpdateManyWithWhereWithoutManagerInput {
  where: StoreScalarWhereInput!
  data: StoreUpdateManyMutationInput!
}

input StoreScalarWhereInput {
  AND: [StoreScalarWhereInput!]
  OR: [StoreScalarWhereInput!]
  NOT: [StoreScalarWhereInput!]
  id: StringFilter
  name: StringFilter
  location: StringNullableFilter
  isMain: BoolFilter
  managerId: StringFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
}

input StoreUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  location: NullableStringFieldUpdateOperationsInput
  isMain: BoolFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input UserUpdateToOneWithWhereWithoutStockTransferApprovalsInput {
  where: UserWhereInput
  data: UserUpdateWithoutStockTransferApprovalsInput!
}

input StockTransferUpdateWithWhereUniqueWithoutRequestedByInput {
  where: StockTransferWhereUniqueInput!
  data: StockTransferUpdateWithoutRequestedByInput!
}

input StockTransferUpdateManyWithWhereWithoutRequestedByInput {
  where: StockTransferScalarWhereInput!
  data: StockTransferUpdateManyMutationInput!
}

input UserUpdateToOneWithWhereWithoutBillerQuotationInput {
  where: UserWhereInput
  data: UserUpdateWithoutBillerQuotationInput!
}

input QuotationUpdateToOneWithWhereWithoutItemsInput {
  where: QuotationWhereInput
  data: QuotationUpdateWithoutItemsInput!
}

input QuotationItemUpdateWithWhereUniqueWithoutProductVariantInput {
  where: QuotationItemWhereUniqueInput!
  data: QuotationItemUpdateWithoutProductVariantInput!
}

input QuotationItemUpdateManyWithWhereWithoutProductVariantInput {
  where: QuotationItemScalarWhereInput!
  data: QuotationItemUpdateManyMutationInput!
}

input ProductVariantUpdateToOneWithWhereWithoutReceiptItemsInput {
  where: ProductVariantWhereInput
  data: ProductVariantUpdateWithoutReceiptItemsInput!
}

input StockReceiptBatchItemUpdateWithWhereUniqueWithoutBatchInput {
  where: StockReceiptBatchItemWhereUniqueInput!
  data: StockReceiptBatchItemUpdateWithoutBatchInput!
}

input StockReceiptBatchItemUpdateManyWithWhereWithoutBatchInput {
  where: StockReceiptBatchItemScalarWhereInput!
  data: StockReceiptBatchItemUpdateManyMutationInput!
}

input StockReceiptBatchItemScalarWhereInput {
  AND: [StockReceiptBatchItemScalarWhereInput!]
  OR: [StockReceiptBatchItemScalarWhereInput!]
  NOT: [StockReceiptBatchItemScalarWhereInput!]
  id: StringFilter
  stockReceiptBatchId: StringFilter
  productVariantId: StringFilter
  quantity: IntFilter
}

input StockReceiptBatchItemUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
  quantity: IntFieldUpdateOperationsInput
}

input StockReceiptBatchUpdateWithWhereUniqueWithoutConfirmedByInput {
  where: StockReceiptBatchWhereUniqueInput!
  data: StockReceiptBatchUpdateWithoutConfirmedByInput!
}

input StockReceiptBatchUpdateManyWithWhereWithoutConfirmedByInput {
  where: StockReceiptBatchScalarWhereInput!
  data: StockReceiptBatchUpdateManyMutationInput!
}

input UserUpdateToOneWithWhereWithoutResellerSalesInput {
  where: UserWhereInput
  data: UserUpdateWithoutResellerSalesInput!
}

input ResellerSaleUpdateWithWhereUniqueWithoutStoreInput {
  where: ResellerSaleWhereUniqueInput!
  data: ResellerSaleUpdateWithoutStoreInput!
}

input ResellerSaleUpdateManyWithWhereWithoutStoreInput {
  where: ResellerSaleScalarWhereInput!
  data: ResellerSaleUpdateManyMutationInput!
}

input StoreUpdateToOneWithWhereWithoutQuotationInput {
  where: StoreWhereInput
  data: StoreUpdateWithoutQuotationInput!
}

input QuotationUpdateToOneWithWhereWithoutConsumerSaleInput {
  where: QuotationWhereInput
  data: QuotationUpdateWithoutConsumerSaleInput!
}

input ConsumerSaleUpdateWithWhereUniqueWithoutAdjustedByInput {
  where: ConsumerSaleWhereUniqueInput!
  data: ConsumerSaleUpdateWithoutAdjustedByInput!
}

input ConsumerSaleUpdateManyWithWhereWithoutAdjustedByInput {
  where: ConsumerSaleScalarWhereInput!
  data: ConsumerSaleUpdateManyMutationInput!
}

input UserUpdateToOneWithWhereWithoutStockReceiptBatchConfirmedBysInput {
  where: UserWhereInput
  data: UserUpdateWithoutStockReceiptBatchConfirmedBysInput!
}

input StockReceiptBatchUpdateWithWhereUniqueWithoutReceivedByInput {
  where: StockReceiptBatchWhereUniqueInput!
  data: StockReceiptBatchUpdateWithoutReceivedByInput!
}

input StockReceiptBatchUpdateManyWithWhereWithoutReceivedByInput {
  where: StockReceiptBatchScalarWhereInput!
  data: StockReceiptBatchUpdateManyMutationInput!
}

input UserUpdateToOneWithWhereWithoutConsumerSaleAdjustedBysInput {
  where: UserWhereInput
  data: UserUpdateWithoutConsumerSaleAdjustedBysInput!
}

input ConsumerSaleUpdateToOneWithWhereWithoutSalesReturnInput {
  where: ConsumerSaleWhereInput
  data: ConsumerSaleUpdateWithoutSalesReturnInput!
}

input SalesReturnUpdateWithWhereUniqueWithoutStoreInput {
  where: SalesReturnWhereUniqueInput!
  data: SalesReturnUpdateWithoutStoreInput!
}

input SalesReturnUpdateManyWithWhereWithoutStoreInput {
  where: SalesReturnScalarWhereInput!
  data: SalesReturnUpdateManyMutationInput!
}

input StoreUpdateToOneWithWhereWithoutCustomerSalesInput {
  where: StoreWhereInput
  data: StoreUpdateWithoutCustomerSalesInput!
}

input ConsumerSaleUpdateWithWhereUniqueWithoutBillerInput {
  where: ConsumerSaleWhereUniqueInput!
  data: ConsumerSaleUpdateWithoutBillerInput!
}

input ConsumerSaleUpdateManyWithWhereWithoutBillerInput {
  where: ConsumerSaleScalarWhereInput!
  data: ConsumerSaleUpdateManyMutationInput!
}

input UserUpdateToOneWithWhereWithoutResellerPaymentsMadeInput {
  where: UserWhereInput
  data: UserUpdateWithoutResellerPaymentsMadeInput!
}

input ResellerPaymentUpdateWithWhereUniqueWithoutReceivedByInput {
  where: ResellerPaymentWhereUniqueInput!
  data: ResellerPaymentUpdateWithoutReceivedByInput!
}

input ResellerPaymentUpdateManyWithWhereWithoutReceivedByInput {
  where: ResellerPaymentScalarWhereInput!
  data: ResellerPaymentUpdateManyMutationInput!
}

input UserUpdateToOneWithWhereWithoutConsumerSaleInput {
  where: UserWhereInput
  data: UserUpdateWithoutConsumerSaleInput!
}

input ConsumerSaleUpdateWithWhereUniqueWithoutStoreInput {
  where: ConsumerSaleWhereUniqueInput!
  data: ConsumerSaleUpdateWithoutStoreInput!
}

input ConsumerSaleUpdateManyWithWhereWithoutStoreInput {
  where: ConsumerSaleScalarWhereInput!
  data: ConsumerSaleUpdateManyMutationInput!
}

input StoreUpdateToOneWithWhereWithoutTransfersOutInput {
  where: StoreWhereInput
  data: StoreUpdateWithoutTransfersOutInput!
}

input StockTransferUpdateWithWhereUniqueWithoutToStoreInput {
  where: StockTransferWhereUniqueInput!
  data: StockTransferUpdateWithoutToStoreInput!
}

input StockTransferUpdateManyWithWhereWithoutToStoreInput {
  where: StockTransferScalarWhereInput!
  data: StockTransferUpdateManyMutationInput!
}

input StoreUpdateToOneWithWhereWithoutCustomerInput {
  where: StoreWhereInput
  data: StoreUpdateWithoutCustomerInput!
}

input CustomerUpdateToOneWithWhereWithoutSalesInput {
  where: CustomerWhereInput
  data: CustomerUpdateWithoutSalesInput!
}

input ConsumerSaleUpdateToOneWithWhereWithoutSaleOrderInput {
  where: ConsumerSaleWhereInput
  data: ConsumerSaleUpdateWithoutSaleOrderInput!
}

input SaleOrderUpdateToOneWithWhereWithoutResellerPaymentInput {
  where: SaleOrderWhereInput
  data: SaleOrderUpdateWithoutResellerPaymentInput!
}

input ResellerPaymentUpdateWithWhereUniqueWithoutResellerInput {
  where: ResellerPaymentWhereUniqueInput!
  data: ResellerPaymentUpdateWithoutResellerInput!
}

input ResellerPaymentUpdateManyWithWhereWithoutResellerInput {
  where: ResellerPaymentScalarWhereInput!
  data: ResellerPaymentUpdateManyMutationInput!
}

input UserUpdateToOneWithWhereWithoutStockReceiptBatchReceivedBysInput {
  where: UserWhereInput
  data: UserUpdateWithoutStockReceiptBatchReceivedBysInput!
}

input StockReceiptBatchUpdateWithWhereUniqueWithoutStoreInput {
  where: StockReceiptBatchWhereUniqueInput!
  data: StockReceiptBatchUpdateWithoutStoreInput!
}

input StockReceiptBatchUpdateManyWithWhereWithoutStoreInput {
  where: StockReceiptBatchScalarWhereInput!
  data: StockReceiptBatchUpdateManyMutationInput!
}

input StoreUpdateToOneWithWhereWithoutTransfersInInput {
  where: StoreWhereInput
  data: StoreUpdateWithoutTransfersInInput!
}

input StockTransferUpdateWithWhereUniqueWithoutFromStoreInput {
  where: StockTransferWhereUniqueInput!
  data: StockTransferUpdateWithoutFromStoreInput!
}

input StockTransferUpdateManyWithWhereWithoutFromStoreInput {
  where: StockTransferScalarWhereInput!
  data: StockTransferUpdateManyMutationInput!
}

input StoreUpdateToOneWithWhereWithoutReceiptsInput {
  where: StoreWhereInput
  data: StoreUpdateWithoutReceiptsInput!
}

input StockReceiptBatchUpdateToOneWithWhereWithoutItemsInput {
  where: StockReceiptBatchWhereInput
  data: StockReceiptBatchUpdateWithoutItemsInput!
}

input StockReceiptBatchItemUpdateWithWhereUniqueWithoutProductVariantInput {
  where: StockReceiptBatchItemWhereUniqueInput!
  data: StockReceiptBatchItemUpdateWithoutProductVariantInput!
}

input StockReceiptBatchItemUpdateManyWithWhereWithoutProductVariantInput {
  where: StockReceiptBatchItemScalarWhereInput!
  data: StockReceiptBatchItemUpdateManyMutationInput!
}

input ProductVariantUpdateToOneWithWhereWithoutFacetsInput {
  where: ProductVariantWhereInput
  data: ProductVariantUpdateWithoutFacetsInput!
}

input VariantFacetValueUpdateWithWhereUniqueWithoutFacetInput {
  where: VariantFacetValueWhereUniqueInput!
  data: VariantFacetValueUpdateWithoutFacetInput!
}

input VariantFacetValueUpdateManyWithWhereWithoutFacetInput {
  where: VariantFacetValueScalarWhereInput!
  data: VariantFacetValueUpdateManyMutationInput!
}

input FacetUpdateToOneWithWhereWithoutProductsInput {
  where: FacetWhereInput
  data: FacetUpdateWithoutProductsInput!
}

input ProductFacetValueUpdateWithWhereUniqueWithoutProductInput {
  where: ProductFacetValueWhereUniqueInput!
  data: ProductFacetValueUpdateWithoutProductInput!
}

input ProductFacetValueUpdateManyWithWhereWithoutProductInput {
  where: ProductFacetValueScalarWhereInput!
  data: ProductFacetValueUpdateManyMutationInput!
}

input ProductUpdateToOneWithWhereWithoutVariantsInput {
  where: ProductWhereInput
  data: ProductUpdateWithoutVariantsInput!
}

input ProductVariantUpdateToOneWithWhereWithoutStockItemsInput {
  where: ProductVariantWhereInput
  data: ProductVariantUpdateWithoutStockItemsInput!
}

input StockUpdateWithWhereUniqueWithoutStoreInput {
  where: StockWhereUniqueInput!
  data: StockUpdateWithoutStoreInput!
}

input StockUpdateManyWithWhereWithoutStoreInput {
  where: StockScalarWhereInput!
  data: StockUpdateManyMutationInput!
}

input StockScalarWhereInput {
  AND: [StockScalarWhereInput!]
  OR: [StockScalarWhereInput!]
  NOT: [StockScalarWhereInput!]
  id: StringFilter
  storeId: StringFilter
  productVariantId: StringFilter
  quantity: IntFilter
  reserved: IntFilter
  reorderPoint: IntNullableFilter
  reorderQty: IntNullableFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
}

input StockUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
  quantity: IntFieldUpdateOperationsInput
  reserved: IntFieldUpdateOperationsInput
  reorderPoint: NullableIntFieldUpdateOperationsInput
  reorderQty: NullableIntFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input StoreUpdateToOneWithWhereWithoutCustomerProfileInput {
  where: StoreWhereInput
  data: StoreUpdateWithoutCustomerProfileInput!
}

input CustomerProfileUpdateToOneWithWhereWithoutUserInput {
  where: CustomerProfileWhereInput
  data: CustomerProfileUpdateWithoutUserInput!
}

input ResellerProfileUpdateToOneWithWhereWithoutUserInput {
  where: ResellerProfileWhereInput
  data: ResellerProfileUpdateWithoutUserInput!
}

input UserUpdateToOneWithWhereWithoutStoreInput {
  where: UserWhereInput
  data: UserUpdateWithoutStoreInput!
}

input StoreUpdateToOneWithWhereWithoutStocksInput {
  where: StoreWhereInput
  data: StoreUpdateWithoutStocksInput!
}

input StockUpdateWithWhereUniqueWithoutProductVariantInput {
  where: StockWhereUniqueInput!
  data: StockUpdateWithoutProductVariantInput!
}

input StockUpdateManyWithWhereWithoutProductVariantInput {
  where: StockScalarWhereInput!
  data: StockUpdateManyMutationInput!
}

input ProductVariantUpdateWithWhereUniqueWithoutProductInput {
  where: ProductVariantWhereUniqueInput!
  data: ProductVariantUpdateWithoutProductInput!
}

input ProductVariantUpdateManyWithWhereWithoutProductInput {
  where: ProductVariantScalarWhereInput!
  data: ProductVariantUpdateManyMutationInput!
}

input ProductVariantScalarWhereInput {
  AND: [ProductVariantScalarWhereInput!]
  OR: [ProductVariantScalarWhereInput!]
  NOT: [ProductVariantScalarWhereInput!]
  id: StringFilter
  productId: StringNullableFilter
  name: StringNullableFilter
  size: StringFilter
  concentration: StringFilter
  packaging: StringFilter
  barcode: StringNullableFilter
  price: FloatFilter
  resellerPrice: FloatFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
}

input ProductVariantUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  size: StringFieldUpdateOperationsInput
  concentration: StringFieldUpdateOperationsInput
  packaging: StringFieldUpdateOperationsInput
  barcode: NullableStringFieldUpdateOperationsInput
  price: FloatFieldUpdateOperationsInput
  resellerPrice: FloatFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input ProductUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  barcode: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input ProductVariantCreateInput {
  id: String
  name: String
  size: String!
  concentration: String!
  packaging: String!
  barcode: String
  price: Float!
  resellerPrice: Float!
  createdAt: DateTime
  updatedAt: DateTime
  product: ProductCreateNestedOneWithoutVariantsInput
  stockItems: StockCreateNestedManyWithoutProductVariantInput
  receiptItems: StockReceiptBatchItemCreateNestedManyWithoutProductVariantInput
  quotationItems: QuotationItemCreateNestedManyWithoutProductVariantInput
  resellerItems: ResellerSaleItemCreateNestedManyWithoutProductVariantInput
  consumerItems: ConsumerSaleItemCreateNestedManyWithoutProductVariantInput
  returnItems: SalesReturnItemCreateNestedManyWithoutProductVariantInput
  purchaseReturnItems: PurchaseReturnItemCreateNestedManyWithoutProductVariantInput
  transferItems: StockTransferItemCreateNestedManyWithoutProductVariantInput
  stats: ProductSalesStatsCreateNestedOneWithoutProductVariantInput
  PurchaseOrderItem: PurchaseOrderItemCreateNestedManyWithoutProductVariantInput
  StockMovementItem: StockMovementItemCreateNestedManyWithoutProductVariantInput
  PurchaseRequisitionItem: PurchaseRequisitionItemCreateNestedManyWithoutProductVariantInput
  SupplierCatalog: SupplierCatalogCreateNestedManyWithoutProductVariantInput
  SupplierQuoteItem: SupplierQuoteItemCreateNestedManyWithoutProductVariantInput
  ProductVariantTierPrice: ProductVariantTierPriceCreateNestedManyWithoutVariantInput
  facets: VariantFacetValueCreateNestedManyWithoutVariantInput
}

input ProductVariantCreateManyInput {
  id: String
  productId: String
  name: String
  size: String!
  concentration: String!
  packaging: String!
  barcode: String
  price: Float!
  resellerPrice: Float!
  createdAt: DateTime
  updatedAt: DateTime
}

input ProductVariantUpdateInput {
  id: StringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  size: StringFieldUpdateOperationsInput
  concentration: StringFieldUpdateOperationsInput
  packaging: StringFieldUpdateOperationsInput
  barcode: NullableStringFieldUpdateOperationsInput
  price: FloatFieldUpdateOperationsInput
  resellerPrice: FloatFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  product: ProductUpdateOneWithoutVariantsNestedInput
  stockItems: StockUpdateManyWithoutProductVariantNestedInput
  receiptItems: StockReceiptBatchItemUpdateManyWithoutProductVariantNestedInput
  quotationItems: QuotationItemUpdateManyWithoutProductVariantNestedInput
  resellerItems: ResellerSaleItemUpdateManyWithoutProductVariantNestedInput
  consumerItems: ConsumerSaleItemUpdateManyWithoutProductVariantNestedInput
  returnItems: SalesReturnItemUpdateManyWithoutProductVariantNestedInput
  purchaseReturnItems: PurchaseReturnItemUpdateManyWithoutProductVariantNestedInput
  transferItems: StockTransferItemUpdateManyWithoutProductVariantNestedInput
  stats: ProductSalesStatsUpdateOneWithoutProductVariantNestedInput
  PurchaseOrderItem: PurchaseOrderItemUpdateManyWithoutProductVariantNestedInput
  StockMovementItem: StockMovementItemUpdateManyWithoutProductVariantNestedInput
  PurchaseRequisitionItem: PurchaseRequisitionItemUpdateManyWithoutProductVariantNestedInput
  SupplierCatalog: SupplierCatalogUpdateManyWithoutProductVariantNestedInput
  SupplierQuoteItem: SupplierQuoteItemUpdateManyWithoutProductVariantNestedInput
  ProductVariantTierPrice: ProductVariantTierPriceUpdateManyWithoutVariantNestedInput
  facets: VariantFacetValueUpdateManyWithoutVariantNestedInput
}

input UpsertVariantSupplierCatalogInput {
  productVariantId: String!
  supplierId: String!
  defaultCost: Float!
  leadTimeDays: Float
  isPreferred: Boolean
}

input UpsertVariantTierPriceInput {
  productVariantId: String!
  tier: UserTier!
  price: Float!
}

input LooseProductVariantInput {
  productId: ID
  name: String
  size: String!
  concentration: String!
  packaging: String!
  barcode: String
  price: Float!
  resellerPrice: Float!
}

input LinkVariantToProductInput {
  variantId: ID!
  productId: ID!
}

input UnlinkVariantFromProductInput {
  variantId: ID!
}

input CreateFacetInput {
  name: String!
  code: String!
  isPrivate: Boolean
  values: [String!]!
}

input UpdateFacetInput {
  id: ID!
  name: String
  isPrivate: Boolean
  values: [String!]
}

input CreateUserInput {
  email: String!
  password: String!
  tier: UserTier
  referralCode: String
}

input UpdateCustomerProfileInput {
  fullName: String!
  phone: String
  email: String
  gender: String
  birthday: DateTime
  preferredStoreId: String
}

input ApplyResellerInput {
  email: String!
  password: String!
  requestedBillerId: String
  tier: UserTier!
  creditLimit: Float!
}

input ApproveResellerInput {
  tier: UserTier!
  creditLimit: Float!
  billerId: String
}

input AdminUpdateCustomerProfileInput {
  fullName: String!
  phone: String
  email: String
  gender: String
  birthday: DateTime
  preferredStoreId: String
  profileStatus: String
}

input AdminCreateCustomerInput {
  email: String!
  password: String!
  fullName: String
  phone: String
  preferredStoreId: String
  profileStatus: String
}

input CreateSupplierInput {
  name: String!
  contactInfo: String
  isFrequent: Boolean!
  creditLimit: Float!
  paymentTerms: String
  notes: String
}

input UpdateSupplierInput {
  id: ID!
  name: String
  contactInfo: String
  isFrequent: Boolean
  creditLimit: Float
  paymentTerms: String
  notes: String
}

input CreatePurchaseOrderInput {
  supplierId: ID!
  invoiceNumber: String!
  dueDate: DateTime!
  totalAmount: Float!
  items: [PurchaseOrderItemInput!]!
}

input PurchaseOrderItemInput {
  productVariantId: ID!
  quantity: Float!
  unitCost: Float!
}

input UpdatePurchaseOrderStatusInput {
  id: String!
  status: PurchaseOrderStatus!
}

input UpsertSupplierCatalogInput {
  supplierId: String!
  productVariantId: String!
  defaultCost: Float!
  leadTimeDays: Float
  isPreferred: Boolean
}

input UpsertSupplierCatalogBulkInput {
  items: [UpsertSupplierCatalogInput!]!
}

input SelectSupplierQuoteInput {
  quoteId: String!
  exclusive: Boolean = true
}

input RejectSupplierQuoteInput {
  quoteId: String!
  reason: String
}

input CloseRfqInput {
  requisitionId: String!
  rejectDrafts: Boolean = true
  rejectUnsubmitted: Boolean = true
}

input LinkSupplierUserInput {
  supplierId: ID!
  userId: ID
}

input CreateSupplierPaymentInput {
  supplierId: ID!
  purchaseOrderId: ID
  amount: Float!
  paymentDate: DateTime!
  method: String!
  notes: String
}

input CreatePurchaseRequisitionInput {
  storeId: String!
  requestedById: String!
  items: [CreatePurchaseRequisitionItemInput!]!
}

input CreatePurchaseRequisitionItemInput {
  productVariantId: String!
  requestedQty: Float!
  notes: String
}

input IdInput {
  id: String!
}

input RejectRequisitionInput {
  id: String!
  reason: String
}

input IssueRfqInput {
  requisitionId: String!
  supplierIds: [String!]
}

input SubmitSupplierQuoteInput {
  requisitionId: String!
  supplierId: String!
  items: [SupplierQuoteItemInput!]!
  validUntil: DateTime
  notes: String
}

input SupplierQuoteItemInput {
  productVariantId: String!
  unitCost: Float!
  minQty: Float
  leadTimeDays: Float
}

input CreatePOsFromSelectionInput {
  requisitionId: String!
  items: [PurchaseSelectionItemInput!]!
  dueDate: DateTime
}

input PurchaseSelectionItemInput {
  productVariantId: String!
  supplierId: String!
  quantity: Float
  unitCost: Float
}

input UpdatePurchaseOrderPhaseInput {
  id: String!
  phase: String!
}

input MarkPurchaseOrderReceivedInput {
  id: String!
}

input CreateRequisitionFromLowStockInput {
  storeId: String!
  requestedById: String!
}

input ProcessInvoiceUrlInput {
  url: String!
  storeId: String
  supplierName: String
  receivedById: String
  confirmedById: String
  createPurchaseOrder: Boolean
  createSupplierPayment: Boolean
  receiveStock: Boolean
}

input CreateInvoiceImportInput {
  url: String!
  supplierName: String
  storeId: String
}

input UpdateInvoiceImportInput {
  id: String!
  url: String
  supplierName: String
  storeId: String
  invoiceNumber: String
}

input ApproveInvoiceImportInput {
  id: String!
  supplierName: String
  storeId: String
  createPurchaseOrder: Boolean
  createSupplierPayment: Boolean
  receiveStock: Boolean
  receivedById: String
  confirmedById: String
  useParsedTotal: Boolean
  overrideLines: [InvoiceImportLineInput!]
}

input InvoiceImportLineInput {
  description: String!
  qty: Int!
  unitPrice: Float
  barcode: String
  discountPct: Float
  discountedUnitPrice: Float
  lineTotal: Float
}

input ReceiveStockBatchInput {
  purchaseOrderId: ID!
  storeId: ID!
  receivedById: ID!
  confirmedById: ID!
  waybillUrl: String
  items: [ReceiveStockBatchItemInput!]!
}

input ReceiveStockBatchItemInput {
  productVariantId: ID!
  quantity: Int!
}

input TransferStockInput {
  fromStoreId: ID!
  toStoreId: ID!
  requestedById: ID!
  approvedById: ID!
  items: [TransferStockItemInput!]!
}

input TransferStockItemInput {
  productVariantId: ID!
  quantity: Int!
}

input SetReorderSettingsInput {
  storeId: String!
  productVariantId: String!
  reorderPoint: Int
  reorderQty: Int
}

input CreateStaffInput {
  email: String!
  password: String!
  role: RoleName!
}

enum RoleName {
  ADMIN
  BILLER
  MANAGER
}

input AssignBillerInput {
  billerId: ID!
  resellerId: ID!
}

input CreateQuotationDraftInput {
  type: SaleType!
  channel: SaleChannel!
  storeId: ID!
  consumerId: ID
  resellerId: ID
  billerId: ID
  items: [CreateQuotationDraftItemInput!]!
}

input CreateQuotationDraftItemInput {
  productVariantId: ID!
  quantity: Float!
  unitPrice: Float!
}

input UpdateQuotationStatusInput {
  id: String!
  status: QuotationStatus!
}

input CheckoutConsumerQuotationInput {
  quotationId: ID!
  billerId: ID!
}

input ConfirmResellerQuotationInput {
  quotationId: ID!
  billerId: ID!
}

input BillerConvertQuotationInput {
  quotationId: ID!
  billerId: ID!
}

input CreateConsumerSaleInput {
  storeId: ID!
  customerId: ID!
  billerId: ID!
  channel: SaleChannel!
  items: [CreateConsumerSaleItemInput!]!
}

input CreateConsumerSaleItemInput {
  productVariantId: ID!
  quantity: Float!
  unitPrice: Float!
}

input CreateConsumerPaymentInput {
  saleOrderId: ID!
  consumerSaleId: ID!
  amount: Float!
  method: PaymentMethod!
  reference: String
}

input ConfirmConsumerPaymentInput {
  paymentId: ID!
}

input CreateConsumerReceiptInput {
  consumerSaleId: ID!
  issuedById: ID!
  receiptUrl: String
}

input FulfillConsumerSaleInput {
  id: ID!
}

input CreateResellerSaleInput {
  storeId: ID!
  billerId: ID!
  resellerId: ID!
  items: [CreateResellerSaleItemInput!]!
}

input CreateResellerSaleItemInput {
  productVariantId: ID!
  quantity: Float!
  unitPrice: Float!
}

input CreateResellerPaymentInput {
  saleOrderId: ID!
  resellerId: ID!
  resellerSaleId: ID
  amount: Float!
  method: PaymentMethod!
  reference: String
  receivedById: ID!
}

input CreateFulfillmentInput {
  saleOrderId: ID!
  type: String!
  deliveryPersonnelId: ID
  deliveryAddress: String
  cost: Float
}

input AssignFulfillmentPersonnelInput {
  saleOrderId: String!
  deliveryPersonnelId: String!
}

input UpdateFulfillmentStatusInput {
  saleOrderId: String!
  status: FulfillmentStatus!
  confirmationPin: String
}

input CreateSalesReturnInput {
  type: SaleType!
  consumerSaleId: String
  resellerSaleId: String
  returnedById: String!
  receivedById: String!
  returnLocation: ReturnLocation!
  items: [CreateSalesReturnItemInput!]!
}

input CreateSalesReturnItemInput {
  productVariantId: String!
  quantity: Int!
  condition: String!
}

input UpdateSalesReturnStatusInput {
  id: String!
  status: ReturnStatus!
  approvedById: String
}

input CreateOrderReturnInput {
  orderId: String!
  returnedById: String!
  receivedById: String!
  returnLocation: ReturnLocation!
  items: [CreateSalesReturnItemInput!]!
}

input CreatePurchaseReturnInput {
  supplierId: String!
  initiatedById: String!
  approvedById: String!
  reason: String
  items: [CreatePurchaseReturnItemInput!]!
}

input CreatePurchaseReturnItemInput {
  productVariantId: String!
  batchId: String!
  quantity: Int!
}

input FulfillPurchaseReturnInput {
  id: String!
}

input SendSupportMessageInput {
  message: String!
}

input AdminSendSupportMessageInput {
  userId: String!
  message: String!
}

input StoreCreateInput {
  id: String
  name: String!
  location: String
  isMain: Boolean
  createdAt: DateTime
  updatedAt: DateTime
  manager: UserCreateNestedOneWithoutStoreInput!
  stocks: StockCreateNestedManyWithoutStoreInput
  receipts: StockReceiptBatchCreateNestedManyWithoutStoreInput
  transfersOut: StockTransferCreateNestedManyWithoutFromStoreInput
  transfersIn: StockTransferCreateNestedManyWithoutToStoreInput
  customerSales: ConsumerSaleCreateNestedManyWithoutStoreInput
  salesReturns: SalesReturnCreateNestedManyWithoutStoreInput
  resellerSales: ResellerSaleCreateNestedManyWithoutStoreInput
  movements: StockMovementCreateNestedManyWithoutStoreInput
  Customer: CustomerCreateNestedManyWithoutPreferredStoreInput
  CustomerProfile: CustomerProfileCreateNestedManyWithoutPreferredStoreInput
  Quotation: QuotationCreateNestedManyWithoutStoreInput
  PurchaseRequisition: PurchaseRequisitionCreateNestedManyWithoutStoreInput
  purchaseOrders: PurchaseOrderCreateNestedManyWithoutStoreInput
  InvoiceImport: InvoiceImportCreateNestedManyWithoutStoreInput
}

input StoreCreateManyInput {
  id: String
  name: String!
  location: String
  isMain: Boolean
  managerId: String!
  createdAt: DateTime
  updatedAt: DateTime
}

input StoreUpdateInput {
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  location: NullableStringFieldUpdateOperationsInput
  isMain: BoolFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  manager: UserUpdateOneRequiredWithoutStoreNestedInput
  stocks: StockUpdateManyWithoutStoreNestedInput
  receipts: StockReceiptBatchUpdateManyWithoutStoreNestedInput
  transfersOut: StockTransferUpdateManyWithoutFromStoreNestedInput
  transfersIn: StockTransferUpdateManyWithoutToStoreNestedInput
  customerSales: ConsumerSaleUpdateManyWithoutStoreNestedInput
  salesReturns: SalesReturnUpdateManyWithoutStoreNestedInput
  resellerSales: ResellerSaleUpdateManyWithoutStoreNestedInput
  movements: StockMovementUpdateManyWithoutStoreNestedInput
  Customer: CustomerUpdateManyWithoutPreferredStoreNestedInput
  CustomerProfile: CustomerProfileUpdateManyWithoutPreferredStoreNestedInput
  Quotation: QuotationUpdateManyWithoutStoreNestedInput
  PurchaseRequisition: PurchaseRequisitionUpdateManyWithoutStoreNestedInput
  purchaseOrders: PurchaseOrderUpdateManyWithoutStoreNestedInput
  InvoiceImport: InvoiceImportUpdateManyWithoutStoreNestedInput
}

input UserCreateInput {
  id: String
  email: String!
  passwordHash: String!
  tier: UserTier
  referralCode: String
  referredBy: String
  createdAt: DateTime
  updatedAt: DateTime
  isEmailVerified: Boolean
  emailVerificationToken: String
  emailVerificationTokenExpiry: DateTime
  role: RoleCreateNestedOneWithoutUsersInput!
  resellerProfile: ResellerProfileCreateNestedOneWithoutUserInput
  customerProfile: CustomerProfileCreateNestedOneWithoutUserInput
  resellerPaymentsMade: ResellerPaymentCreateNestedManyWithoutResellerInput
  resellerPaymentsReceived: ResellerPaymentCreateNestedManyWithoutReceivedByInput
  adminLogs: AdminActionLogCreateNestedManyWithoutAdminInput
  supportMessages: SupportMessageCreateNestedManyWithoutUserInput
  ConsumerSale: ConsumerSaleCreateNestedManyWithoutBillerInput
  ConsumerSaleAdjustedBys: ConsumerSaleCreateNestedManyWithoutAdjustedByInput
  StockReceiptBatchReceivedBys: StockReceiptBatchCreateNestedManyWithoutReceivedByInput
  StockReceiptBatchConfirmedBys: StockReceiptBatchCreateNestedManyWithoutConfirmedByInput
  StockTransferRequests: StockTransferCreateNestedManyWithoutRequestedByInput
  StockTransferApprovals: StockTransferCreateNestedManyWithoutApprovedByInput
  Store: StoreCreateNestedManyWithoutManagerInput
  ConsumerReceipt: ConsumerReceiptCreateNestedManyWithoutIssuedByInput
  ResellerSales: ResellerSaleCreateNestedManyWithoutResellerInput
  BillerResellerSale: ResellerSaleCreateNestedManyWithoutBillerInput
  ResellerSale: ResellerSaleCreateNestedManyWithoutApprovedByInput
  SalesReturnReceivers: SalesReturnCreateNestedManyWithoutReceivedByInput
  SalesReturnRequesters: SalesReturnCreateNestedManyWithoutReturnedByInput
  SalesReturn: SalesReturnCreateNestedManyWithoutApprovedByInput
  PurchaseReturnInitiators: PurchaseReturnCreateNestedManyWithoutInitiatedByInput
  PurchaseReturnApprovers: PurchaseReturnCreateNestedManyWithoutApprovedByInput
  Payment: PaymentCreateNestedManyWithoutReceivedByInput
  ResellerTierHistory: ResellerTierHistoryCreateNestedManyWithoutUserInput
  ResellerTierHistoryChangedBys: ResellerTierHistoryCreateNestedManyWithoutAdminInput
  ResellerProfile: ResellerProfileCreateNestedManyWithoutBillerInput
  RequestedResellers: ResellerProfileCreateNestedManyWithoutRequestedBillerInput
  Notification: NotificationCreateNestedManyWithoutUserInput
  Fulfillment: FulfillmentCreateNestedManyWithoutDeliveryPersonnelInput
  BillerQuotation: QuotationCreateNestedManyWithoutBillerInput
  ResellerQuotation: QuotationCreateNestedManyWithoutResellerInput
  PurchaseRequisition: PurchaseRequisitionCreateNestedManyWithoutRequestedByInput
  Supplier: SupplierCreateNestedManyWithoutUserInput
}

input UserCreateManyInput {
  id: String
  email: String!
  passwordHash: String!
  roleId: String!
  tier: UserTier
  referralCode: String
  referredBy: String
  createdAt: DateTime
  updatedAt: DateTime
  isEmailVerified: Boolean
  emailVerificationToken: String
  emailVerificationTokenExpiry: DateTime
}

input UserUpdateInput {
  id: StringFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  passwordHash: StringFieldUpdateOperationsInput
  tier: NullableEnumUserTierFieldUpdateOperationsInput
  referralCode: NullableStringFieldUpdateOperationsInput
  referredBy: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  isEmailVerified: BoolFieldUpdateOperationsInput
  emailVerificationToken: NullableStringFieldUpdateOperationsInput
  emailVerificationTokenExpiry: NullableDateTimeFieldUpdateOperationsInput
  role: RoleUpdateOneRequiredWithoutUsersNestedInput
  resellerProfile: ResellerProfileUpdateOneWithoutUserNestedInput
  customerProfile: CustomerProfileUpdateOneWithoutUserNestedInput
  resellerPaymentsMade: ResellerPaymentUpdateManyWithoutResellerNestedInput
  resellerPaymentsReceived: ResellerPaymentUpdateManyWithoutReceivedByNestedInput
  adminLogs: AdminActionLogUpdateManyWithoutAdminNestedInput
  supportMessages: SupportMessageUpdateManyWithoutUserNestedInput
  ConsumerSale: ConsumerSaleUpdateManyWithoutBillerNestedInput
  ConsumerSaleAdjustedBys: ConsumerSaleUpdateManyWithoutAdjustedByNestedInput
  StockReceiptBatchReceivedBys: StockReceiptBatchUpdateManyWithoutReceivedByNestedInput
  StockReceiptBatchConfirmedBys: StockReceiptBatchUpdateManyWithoutConfirmedByNestedInput
  StockTransferRequests: StockTransferUpdateManyWithoutRequestedByNestedInput
  StockTransferApprovals: StockTransferUpdateManyWithoutApprovedByNestedInput
  Store: StoreUpdateManyWithoutManagerNestedInput
  ConsumerReceipt: ConsumerReceiptUpdateManyWithoutIssuedByNestedInput
  ResellerSales: ResellerSaleUpdateManyWithoutResellerNestedInput
  BillerResellerSale: ResellerSaleUpdateManyWithoutBillerNestedInput
  ResellerSale: ResellerSaleUpdateManyWithoutApprovedByNestedInput
  SalesReturnReceivers: SalesReturnUpdateManyWithoutReceivedByNestedInput
  SalesReturnRequesters: SalesReturnUpdateManyWithoutReturnedByNestedInput
  SalesReturn: SalesReturnUpdateManyWithoutApprovedByNestedInput
  PurchaseReturnInitiators: PurchaseReturnUpdateManyWithoutInitiatedByNestedInput
  PurchaseReturnApprovers: PurchaseReturnUpdateManyWithoutApprovedByNestedInput
  Payment: PaymentUpdateManyWithoutReceivedByNestedInput
  ResellerTierHistory: ResellerTierHistoryUpdateManyWithoutUserNestedInput
  ResellerTierHistoryChangedBys: ResellerTierHistoryUpdateManyWithoutAdminNestedInput
  ResellerProfile: ResellerProfileUpdateManyWithoutBillerNestedInput
  RequestedResellers: ResellerProfileUpdateManyWithoutRequestedBillerNestedInput
  Notification: NotificationUpdateManyWithoutUserNestedInput
  Fulfillment: FulfillmentUpdateManyWithoutDeliveryPersonnelNestedInput
  BillerQuotation: QuotationUpdateManyWithoutBillerNestedInput
  ResellerQuotation: QuotationUpdateManyWithoutResellerNestedInput
  PurchaseRequisition: PurchaseRequisitionUpdateManyWithoutRequestedByNestedInput
  Supplier: SupplierUpdateManyWithoutUserNestedInput
}

input UserUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  passwordHash: StringFieldUpdateOperationsInput
  tier: NullableEnumUserTierFieldUpdateOperationsInput
  referralCode: NullableStringFieldUpdateOperationsInput
  referredBy: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  isEmailVerified: BoolFieldUpdateOperationsInput
  emailVerificationToken: NullableStringFieldUpdateOperationsInput
  emailVerificationTokenExpiry: NullableDateTimeFieldUpdateOperationsInput
}