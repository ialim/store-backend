# Copy to .env and customize for docker-compose.prod.yml

# Used by docker-compose for image references
GHCR_OWNER=your-github-username

# Hostnames Traefik should route for backend and OCR services
BACKEND_HOST=api.example.com
OCR_HOST=ocr.example.com
TRAEFIK_ACME_EMAIL=admin@example.com
# Optional: use Let's Encrypt staging for first runs (avoids rate limits)
TRAEFIK_ACME_CASERVER=https://acme-staging-v02.api.letsencrypt.org/directory

# Backend CORS configuration (comma separated list of allowed admin UI origins)
ADMIN_UI_ORIGIN=https://your-admin-ui.netlify.app

# Run Prisma seeding automatically when the database is empty (set to true once during initial deploy)
RUN_PRISMA_SEED_ON_BOOT=false
# Seed variants and stock from variants.csv on first boot (requires file mounted at project root)
SEED_VARIANTS_FROM_CSV=false

# Postgres (if using the bundled db service)
POSTGRES_USER=postgres
POSTGRES_PASSWORD=postgres
POSTGRES_DB=store

# Optional: Direct DATABASE_URL override (otherwise constructed from above)
# DATABASE_URL=postgresql://postgres:postgres@localhost:5432/store?schema=public

# Backend runtime secrets (add what your app expects)
# JWT_SECRET=super-secret

# Frontend base URL used when building verification links
# FRONTEND_URL=https://app.example.com

# Outbound email configuration (prefer Amazon SES when available)
# MAIL_FROM=no-reply@example.com
# SES_REGION=us-east-1
# Optional: provide explicit credentials when not using IAM roles
# (AWS_ACCESS_KEY_ID/AWS_SECRET_ACCESS_KEY also work and are picked up automatically)
# SES_ACCESS_KEY_ID=your-aws-access-key
# SES_SECRET_ACCESS_KEY=your-aws-secret
# Fallback SMTP settings (used when SES_REGION is not set)
# SMTP_URL=smtp://user:pass@mail:587
# SMTP_HOST=mail.example.com
# SMTP_PORT=587
# SMTP_USER=smtp-user
# SMTP_PASS=smtp-pass
# SMTP_SECURE=false

# Prisma runtime toggles
# SKIP_PRISMA_GENERATE=false
# SKIP_PRISMA_MIGRATE=false

# Asset storage (MinIO/S3 compatible)
ASSET_S3_ENDPOINT=http://localhost:9000
ASSET_S3_REGION=us-east-1
ASSET_S3_ACCESS_KEY=minioadmin
ASSET_S3_SECRET_KEY=minioadmin
ASSET_S3_BUCKET=store-assets
ASSET_S3_FORCE_PATH_STYLE=true
ASSET_PUBLIC_URL=http://localhost:9000/store-assets
# Optional advanced overrides
# ASSET_S3_ACL=public-read
# ASSET_S3_PREFIX=assets
# ASSET_MAX_FILE_SIZE=26214400
